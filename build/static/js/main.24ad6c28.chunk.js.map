{"version":3,"sources":["api/example.js","api/handlers.js","store/LinksData/LinksData.jsx","store/LinksData/useLinksData.js","data/templates.js","store/Combinations/helpers.js","store/Combinations/useCombinations.js","store/Combinations/normalize.js","store/Combinations/Combinations.jsx","components/LinkToSource/LinkToSource.jsx","components/Showtime/Showtime.jsx","components/Review/Review.jsx","components/CanvasImage/helpers.js","components/CanvasImage/BackgroundImage.jsx","components/CanvasImage/BackgroundColor.jsx","components/CanvasImage/useCalcTextParams.js","components/CanvasImage/CanvasImage.jsx","serviceWorker.js","index.js","components/App/App.js"],"names":["res","titles","texts","images","src","getDataFromLink","axios","get","then","data","Context","createContext","ActionsContext","Provider","children","useState","linksData","setLinksData","actions","useMemo","value","useLinksData","templates","Object","freeze","key","width","height","image","position","text","align","vertical","padding","fontSize","from","to","useCombinations","combinations","setCombinations","calcCombinations","useCallback","map","linkData","getCartesian","object","entries","reduce","r","k","v","temp","forEach","s","Array","isArray","w","x","push","assign","title","template","block","LinkToSource","useContext","LinksData","useEffect","catch","error","console","warn","className","onSubmit","e","preventDefault","placeholder","type","Showtime","Combinations","i","background","Review","fit","cover","parentWidth","parentHeight","childWidth","childHeight","doRatio","cRatio","y","colorToRgba","color","rgb","g","b","a","BackgroundImage","url","rest","useImage","imageStatus","imageParams","setImageParams","naturalWidth","naturalHeight","BackgroundColor","fill","calcTextObj","textBox","fontFamily","Konva","Text","lineHeight","CanvasImage","previewWidth","textColor","stageRef","useRef","textRef","scale","setScale","size","setSize","textParams","textObj","newTextArrCount","Math","ceil","getHeight","textArr","length","calcedFontSize","attrs","log","useCalcTextParams","calcScale","ref","style","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.24ad6c28.chunk.js","sourcesContent":["export const req = {\n  links: ['']\n}\n\nexport const res = [{\n  titles: [\n    'Найдем вашу аудиторию и приведем новых клиентов из интернета'\n    // 'IN VINO VERITAS'\n  ],\n  texts: [\n    'Подберем эффективное решение для каждого — от локального бизнеса до международных интернет-магазинов. Работаем с клиентами из России и из-за рубежа'\n    // 'имеем доступ к бета-инструментам: вы всегда будете в курсе новых возможностей рекламных систем;',\n    // 'фиксированная стоимость услуг: вы платите ровно столько, сколько прописано в договоре. Никаких скрытых комиссий.'\n  ],\n  images: [\n    // {\n    //   src: 'https://elama.ru/info/build/assets/img/agencies/agencies-hero.png'\n    // }, {\n    //   src: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg'\n    // },\n    {\n      src: 'https://c4.wallpaperflare.com/wallpaper/410/867/750/vector-forest-sunset-forest-sunset-forest-wallpaper-thumb.jpg'\n    }\n  ]\n}]\n","import axios from 'axios'\nimport { res } from './example'\n\nexport const getDataFromLink = () => {\n  return axios.get('/')\n    .then(data => {\n      return res\n    })\n}\n","import React, { createContext } from 'react'\nimport { useLinksData } from './useLinksData'\n\nconst Context = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value\n  } = useLinksData()\n\n  return (\n    <Context.Provider value={value}>\n      <ActionsContext.Provider value={actions}>\n        { children }\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import { useState, useMemo } from 'react'\n\nexport const useLinksData = () => {\n  const [linksData, setLinksData] = useState([])\n\n  const actions = useMemo(() => ({\n    setLinksData\n  }), [setLinksData])\n\n  const value = useMemo(() => ({\n    linksData\n  }), [linksData])\n\n  return {\n    actions, value\n  }\n}\n","export const templates = Object.freeze([\n  {\n    key: 'key1',\n    width: 1200,\n    height: 628,\n    image: {\n      width: 600,\n      height: 628,\n      position: 'left'\n    },\n    text: {\n      width: 600,\n      height: 628,\n      position: 'right',\n      align: 'right',\n      vertical: 'bottom',\n      padding: 50,\n      fontSize: {\n        from: 45,\n        to: 80\n      }\n    }\n  },\n  {\n    key: 'key2',\n    width: 1080,\n    height: 1920,\n    image: {\n      width: 1080,\n      height: 900,\n      position: 'top'\n    },\n    text: {\n      width: 1080,\n      height: 1020,\n      position: 'bottom',\n      align: 'center',\n      vertical: 'center',\n      padding: 50,\n      fontSize: {\n        from: 80,\n        to: 180\n      }\n    }\n  },\n  {\n    key: 'key3',\n    width: 1080,\n    height: 1080,\n    image: {\n      width: 1080,\n      height: 500,\n      position: 'top'\n    },\n    text: {\n      width: 1080,\n      height: 580,\n      position: 'bottom',\n      align: 'left',\n      vertical: 'bottom',\n      padding: 50,\n      fontSize: {\n        from: 50,\n        to: 150\n      }\n    }\n  },\n  {\n    key: 'key4',\n    width: 1080,\n    height: 607,\n    image: {\n      width: 500,\n      height: 607,\n      position: 'left'\n    },\n    text: {\n      width: 580,\n      height: 607,\n      position: 'right',\n      align: 'left',\n      vertical: 'top',\n      padding: 50,\n      fontSize: {\n        from: 50,\n        to: 150\n      }\n    }\n  },\n\n  {\n    key: 'key11',\n    width: 600,\n    height: 628,\n    image: {\n      width: 300,\n      height: 628,\n      position: 'left'\n    },\n    text: {\n      width: 300,\n      height: 628,\n      position: 'right',\n      align: 'left',\n      vertical: 'top',\n      padding: 50,\n      fontSize: {\n        from: 25,\n        to: 80\n      }\n    }\n  },\n  {\n    key: 'key12',\n    width: 1200,\n    height: 428,\n    image: {\n      width: 600,\n      height: 628,\n      position: 'left'\n    },\n    text: {\n      width: 600,\n      height: 428,\n      position: 'right',\n      align: 'left',\n      vertical: 'top',\n      padding: 50,\n      fontSize: {\n        from: 25,\n        to: 80\n      }\n    }\n  }\n])\n","export function getCartesian (object) {\n  return Object.entries(object).reduce((r, [k, v]) => {\n    var temp = []\n    r.forEach(s =>\n      (Array.isArray(v) ? v : [v]).forEach(w =>\n        (w && typeof w === 'object' ? getCartesian(w) : [w]).forEach(x =>\n          temp.push(Object.assign({}, s, { [k]: x }))\n        )\n      )\n    )\n    return temp\n  }, [{}])\n}\n\nexport const skipEmptyArrays = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val && val.length) result[key] = val\n  })\n  return result\n}\n\nexport const skipEmptyProps = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val !== undefined) result[key] = val\n  })\n  return result\n}\n\nexport const downloadFromUrl = (url) => {\n  if (url) {\n    const link = document.createElement('a')\n    link.href = url\n    link.download = 'creatives.zip'\n    link.click()\n  }\n}\n","import { useState, useMemo, useCallback } from 'react'\nimport { templates } from 'data/templates'\nimport { getCartesian } from './helpers'\nimport { normalizeLinksData } from './normalize'\n\nexport const useCombinations = () => {\n  const [combinations, setCombinations] = useState([])\n\n  const calcCombinations = useCallback((linksData) => {\n    const combinations = linksData.map(linkData => {\n      const normalized = normalizeLinksData({ ...linkData, templates })\n      return getCartesian(normalized)\n    })\n    setCombinations(...combinations)\n  }, [setCombinations])\n\n  const actions = useMemo(() => ({\n    calcCombinations\n  }), [calcCombinations])\n\n  const value = useMemo(() => ({\n    combinations\n  }), [combinations])\n\n  return {\n    actions, value\n  }\n}\n","export const normalizeLinksData = (data) => {\n  return {\n    image: data.images,\n    title: data.titles,\n    text: data.texts,\n    template: data.templates\n  }\n}\n","import React, { createContext } from 'react'\nimport { useCombinations } from './useCombinations'\n\nconst Context = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value\n  } = useCombinations()\n\n  return (\n    <Context.Provider value={value}>\n      <ActionsContext.Provider value={actions}>\n        { children }\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import React, { useContext, useEffect } from 'react'\nimport { getDataFromLink } from 'api'\nimport { LinksData } from 'store'\nimport './style.css'\n\nconst block = 'LinkToSource'\n\nexport const LinkToSource = () => {\n  const { setLinksData } = useContext(LinksData.ActionsContext)\n\n  const onLinkSubmit = (e) => {\n    e.preventDefault()\n    getDataFromLink()\n      .then(data => {\n        setLinksData(data)\n      })\n      .catch(error => console.warn(error))\n  }\n\n  useEffect(() => {\n    getDataFromLink()\n      .then(data => {\n        setLinksData(data)\n      })\n      .catch(error => console.warn(error))\n  }, [])\n\n  return (\n    <form\n      className={`${block}-form`}\n      onSubmit={onLinkSubmit}\n    >\n      <input\n        className={`${block}-input`}\n        placeholder='Link to Source'\n      />\n      <button\n        className={`${block}-submit`}\n        type=\"submit\"\n      >\n        process\n      </button>\n    </form>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Combinations } from 'store'\nimport './style.css'\nimport { CanvasImage } from 'components'\n\nconst block = 'Showtime'\n\nexport const Showtime = () => {\n  const { combinations } = useContext(Combinations.Context)\n\n  if (!combinations) return null\n\n  return (\n    <div className={`${block}`}>\n      { combinations.map(({\n        template, image, text, title\n      }, i) => (\n        <div className={`${block}-item`} key={i}>\n          <CanvasImage\n            {...{\n              text: title,\n              template,\n              background: image.src\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { LinksData, Combinations } from 'store'\nimport './style.css'\n\nconst block = 'Review'\n\nexport const Review = () => {\n  const { linksData } = useContext(LinksData.Context)\n  const { calcCombinations } = useContext(Combinations.ActionsContext)\n\n  useEffect(() => {\n    calcCombinations(linksData)\n  }, [calcCombinations, linksData])\n\n  if (!linksData) return null\n\n  return (\n    <div className={`${block}`}>\n      { linksData.map((linkData, i) => (\n        <div className={`${block}-item`} key={i}>\n          <div className={`${block}-row`}>\n            { linkData.titles.map((title, i) => (\n              <div key={i}>{ title }</div>\n            )) }\n          </div>\n          <div className={`${block}-row`}>\n            { linkData.texts.map((text, i) => (\n              <strong key={i}>{ text }</strong>\n            )) }\n          </div>\n          <div className={`${block}-row`}>\n            { linkData.images.map((image, i) => (\n              <div key={i}>{ image.src }</div>\n            )) }\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","const fit = (cover) => {\n  return (parentWidth, parentHeight, childWidth, childHeight) => {\n    const doRatio = childWidth / childHeight\n    const cRatio = parentWidth / parentHeight\n    let width = parentWidth\n    let height = parentHeight\n\n    if (cover ? doRatio > cRatio : doRatio < cRatio) {\n      height = width / doRatio\n    } else {\n      width = height * doRatio\n    }\n\n    return {\n      width,\n      height,\n      x: (parentWidth - width) / 2,\n      y: (parentHeight - height) / 2\n    }\n  }\n}\n\nexport const contain = fit(true)\nexport const cover = fit(false)\n\nexport const generateBlobUrl = async (url) => {\n  const response = await fetch(url)\n  const blob = await response.blob()\n  return URL.createObjectURL(blob)\n}\n\nexport const downloadFromUrl = async ({ url, filename = 'file' }) => {\n  const blobUrl = await generateBlobUrl(url)\n\n  const link = document.createElement('a')\n  link.href = blobUrl\n  link.download = filename + '.png'\n  document.body.appendChild(link)\n  link.click()\n  link.remove()\n}\n\nexport const getDataUrl = ref => {\n  return HTMLCanvasElement.prototype.toDataURL.call(ref.current)\n}\n\nexport const colorToRgba = (color) => {\n  const {\n    rgb: { r, g, b, a }\n  } = color\n\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n","import React, { useEffect, useState } from 'react'\nimport { Image } from 'react-konva'\nimport useImage from 'use-image'\nimport { cover } from './helpers'\n\nexport const BackgroundImage = ({\n  width,\n  height,\n  url,\n  ...rest\n}) => {\n  const [image, imageStatus] = useImage(`${url}`)\n  const [imageParams, setImageParams] = useState({})\n\n  // crop and cover image\n  useEffect(() => {\n    if (imageStatus === 'loaded' && image) {\n      setImageParams(cover(\n        width,\n        height,\n        image.naturalWidth,\n        image.naturalHeight\n      ))\n    }\n  }, [width, height, image, imageStatus])\n\n  if (!image) return null\n\n  // console.log({\n  //   imageParams, rest\n  // })\n  return (\n    <Image\n      image={image}\n      {...imageParams}\n      {...rest}\n    />\n  )\n}\n","import React from 'react'\nimport { Rect } from 'react-konva'\n\nexport const BackgroundColor = ({\n  width,\n  height,\n  color\n}) => {\n  return (\n    <Rect {...{\n      width,\n      height,\n      fill: color\n    }}/>\n  )\n}\n","// import { useMemo } from 'react'\nimport Konva from 'konva'\n\nconst calcTextObj = ({\n  text, textBox, fontFamily, fontSize\n}) => {\n  return new Konva.Text({\n    x: 0,\n    y: 0,\n    text,\n    fontSize,\n    fontFamily,\n    lineHeight: 1.2,\n    padding: textBox.padding,\n    width: textBox.width\n  })\n}\n\nexport const useCalcTextParams = ({\n  textRef,\n  text,\n  textBox,\n  width,\n  height,\n  fontFamily\n}) => {\n  let fontSize = textBox.fontSize.from\n\n  let textObj = calcTextObj({\n    text, textBox, fontFamily, fontSize: textBox.fontSize.from\n  })\n\n  const newTextArrCount = Math.ceil((height / (textObj.getHeight())) * textObj.textArr.length)\n  const calcedFontSize = (height / (newTextArrCount * textObj.attrs.lineHeight))\n\n  // console.log(textObj.getHeight(), height, textBox.fontSize, calcedFontSize)\n  console.log(height, textObj.getHeight(), textBox.fontSize.from)\n\n  fontSize = calcedFontSize > textBox.fontSize.to ? textBox.fontSize.to : calcedFontSize\n\n  textObj = calcTextObj({\n    text, textBox, fontFamily, fontSize\n  })\n\n  console.log(height, textObj.getHeight(), fontSize)\n\n  // const tagHeight = textObj.textArr.reduce((sum, item) => {\n  //   return sum + (item.width > textBox.width ? Math.ceil(item.width / textBox.width) : 1)\n  // }, 0) *\n  // textBox.fontSize.from *\n  // textRef.current.attrs.lineHeight\n\n  const y = (() => {\n    switch (textBox.vertical) {\n      case 'bottom':\n        return height - textObj.getHeight()\n      case 'center':\n        return (height - textObj.getHeight()) / 2\n      case 'top':\n      default:\n        return 0\n    }\n  })()\n\n  console.log({\n    y,\n    textObj,\n    textRef,\n    text,\n    textBox,\n    width,\n    height,\n    fontFamily\n  })\n\n  return {\n    fontSize,\n    y\n  }\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport {\n  Stage,\n  Layer,\n  Text\n} from 'react-konva'\nimport { BackgroundImage } from './BackgroundImage'\nimport { BackgroundColor } from './BackgroundColor'\nimport { useCalcTextParams } from './useCalcTextParams'\nimport { colorToRgba } from './helpers'\n\nconst CanvasImage = ({\n  text = '',\n  template,\n  background,\n  previewWidth = 300,\n  textColor,\n  fontFamily = 'Arial'\n}) => {\n  const stageRef = useRef(null)\n  const textRef = useRef(null)\n\n  const [scale, setScale] = useState(0)\n  const [size, setSize] = useState({ width: 0, height: 0 })\n\n  const textParams = useCalcTextParams({\n    textRef,\n    text,\n    width: template.text.width,\n    height: template.text.height,\n    fontSize: template.text.fontSize.from,\n    fontFamily,\n    textBox: template.text\n  })\n\n  useEffect(() => {\n    const calcScale = previewWidth / (template.width || 1)\n    setScale(calcScale)\n    setSize({\n      width: calcScale * template.width,\n      height: calcScale * template.height\n    })\n  }, [setScale, previewWidth, template, setSize])\n\n  return (\n    <>\n      <Stage\n        width={size.width}\n        height={size.height}\n        ref={stageRef}\n        scale={{\n          x: scale,\n          y: scale\n        }}\n        style={{ background: 'red' }}\n      >\n        <Layer>\n          <BackgroundColor\n            width={template.width}\n            height={template.height}\n            color=\"#fa9\"\n          />\n          <BackgroundImage\n            url={background}\n            x={template.width - template.image.width}\n            y={template.height - template.image.height}\n            width={template.width}\n            height={template.image.height}\n          />\n          <Text\n            ref={textRef}\n            text={text}\n            fontSize={textParams.fontSize}\n            fontFamily={fontFamily}\n            lineHeight={1.2}\n            y={textParams.y}\n            width={template.text.width}\n            align={template.text.align}\n            fill={textColor ? colorToRgba(textColor) : '#000'}\n            padding={template.text.padding}\n          />\n        </Layer>\n      </Stage>\n    </>\n  )\n}\n\nexport default CanvasImage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'styles'\nimport { App } from 'components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport './style.css'\nimport { LinkToSource, Showtime, Review } from 'components'\nimport { LinksData, Combinations } from 'store'\n\nexport const App = () => {\n  return (\n    <LinksData.Provider>\n      <Combinations.Provider>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"App-header-text\">\n              In vino veritas\n              In vino veritas\n              In vino veritas\n              In vino veritas\n            </div>\n          </header>\n\n          <main className=\"App-main\">\n            <div className=\"App-main-row\">\n              <LinkToSource />\n            </div>\n            <div className=\"App-main-row\">\n              <Review />\n            </div>\n            <div className=\"App-main-row\">\n              <Showtime />\n            </div>\n          </main>\n        </div>\n      </Combinations.Provider>\n    </LinksData.Provider>\n  )\n}\n"],"sourceRoot":""}