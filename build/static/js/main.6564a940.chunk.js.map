{"version":3,"sources":["api/example.js","api/handlers.js","store/LinksData/useLoadImages.js","store/LinksData/LinksData.jsx","store/LinksData/useLinksData.js","data/templates.js","store/Combinations/helpers.js","store/Combinations/useCombinations.js","store/Combinations/normalize.js","store/Combinations/Combinations.jsx","components/LinkToSource/LinkToSource.jsx","components/Showtime/Showtime.jsx","components/CloseButton/styled.js","components/Review/styled.js","components/CloseButton/CloseButton.jsx","components/Review/components/ImageItem.jsx","components/Review/components/TextItem.jsx","components/Review/Review.jsx","vendor/smartLabel/lib.js","vendor/smartLabel/container-manager.js","vendor/smartLabel/SmartlabelManager.js","components/Canvas/helpers/calcText.js","components/Canvas/helpers/calcImageFit.js","components/Canvas/editCanvas.js","components/Canvas/Canvas.jsx","serviceWorker.js","index.js","components/App/App.js"],"names":["res","titles","texts","images","src","getDataFromLink","axios","get","then","data","loadImage","memoized","Promise","resolve","img","Image","onload","createImageBitmap","preloadImages","all","map","image","Context","createContext","ActionsContext","Provider","children","useState","linksData","setLinksData","setLinksDataFieldItem","useCallback","input","field","i","j","removeLinksFieldItem","splice","actions","useMemo","value","useLinksData","loadImagesActions","reduce","sum","cur","concat","useEffect","useLoadImages","mergedActions","templates","Object","freeze","key","width","height","backgroundColor","background","x","y","isCover","textAlign","verticalAlign","hPadding","vPadding","fontSize","lineHeight","fontFamily","fontWeight","textColor","autoHeight","pinTo","useCombinations","combinations","setCombinations","calcCombinations","linkData","object","normalized","title","text","template","entries","r","k","v","temp","forEach","s","Array","isArray","w","push","assign","length","sort","a","b","block","LinkToSource","useContext","LinksData","catch","error","console","warn","className","onSubmit","e","preventDefault","placeholder","type","Showtime","Combinations","Button","styled","button","Remove","props","Wrapper","div","DataFromLink","Section","TextsWrapper","ImagesWrapper","Item","ImageItem","Title","h2","onRemove","onClick","TextItem","onChange","contentEditable","suppressContentEditableWarning","onBlur","Review","changeFieldItem","event","target","textContent","removeFieldItem","index","lib","init","win","doc","document","userAgent","navigator","ceil","Math","floor","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","RegExp","xmlTagRegEx","brRegex","ltgtRegex","nbspRegex","htmlSpecialEntityRegex","brReplaceRegex","testStrAvg","parentContainerStyle","position","top","whiteSpace","padding","overflow","supportedStyle","font","fontStyle","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","test","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","body","container","offsetWidth","offsetHeight","appendChild","createElement","setAttribute","getElementsByTagName","getNearestBreakIndex","maxWidth","sl","difference","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","parseStyle","style","parsedStyle","fontVariant","setLineHeight","styleObj","fSize","parseInt","_getCleanHeight","replace","Number","_getDimentionUsingDiv","_container","join","innerHTML","_getDimentionUsingCanvas","ctx","measureText","_hasOnlyBRTag","_getDimentionOfMultiLineText","len","textWidth","rawText","textAr","_getTextArray","textHeight","indiSizeStore","max","detailObj","tempLen","brText","tempText","finaltextAr","split","_findLastIndex","array","item","slLib","window","documentSupport","SVG_BBOX_CORRECTION","ContainerManager","parentContainer","isBrowserLess","maxContainers","svg","this","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","prototype","diff","containerObj","keyStr","undefined","prev","next","removeContainer","addContainer","_makeDivNode","node","display","avgCharWidth","svgText","getBBox","ellipsesWidth","dotWidth","charCache","cObj","parentNode","removeChild","dispose","M","round","htmlSplCharSpace","SmartLabelManager","useEllipses","options","wrapper","prop","canvas","maxCacheLimit","isFinite","getElementById","getContext","_containerManager","_showNoEllipses","_init","oldStyle","setStyle","textToLines","smartlabel","toString","lines","_calCharDimWithCache","calculateDifference","size","tw","twi","cachedStyle","asymmetricDifference","cache","advancedCacheKey","cacheName","cacheInitName","maxAdvancedCacheLimit","_advancedCache","_advancedCacheKey","_getDimention","repeat","shift","requireDiv","_containerObj","str","bbox","_isSameStyle","_setStyleOfCanvas","hashString","sCont","indexOf","_context","context","_cache","_lineHeight","_styleNotSet","_setStyleOfDiv","_updateStyle","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","hasOnlyBrTag","dimentionObj","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","match","getSize","cleanText","tooltext","spaceIdx","dashIdx","offsetLeft","offsetTop","insertBefore","Error","detailedCalculationFlag","config","textArr","letter","lSize","l","cumulativeSize","getOriSize","id","SmartLabel","calcText","generalizedSmartlabel","calcImageFit","sourceWidth","sourceHeight","targetWidth","targetHeight","scale","min","drawCover","yoyo","bitmap","drawImage","drawText","fillStyle","fillRect","textBaseline","xPos","align","getXPos","yPos","getYPos","lineOfText","fillText","drawBackground","editCanvas","state","Canvas","isReady","setReady","canvasElRef","ref","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6564a940.chunk.js","sourcesContent":["export const req = {\r\n  links: ['']\r\n}\r\n\r\nexport const res = [{\r\n  titles: [\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\r\n    'Найдем вашу аудиторию и приведем новых клиентов из интернета'\r\n    // 'IN VINO VERITAS'\r\n  ],\r\n  texts: [\r\n    'Подберем эффективное решение для каждого — от локального бизнеса до международных интернет-магазинов. Работаем с клиентами из России и из-за рубежа'\r\n    // 'имеем доступ к бета-инструментам: вы всегда будете в курсе новых возможностей рекламных систем;',\r\n    // 'фиксированная стоимость услуг: вы платите ровно столько, сколько прописано в договоре. Никаких скрытых комиссий.'\r\n  ],\r\n  images: [\r\n    {\r\n      src: 'https://elama.ru/info/build/assets/img/agencies/agencies-hero.png'\r\n    }, {\r\n      src: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg'\r\n    },\r\n    {\r\n      src: 'https://c4.wallpaperflare.com/wallpaper/410/867/750/vector-forest-sunset-forest-sunset-forest-wallpaper-thumb.jpg'\r\n    },\r\n    {\r\n      src: 'https://lh3.googleusercontent.com/proxy/RXXwgLhci5uy7jq2FVJ1FwHQSHD3a2Kvz72kURPKHeA2DOMnpF19JW44V6Jt_oReeYTmLbUBZwdBEjDKGodfskGpt9Ajzq3a2g45shLOa23dQ2MzWZfipqRIwKJ0bsx5s84Ifw'\r\n    },\r\n    {\r\n      src: 'https://c4.wallpaperflare.com/wallpaper/246/739/689/digital-digital-art-artwork-illustration-abstract-hd-wallpaper-thumb.jpg'\r\n    }\r\n  ]\r\n}]\r\n","import axios from 'axios'\r\nimport { res } from './example'\r\n\r\nexport const getDataFromLink = () => {\r\n  return axios.get('/')\r\n    .then(data => {\r\n      return res\r\n    })\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nconst loadImage = (() => {\r\n  const memoized = {}\r\n\r\n  return (src) => {\r\n    return new Promise((resolve) => {\r\n      if (!src) return resolve(null)\r\n      if (memoized[src]) resolve(memoized[src])\r\n\r\n      const img = new Image()\r\n      img.src = src\r\n\r\n      img.onload = () => {\r\n        memoized[src] = createImageBitmap(img)\r\n        resolve(memoized[src])\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst preloadImages = (images) => {\r\n  return Promise.all(\r\n    images.map(image => loadImage(image.src))\r\n  )\r\n}\r\n\r\nexport const useLoadImages = (linksData) => {\r\n  const images = linksData.reduce((sum, cur) => {\r\n    return sum.concat(cur.images)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (images) {\r\n      preloadImages(images)\r\n    }\r\n  }, [images])\r\n\r\n  return {\r\n    loadImage, preloadImages\r\n  }\r\n}\r\n","import React, { createContext, useMemo } from 'react'\r\nimport { useLinksData } from './useLinksData'\r\nimport { useLoadImages } from './useLoadImages'\r\n\r\nconst Context = createContext([])\r\nconst ActionsContext = createContext({})\r\n\r\nconst Provider = ({\r\n  children\r\n}) => {\r\n  const {\r\n    actions, value\r\n  } = useLinksData()\r\n\r\n  const loadImagesActions = useLoadImages(value.linksData)\r\n\r\n  const mergedActions = useMemo(() => ({\r\n    ...actions,\r\n    ...loadImagesActions\r\n  }), [actions, loadImagesActions])\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      <ActionsContext.Provider value={mergedActions}>\r\n        { children }\r\n      </ActionsContext.Provider>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport {\r\n  Context, ActionsContext, Provider\r\n}\r\n","import { useState, useMemo, useCallback } from 'react'\r\n\r\nexport const useLinksData = () => {\r\n  const [linksData, setLinksData] = useState([])\r\n\r\n  const setLinksDataFieldItem = useCallback(({\r\n    input, field, i, j\r\n  }) => {\r\n    setLinksData(data => {\r\n      data[i][field][j] = input\r\n      return [...data]\r\n    })\r\n  }, [])\r\n\r\n  const removeLinksFieldItem = useCallback(({\r\n    field, i, j\r\n  }) => {\r\n    setLinksData(data => {\r\n      data[i][field].splice(j, 1)\r\n      return [...data]\r\n    })\r\n  }, [])\r\n\r\n  const actions = useMemo(() => ({\r\n    setLinksData, setLinksDataFieldItem, removeLinksFieldItem\r\n  }), [setLinksData, setLinksDataFieldItem, removeLinksFieldItem])\r\n\r\n  const value = useMemo(() => ({\r\n    linksData\r\n  }), [linksData])\r\n\r\n  return {\r\n    actions, value\r\n  }\r\n}\r\n","export const templates = Object.freeze([\r\n  {\r\n    key: 'key1',\r\n    width: 1080,\r\n    height: 1920,\r\n    backgroundColor: '#212121',\r\n    background: {\r\n      x: 0,\r\n      y: 380,\r\n      width: 1080,\r\n      height: 650,\r\n      isCover: false\r\n    },\r\n    texts: [{\r\n      x: 0,\r\n      y: 1200,\r\n      width: 1080,\r\n      height: 240,\r\n      textAlign: 'left',\r\n      verticalAlign: 'center',\r\n      hPadding: 100,\r\n      vPadding: 20,\r\n      fontSize: 72,\r\n      lineHeight: 84,\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      textColor: '#fff',\r\n      backgroundColor: ''\r\n    },\r\n    {\r\n      x: 0,\r\n      y: 1460,\r\n      width: 1080,\r\n      height: 300,\r\n      autoHeight: true,\r\n      textAlign: 'left',\r\n      verticalAlign: 'top',\r\n      hPadding: 100,\r\n      vPadding: 10,\r\n      fontSize: 40,\r\n      lineHeight: 70,\r\n      fontFamily: 'Arial',\r\n      textColor: '#fff',\r\n      backgroundColor: ''\r\n    }]\r\n  },\r\n  {\r\n    key: 'key2',\r\n    width: 1080,\r\n    height: 1080,\r\n    backgroundColor: '#212121',\r\n    background: {\r\n      x: 0,\r\n      y: 100,\r\n      width: 1080,\r\n      height: 460,\r\n      isCover: false\r\n    },\r\n    texts: [{\r\n      x: 0,\r\n      y: 600,\r\n      width: 1080,\r\n      height: 200,\r\n      textAlign: 'center',\r\n      verticalAlign: 'center',\r\n      hPadding: 100,\r\n      vPadding: 20,\r\n      fontSize: 66,\r\n      lineHeight: 80,\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      textColor: '#fff',\r\n      backgroundColor: ''\r\n    },\r\n    {\r\n      x: 0,\r\n      y: 820,\r\n      width: 1080,\r\n      height: 300,\r\n      textAlign: 'center',\r\n      verticalAlign: 'top',\r\n      hPadding: 100,\r\n      vPadding: 10,\r\n      fontSize: 32,\r\n      lineHeight: 52,\r\n      fontFamily: 'Arial',\r\n      textColor: '#fff',\r\n      backgroundColor: '',\r\n      autoHeight: true,\r\n      pinTo: 'bottom'\r\n    }]\r\n  },\r\n  {\r\n    key: 'key3',\r\n    width: 1080,\r\n    height: 610,\r\n    backgroundColor: '#212121',\r\n    background: {\r\n      x: 40,\r\n      y: 40,\r\n      width: 520,\r\n      height: 530,\r\n      isCover: false\r\n    },\r\n    texts: [{\r\n      x: 560,\r\n      y: 50,\r\n      width: 520,\r\n      height: 250,\r\n      textAlign: 'left',\r\n      verticalAlign: 'center',\r\n      hPadding: 50,\r\n      vPadding: 20,\r\n      fontSize: 48,\r\n      lineHeight: 60,\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      textColor: '#fff',\r\n      backgroundColor: ''\r\n    },\r\n    {\r\n      x: 560,\r\n      y: 300,\r\n      width: 520,\r\n      height: 300,\r\n      textAlign: 'left',\r\n      verticalAlign: 'top',\r\n      hPadding: 50,\r\n      vPadding: 10,\r\n      fontSize: 28,\r\n      lineHeight: 42,\r\n      fontFamily: 'Arial',\r\n      textColor: '#fff',\r\n      backgroundColor: '',\r\n      autoHeight: true,\r\n      pinTo: 'bottom'\r\n    }]\r\n  },\r\n  {\r\n    key: 'key4',\r\n    width: 1080,\r\n    height: 1080,\r\n    backgroundColor: '#212121',\r\n    background: {\r\n      x: 0,\r\n      y: 0,\r\n      width: 1080,\r\n      height: 1080,\r\n      isCover: true\r\n    },\r\n    texts: [{\r\n      x: 0,\r\n      y: 0,\r\n      width: 1080,\r\n      height: 600,\r\n      textAlign: 'center',\r\n      verticalAlign: 'center',\r\n      hPadding: 100,\r\n      vPadding: 40,\r\n      fontSize: 130,\r\n      lineHeight: 140,\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      textColor: '#fff',\r\n      backgroundColor: '#cc2600cc'\r\n    },\r\n    {\r\n      x: 0,\r\n      y: 930,\r\n      width: 1080,\r\n      height: 150,\r\n      textAlign: 'center',\r\n      verticalAlign: 'center',\r\n      hPadding: 100,\r\n      vPadding: 10,\r\n      fontSize: 32,\r\n      lineHeight: 52,\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      textColor: '#000',\r\n      backgroundColor: '#fffc',\r\n      pinTo: 'bottom'\r\n    }]\r\n  }\r\n])\r\n","export function getCartesian (object) {\r\n  return Object.entries(object).reduce((r, [k, v]) => {\r\n    var temp = []\r\n    r.forEach(s =>\r\n      (Array.isArray(v) ? v : [v]).forEach(w =>\r\n        (w && [w]).forEach(x =>\r\n          temp.push(Object.assign({}, s, { [k]: x }))\r\n        )\r\n      )\r\n    )\r\n    return temp\r\n  }, [{}])\r\n}\r\n\r\nexport const skipEmptyArrays = (obj) => {\r\n  const result = {}\r\n  Object.entries(obj).forEach(([key, val]) => {\r\n    if (val && val.length) result[key] = val\r\n  })\r\n  return result\r\n}\r\n\r\nexport const skipEmptyProps = (obj) => {\r\n  const result = {}\r\n  Object.entries(obj).forEach(([key, val]) => {\r\n    if (val !== undefined) result[key] = val\r\n  })\r\n  return result\r\n}\r\n\r\nexport const downloadFromUrl = (url) => {\r\n  if (url) {\r\n    const link = document.createElement('a')\r\n    link.href = url\r\n    link.download = 'creatives.zip'\r\n    link.click()\r\n  }\r\n}\r\n","import { useState, useMemo, useCallback } from 'react'\r\nimport { templates } from 'data/templates'\r\nimport { getCartesian } from './helpers'\r\nimport { normalizeLinksData } from './normalize'\r\n\r\nexport const useCombinations = () => {\r\n  const [combinations, setCombinations] = useState([])\r\n\r\n  const calcCombinations = useCallback((linksData) => {\r\n    const combinations = linksData.map(linkData => {\r\n      const normalized = normalizeLinksData({ ...linkData, templates })\r\n      return getCartesian(normalized)\r\n    })\r\n    if (combinations.length) {\r\n      setCombinations(combinations[0].sort((a, b) => {\r\n        return a.template.key > b.template.key\r\n          ? 1\r\n          : a.template.key < b.template.key\r\n            ? -1\r\n            : 0\r\n      }))\r\n    }\r\n  }, [setCombinations])\r\n\r\n  const actions = useMemo(() => ({\r\n    calcCombinations\r\n  }), [calcCombinations])\r\n\r\n  const value = useMemo(() => ({\r\n    combinations\r\n  }), [combinations])\r\n\r\n  return {\r\n    actions, value\r\n  }\r\n}\r\n","export const normalizeLinksData = (data) => {\r\n  return {\r\n    image: data.images,\r\n    title: data.titles,\r\n    text: data.texts,\r\n    template: data.templates\r\n  }\r\n}\r\n","import React, { createContext } from 'react'\r\nimport { useCombinations } from './useCombinations'\r\n\r\nconst Context = createContext([])\r\nconst ActionsContext = createContext({})\r\n\r\nconst Provider = ({\r\n  children\r\n}) => {\r\n  const {\r\n    actions, value\r\n  } = useCombinations()\r\n\r\n  return (\r\n    <Context.Provider value={value}>\r\n      <ActionsContext.Provider value={actions}>\r\n        { children }\r\n      </ActionsContext.Provider>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport {\r\n  Context, ActionsContext, Provider\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { getDataFromLink } from 'api'\r\nimport { LinksData } from 'store'\r\nimport './style.css'\r\n\r\nconst block = 'LinkToSource'\r\n\r\nexport const LinkToSource = () => {\r\n  const { setLinksData } = useContext(LinksData.ActionsContext)\r\n\r\n  const onLinkSubmit = (e) => {\r\n    e.preventDefault()\r\n    getDataFromLink()\r\n      .then(data => {\r\n        setLinksData(data)\r\n      })\r\n      .catch(error => console.warn(error))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDataFromLink()\r\n      .then(data => {\r\n        setLinksData(data)\r\n      })\r\n      .catch(error => console.warn(error))\r\n  }, [setLinksData])\r\n\r\n  return (\r\n    <form\r\n      className={`${block}-form`}\r\n      onSubmit={onLinkSubmit}\r\n    >\r\n      <input\r\n        className={`${block}-input`}\r\n        placeholder='Link to Source'\r\n      />\r\n      <button\r\n        className={`${block}-submit`}\r\n        type=\"submit\"\r\n      >\r\n        process\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Combinations } from 'store'\r\nimport './style.css'\r\nimport { Canvas } from 'components'\r\n\r\nconst block = 'Showtime'\r\n\r\nexport const Showtime = () => {\r\n  const { combinations } = useContext(Combinations.Context)\r\n\r\n  if (!combinations) return null\r\n\r\n  return (\r\n    <div className={`${block}`}>\r\n      { combinations.map(({\r\n        template, image, text, title\r\n      }, i) => (\r\n        <div className={`${block}-item`} key={i}>\r\n          <Canvas\r\n            {...{\r\n              texts: [title, text],\r\n              template,\r\n              background: image.src\r\n            }}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: red;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n\r\n  &:hover {\r\n    background-color: #f00a;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { CloseButton } from 'components/CloseButton'\r\n\r\nexport const Remove = styled(CloseButton)`\r\n  opacity: 0;\r\n  transition: opacity .3s ease;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  word-break: break-word;\r\n  display: grid;\r\n  grid-gap: 50px;\r\n`\r\n\r\nexport const DataFromLink = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n`\r\n\r\nexport const Section = styled.div`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n`\r\n\r\nexport const TextsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n`\r\n\r\nexport const ImagesWrapper = styled(Section)`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n`\r\n\r\nexport const Item = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  padding: 10px 20px;\r\n  background: #fff3;\r\n  border-radius: 3px;\r\n\r\n  &:hover ${Remove} {\r\n    opacity: 1;\r\n    transition: opacity .1s ease;\r\n  }\r\n`\r\n\r\nexport const ImageItem = styled(Item)`\r\n  padding: 0;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: normal;\r\n  margin: 0;\r\n`\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { Button } from './styled'\r\n\r\nexport const CloseButton = (props) => {\r\n  return (\r\n    <Button {...props}>\r\n      ×\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ImageItem as Wrapper, Image, Remove\r\n} from '../styled'\r\n\r\nexport const ImageItem = ({\r\n  image, onRemove\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <Image src={image.src} />\r\n      <Remove\r\n        onClick={onRemove}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Item, Remove\r\n} from '../styled'\r\n\r\nexport const TextItem = ({\r\n  text, onChange, onRemove\r\n}) => {\r\n  return (\r\n    <Item>\r\n      <span\r\n        contentEditable\r\n        suppressContentEditableWarning\r\n        onBlur={onChange}\r\n      >\r\n        { text }\r\n      </span>\r\n      <Remove\r\n        onClick={onRemove}\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useCallback } from 'react'\r\nimport { LinksData, Combinations } from 'store'\r\nimport {\r\n  Wrapper, DataFromLink, Section, TextsWrapper, ImagesWrapper, Title\r\n} from './styled'\r\nimport { ImageItem, TextItem } from './components'\r\n\r\nexport const Review = () => {\r\n  const { linksData } = useContext(LinksData.Context)\r\n  const {\r\n    setLinksDataFieldItem, removeLinksFieldItem\r\n  } = useContext(LinksData.ActionsContext)\r\n  const { calcCombinations } = useContext(Combinations.ActionsContext)\r\n\r\n  useEffect(() => {\r\n    calcCombinations(linksData)\r\n  }, [calcCombinations, linksData])\r\n\r\n  const changeFieldItem = useCallback(props => event => {\r\n    setLinksDataFieldItem({\r\n      ...props,\r\n      input: event.target.textContent\r\n    })\r\n  }, [setLinksDataFieldItem])\r\n\r\n  const removeFieldItem = useCallback(props => () => {\r\n    removeLinksFieldItem(props)\r\n  }, [removeLinksFieldItem])\r\n\r\n  if (!linksData) return null\r\n\r\n  return (\r\n    <Wrapper>\r\n      {linksData.map((linkData, i) => (\r\n        <DataFromLink key={i}>\r\n          <Section>\r\n            <Title>\r\n              Заголовок\r\n            </Title>\r\n            <TextsWrapper>\r\n              {linkData.titles.map((title, j) => (\r\n                <TextItem\r\n                  key={`${j}_${title}`}\r\n                  text={title}\r\n                  index={j}\r\n                  onChange={changeFieldItem({\r\n                    field: 'titles', i, j\r\n                  })}\r\n                  onRemove={removeFieldItem({\r\n                    field: 'titles', i, j\r\n                  })}\r\n                />\r\n              ))}\r\n            </TextsWrapper>\r\n          </Section>\r\n\r\n          <Section>\r\n            <Title>\r\n              Описание\r\n            </Title>\r\n            <TextsWrapper>\r\n              {linkData.texts.map((text, j) => (\r\n                <TextItem\r\n                  key={`${j}_${text}`}\r\n                  text={text}\r\n                  index={j}\r\n                  onChange={changeFieldItem({\r\n                    field: 'texts', i, j\r\n                  })}\r\n                  onRemove={removeFieldItem({\r\n                    field: 'texts', i, j\r\n                  })}\r\n                />\r\n              ))}\r\n            </TextsWrapper>\r\n          </Section>\r\n\r\n          <Section>\r\n            <Title>\r\n              Изображение\r\n            </Title>\r\n            <ImagesWrapper>\r\n              {linkData.images.map((image, j) => (\r\n                <ImageItem\r\n                  key={`${j}_${image.src}`}\r\n                  image={image}\r\n                  index={j}\r\n                  onRemove={removeFieldItem({\r\n                    field: 'images', i, j\r\n                  })}\r\n                />\r\n              ))}\r\n            </ImagesWrapper>\r\n          </Section>\r\n        </DataFromLink>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n","/* eslint-disable */\n\nvar lib = {\n\tinit: function (win) {\n\t\tvar doc = win.document,\n        \tnav = win.navigator,\n        \tuserAgent = nav.userAgent,\n        \tDIV = 'DIV',\n        \tceil = Math.ceil,\n        \tfloor = Math.floor,\n        \tclsNameSpace = 'fusioncharts-smartlabel-',\n        \tcontainerClass = clsNameSpace + 'container',\n        \tclassNameWithTag = clsNameSpace + 'tag',\n        \tclassNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\t\t\t\n\t\t\tmaxDefaultCacheLimit: 1000,\n\n\t\t\t// The regex we get from new RegExp does not perform the work as intended\n\n\t\t\t// classNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\t\t\t\n\t\t\t// classNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tclassNameReg: /\\bfusioncharts-smartlabel-tag\\b/,\n\n\t\t\tclassNameBrReg: /\\bfusioncharts-smartlabel-br\\b/,\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\t\t\t\n\t\t\tspanAdditionReplacer: '$1<span class=\"'+ classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?'+ classNameWithTag +'[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tbrRegex: new RegExp('({br[ ]*})|(<br[ ]*>)|(<br[ ]*\\/>)|(<BR[ ]*\\/>)|(<br\\\\>)', 'g'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tnbspRegex: /&nbsp;|&#160;|&#xA0;/g,\n\n\t\t\thtmlSpecialEntityRegex: /&amp;|&quot;|&lt;|&gt;/g,\n        \t\n        \tbrReplaceRegex: /<br\\/>/ig,\n\n        \ttestStrAvg: 'WgI',\n\n        \t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t    position: 'absolute',\n\t\t\t    top: '-9999em',\n\t\t\t    whiteSpace: 'nowrap',\n\t\t\t    padding: '0px',\n\t\t\t    width: '1px',\n\t\t\t    height: '1px',\n\t\t\t    overflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t    font: 'font',\n\t\t\t    fontFamily: 'font-family',\n\t\t\t    'font-family': 'font-family',\n\t\t\t    fontWeight: 'font-weight',\n\t\t\t    'font-weight': 'font-weight',\n\t\t\t    fontSize: 'font-size',\n\t\t\t    'font-size': 'font-size',\n\t\t\t    lineHeight: 'line-height',\n\t\t\t    'line-height': 'line-height',\n\t\t\t    fontStyle: 'font-style',\n\t\t\t    'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function () {\n\t\t\t\tvar childRetriverFn,\n\t\t\t\t    childRetriverString,\n\t\t\t\t    noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t    childRetriverFn = 'getElementsByClassName';\n\t\t\t\t    childRetriverString = classNameWithTag;\n\t\t\t\t    noClassTesting = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t    childRetriverFn = 'getElementsByTagName';\n\t\t\t\t    childRetriverString = 'span';\n\t\t\t\t    noClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t    isIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t    hasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature(\n\t\t\t\t        'http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t    isHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t    isWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t    childRetriverFn: childRetriverFn,\n\t\t\t\t    childRetriverString: childRetriverString,\n\t\t\t\t    noClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Create a html div element and attach it with a parent. All the subsequent operations are performed\n\t\t\t * by upding this dom tree only.\n\t\t\t *\n\t\t\t * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n\t\t\t *                      the new div is appended on the body.\n\t\t\t */\n\t\t\tcreateContainer: function (containerParent) {\n\t\t\t    var body,\n\t\t\t        container;\n\n\t\t\t    if (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t        if (containerParent.appendChild) {\n\t\t\t            containerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        body = doc.getElementsByTagName('body')[0];\n\n\t\t\t        if (body && body.appendChild) {\n\t\t\t            container = doc.createElement(DIV);\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            body.appendChild(container);\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function  (text, maxWidth, sl) {\n\t\t\t    if (!text || !text.length) {\n\t\t\t        return 0;\n\t\t\t    }\n\n\t\t\t    var difference,\n\t\t\t        getWidth = sl._getWidthFn(),\n\t\t\t        charLen = 0,\n\t\t\t        increment = 0,\n\t\t\t        oriWidth = getWidth(text),\n\t\t\t        avgWidth = oriWidth / text.length;\n\n\t\t\t    difference = maxWidth;\n\t\t\t    charLen = ceil(maxWidth / avgWidth);\n\n\t\t\t    if (oriWidth < maxWidth) {\n\t\t\t        return (text.length - 1);\n\t\t\t    }\n\n\t\t\t    if (charLen > text.length) {\n\t\t\t        difference = maxWidth - oriWidth;\n\t\t\t        charLen = text.length;\n\t\t\t    }\n\n\t\t\t    while (difference > 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\n\t\t\t    while (difference < 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    return charLen;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * parses the style information\n\t\t\t */\n\t\t\tparseStyle: function (style = {}) {\n\t\t\t\tvar parsedStyle = {};\n\n\t\t\t\tparsedStyle.fontSize = (style.fontSize || style['font-size'] || '12px') + '';\n\t\t\t\tparsedStyle.fontVariant = style.fontVariant || style['font-variant'] || 'normal';\n\t\t\t\tparsedStyle.fontWeight = style.fontWeight || style['font-weight'] || 'normal';\n\t\t\t\tparsedStyle.fontStyle = style.fontStyle || style['font-style'] || 'normal';\n\t\t\t\tparsedStyle.fontFamily = style.fontFamily || style['font-family'] || 'Verdana,sans';\n\t\t\t\tparsedStyle.lineHeight = style.lineHeight || style['line-height'] || '15px';\n\n\t\t\t\treturn parsedStyle;\n\t\t\t},\n\t\t\t/*\n\t\t\t * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n\t\t\t *\n\t\t\t * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n\t\t\t *                  based on fontSize property, if its not present a default font size is assumed.\n\t\t\t *\n\t\t\t * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n\t\t\t */\n\t\t\tsetLineHeight: function  (styleObj) {\n\t\t        var fSize = styleObj.fontSize;\n\t\t        styleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || ((parseInt(fSize, 10) * 1.2) + 'px');\n\t\t        return styleObj;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the clean height by removing 'px' if present.\n\t\t\t */\n\t\t\t_getCleanHeight: function (height) {\n\t\t\t\t// Remove 'px' from  height and convert it to number\n\t\t\t\theight = height.replace(/px/g, '');\n\t\t\t\treturn Number(height);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Div is used for calculation of text dimention in all non-canvas browsers. It sets the text as\n\t\t\t * innerHTML of the div and uses it's offsetWidth and offsetHeight as width and height respectively\n\t\t\t *\n\t\t\t * @param {string} text - text, whose measurements are to be calculated\n\t\t\t * \n\t\t\t * @returns {Object} - dimension of text\n\t\t\t */\n\t\t\t_getDimentionUsingDiv: function (text = '', sl) {\n\t\t\t\tvar container = sl._container;\n\t\t\t\n\t\t\t\t// In case text is an array, convert it to string.\n\t\t\t\tif (text instanceof Array) {\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t}\n\t\t\t\tcontainer.innerHTML = text;\n\t\t\t\treturn {\n\t\t\t\t\twidth: container.offsetWidth,\n\t\t\t\t\theight: container.offsetHeight\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the height and width of a text using the canvas.measureText API.\n\t\t\t * Used for calculating width in browsers supporting html canvas.\n\t\t\t * In case canvas is not present, <div> is used for calculation as a fallback solution\n\t\t\t * \n\t\t\t * @param {any} text -  text. Can be array or string.\n\t\t\t * \n\t\t\t * @return {Object} - width and height.\n\t\t\t */\n\t\t\t_getDimentionUsingCanvas: function (text = '', sl) {\n\t\t\t\tvar ctx = sl.ctx,\n\t\t\t\t\tstyle = sl.style,\n\t\t\t\t\theight = lib._getCleanHeight(style.lineHeight);\n\n\t\t\t\t// In case text is string, remove <br /> from it.\n\t\t\t\tif (!(text instanceof Array)) {\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t} else {\n\t\t\t\t\t// Else if it an array, convert it to string and remove <br />\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: ctx.measureText(text).width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Checks if text contains any <br /> tag. If yes, it returns all the indexes of it.\n\t\t\t * Else, it returns undefined.\n\t\t\t * \n\t\t\t * @param {string} input -  text which is to be examined for <br /> tag\n\t\t\t * \n\t\t\t * @returns {boolean} - whether text contains only <br> tag\n\t\t\t */\n\t\t\t_hasOnlyBRTag: function (input = '') {\n\t\t\t\treturn !(lib.xmlTagRegEx.test(input)) && lib.brRegex.test(input);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * For a text containing <br /> it returns the height and width of the text\n\t\t\t * \n\t\t\t */\n\t\t\t_getDimentionOfMultiLineText: function (rawText = '', sl) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen,\n\t\t\t\t\ttext = rawText.replace(lib.brRegex, '<br />'),\n\t\t\t\t\ttextAr = lib._getTextArray(text),\n\t\t\t\t\twidth = 0,\n\t\t\t\t\tmaxWidth = 0,\n\t\t\t\t\tgetWidth = sl._getWidthFn(),\n\t\t\t\t\theight = lib._getCleanHeight(sl.style.lineHeight),\n\t\t\t\t\ttextHeight = height,\n\t\t\t\t\ttextWidth,\n\t\t\t\t\tindiSizeStore = {};\n\n\t\t\t\tfor (i = 0, len = textAr.length; i < len; i++) {\n\t\t\t\t\tif (textAr[i] === '<br />') {\n\t\t\t\t\t\t// In case of <br />, reset width to 0, since it will be new line now.\n\t\t\t\t\t\t// Also, increase the line height.\n\t\t\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\t\t\twidth = 0;\n\t\t\t\t\t\ttextHeight += height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Else, calculate the width of the line.\n\t\t\t\t\t\ttextWidth = getWidth(textAr[i]);\n\t\t\t\t\t\twidth += textWidth;\n\t\t\t\t\t\tindiSizeStore[textAr[i]] = textWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\treturn {\n\t\t\t\t\theight: textHeight,\n\t\t\t\t\twidth: maxWidth,\n\t\t\t\t\tdetailObj: indiSizeStore\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Splits text into array and returns. Special functionality is, it treats <br /> as a single character\n\t\t\t */\n\t\t\t_getTextArray: function (text = '') {\n\t\t\t\tvar i,\n\t\t\t\t\tj,\n\t\t\t\t\tlen,\n\t\t\t\t\ttempLen,\n\t\t\t\t\tbrText,\n\t\t\t\t\ttempText,\n\t\t\t\t\tfinaltextAr = [];\n\n\t\t\t\t// Split using <br />\n\t\t\t\tbrText = text.split('<br />');\n\t\t\t\tlen = brText.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttempText = brText[i].split('');\n\t\t\t\t\ttempLen = tempText.length;\n\n\t\t\t\t\t// for each array retrieved by spliting using <br /> push elements to finalArray.\n\t\t\t\t\tfor (j = 0; j < tempLen; j++) {\n\t\t\t\t\t\tfinaltextAr.push(tempText[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if tempText is not the last text. IF true, add <br /> to the final Array.\n\t\t\t\t\tif (i !== len - 1) {\n\t\t\t\t\t\tfinaltextAr.push('<br />');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn finaltextAr;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the last occurance of item in a array\n\t\t\t */\n\t\t\t_findLastIndex: function (array = [], item) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen = array.length;\n\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tif (array[i] === item) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\n\nexport default lib;","/* eslint-disable */\n\nimport lib from './lib';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager (parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg','svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','xlink','http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','height','0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','width','0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            if (containerObj.prev) {\n                containerObj.prev.next = containerObj.next;\n            }\n            if (containerObj.next) {\n                containerObj.next.prev = containerObj.prev;\n            }\n            // containerObj.prev && (containerObj.prev.next = containerObj.next);\n            // containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            if (this.last === containerObj) {\n                this.last = containerObj.prev;\n            }\n            // (this.last === containerObj) && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = (len - max) + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype._makeDivNode = function (container) {\n    var node,\n        keyStr = container.keyStr;\n\n    if (!container.node) {\n        container.node = doc.createElement('div');\n        container.node.className = 'fusioncharts-div';\n        this.rootNode.appendChild(container.node);\n    }\n    node = container.node;\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    }\n    else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = (node.offsetWidth / 3);\n\n    if (documentSupport.isBrowserLess) {\n        if (!container.svgText) {\n            container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n            this.svgRoot.appendChild(node);\n        }\n        node = container.svgText;\n        node.setAttribute('style', keyStr);\n        \n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = ((node.getBBox().width - SVG_BBOX_CORRECTION) / 3);\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n};\nContainerManager.prototype.addContainer = function (keyStr) {\n    var container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    if (container.next) {\n        container.next.prev = container;\n    }\n    this.first = container;\n    if (!this.last) {\n        (this.last = container);\n    }\n    this.length += 1;\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    if (cObj.prev) {\n        cObj.prev.next = cObj.next;\n    }\n    if (cObj.next) {\n        cObj.next.prev = cObj.prev;\n    }\n    if (this.first === cObj) {\n        this.first = cObj.next;\n    }\n    if (this.last === cObj) {\n        this.last = cObj.prev;\n    }\n\n    if (cObj.node) {\n        cObj.node.parentNode.removeChild(cObj.node);\n    }\n    \n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nexport default ContainerManager;","/* eslint-disable */\n\nimport lib from './lib';\nimport ContainerManager from './container-manager';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n\n/*\n * @constrcutor\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n */\nfunction SmartLabelManager(container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        isBrowserLess = false,\n        canvas = window.document.createElement('canvas');\n\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || (!documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth)) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.parentContainer = wrapper;\n\n    // Get a context of canvas\n    this.ctx = canvas && canvas.getContext && canvas.getContext('2d');\n\n    this._containerManager = new ContainerManager(wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.oldStyle = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\r?\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text = '', calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        style = this.style || {},\n        cache,\n        advancedCacheKey,\n        cacheName,\n        cacheInitName;\n\n        cache = this._advancedCache = this._advancedCache || (this._advancedCache = {});\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []);\n        cacheName = text + style.fontSize + style.fontFamily + style.fontWeight + style.fontStyle;\n        cacheInitName = text + 'init' + style.fontSize + style.fontFamily +\n           style.fontWeight + style.fontStyle;\n\n    if (!this.ctx && htmlSplCharSpace[text]) {\n        text = htmlSplCharSpace[text];\n    }\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            tw = this._getDimention(text.repeat ? text.repeat(length) : Array(length + 1).join(text)).width;\n\n            twi = this._getDimention(text).width;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        return {\n            width: cachedStyle.width,\n            height: cachedStyle.height\n        };\n    }\n\n    size = this._getDimention(text);\n    size.width += asymmetricDifference;\n\n    cache[cacheName] = {\n        width: size.width,\n        height: size.height\n    };\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\nSmartLabelManager.prototype._getDimention = function (text) {\n    if (this.requireDiv || !this.ctx) {\n        return slLib._getDimentionUsingDiv(text, this);\n    } else {\n        return slLib._getDimentionUsingCanvas(text, this);\n    }\n};\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var sl = this,\n        contObj = sl._containerObj,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox,\n                width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = (bbox.width - SVG_BBOX_CORRECTION);\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            if (sl.requireDiv || !sl.ctx) {\n                return slLib._getDimentionUsingDiv(str, sl).width;\n            } else {\n                return slLib._getDimentionUsingCanvas(str, sl).width;\n            }\n        };\n    }\n};\n\n/**\n * Checks if two style object contains the same properties from the following list\n * - font-size\n * - font-family\n * - font-style\n * - font-weight\n * - font-variant\n */\nSmartLabelManager.prototype._isSameStyle = function () {\n    var sl = this,\n        oldStyle = sl.oldStyle || {},\n        style = sl.style;\n\n    if (\n        (style.fontSize !== oldStyle.fontSize) ||\n        (style.fontFamily !== oldStyle.fontFamily) ||\n        (style.fontStyle !== oldStyle.fontStyle) ||\n        (style.fontWeight !== oldStyle.fontWeight) ||\n        (style.lineHeight !== oldStyle.lineHeight) ||\n        (style.fontVariant !== oldStyle.fontVariant)\n    ) {\n        return false;\n    }\n    return true;\n};\n/**\n * Sets font property of canvas context based on which the width of text is calculated.\n *\n * @param {any} style style configuration which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                          lineHeight / 'line-height'\n *                      }\n */\nSmartLabelManager.prototype._setStyleOfCanvas = function () {\n    if (this._isSameStyle()) {\n        return;\n    }\n\n    var sl = this,\n        style = sl.style,\n        hashString,\n        sCont,\n        fontStyle = style.fontStyle,\n        fontVariant = style.fontVariant,\n        fontWeight = style.fontWeight,\n        fontSize = style.fontSize,\n        fontFamily = style.fontFamily,\n        lineHeight = style.lineHeight;\n\n    fontSize += fontSize.indexOf('px') === -1 ? 'px' : '';\n    hashString = fontStyle + ' ' + fontVariant + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily;\n\n    sl.ctx.font = hashString;\n    sCont = this._containerObj = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n    sCont.ellipsesWidth = sl._calCharDimWithCache('...', false).width;\n    sCont.dotWidth = sl._calCharDimWithCache('.', false).width;\n    sCont.lineHeight = this._lineHeight = sCont.lineHeight || slLib._getCleanHeight(style.lineHeight);\n    this.oldStyle = style;\n};\n\nSmartLabelManager.prototype._setStyleOfDiv = function () {\n    var sCont,\n        style = this.style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n    if (!sCont.node) {\n        this._containerManager._makeDivNode(this._containerObj);\n    }\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n};\n\nSmartLabelManager.prototype._updateStyle = function () {\n    return (this.requireDiv || !this.ctx) ? this._setStyleOfDiv() : this._setStyleOfCanvas();\n};\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    this.style = slLib.parseStyle(style);\n    slLib.setLineHeight(this.style);\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = (this._showNoEllipses ? '' : '...'),\n        lineHeight,\n        context,\n        container,\n        sCont,\n        ellipsesWidth,\n        dotWidth,\n        canvas = this.ctx,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        hasOnlyBrTag,\n        dimentionObj,\n        fastTrim = function (str) {\n            str = str.replace(/^\\s\\s*/, '');\n            var ws = /\\s/, i = str.length;\n            while (ws.test(str.charAt(i -= 1))) { /* jshint noempty:false */ }\n            return str.slice(0, i + 1);\n        },\n        smartLabel = {\n            text : text,\n            maxWidth : maxWidth,\n            maxHeight : maxHeight,\n            width : null,\n            height : null,\n            oriTextWidth : null,\n            oriTextHeight : null,\n            oriText : text,\n            isTruncated : false\n        };\n\n    hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    this._updateStyle();\n\n    lineHeight = this._lineHeight;\n    context = this._context;\n    container = this._container;\n    sCont = this._containerObj;\n    ellipsesWidth = sCont.ellipsesWidth;\n    dotWidth = sCont.dotWidth;\n\n    toolText = text.replace(slLib.spanAdditionRegx, '$2');\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    /**\n     * For canvas lineHeight is directly used. In some cases, lineHeight can be 0.x pixels greater than\n     * maxHeight. Previously, div was used to calculate lineHeight and it used to return a rounded number.\n     *\n     * Adding a buffer of 1px, maxheight will be increased by a factor of 1.2 only when\n     * 0 <= (lineHeight - maxHeight) <= 1\n     */\n    if ((lineHeight - maxHeight <= 1) && (lineHeight - maxHeight >= 0)) {\n        maxHeight *= 1.2;\n    }\n\n    if (canvas || container) {\n        if (!documentSupport.isBrowserLess) {\n\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getSize(tmpText, true, {\n                    hasHTMLTag: hasHTMLTag,\n                    hasOnlyBrTag: hasOnlyBrTag,\n                    cleanText: true\n                });\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else if (hasOnlyBrTag) {\n                text = text.replace(slLib.brRegex, '<br />');\n                dimentionObj = slLib._getDimentionOfMultiLineText(text, this);\n                smartLabel.oriTextWidth = oriWidth = dimentionObj.width;\n                smartLabel.oriTextHeight = oriHeight = dimentionObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : (maxWidth - ellipsesWidth);\n\n        // Checks if any html tag is present. This if block is executed for all normal texts and\n        // all texts containing only <br /> tag.\n        if (!hasHTMLTag || hasOnlyBrTag) {\n            // Gets splitted array\n            oriTextArr = slLib._getTextArray(text);\n            len = oriTextArr.length;\n            trimStr = '';\n            tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            }\n            else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth && !hasOnlyBrTag) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n            }\n            else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth =\n                    smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n            else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            i = tempArr.length;\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        strHeight += this._lineHeight;\n                        lastIndexBroken = i;\n\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strWidth = 0;\n                        trimStr = null;\n                        continue;\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = max(maxStrWidth, strWidth);\n\t\t\t\t\t\t\tsmartLabel.height = strHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = max(maxStrWidth, strWidth);\n                smartLabel.height = strHeight;\n                return smartLabel;\n\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = this.ctx ? ' ' : '&nbsp;';\n                    }\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strHeight += this._lineHeight;\n                        if (strHeight <= maxHeight) {\n                            // If the totalHeight is less than allowed height, continue.\n                            lastIndexBroken = i;\n                            strWidth = 0;\n                            trimStr = null;\n                            continue;\n                        } else if (strHeight > maxHeight) {\n                            // Else return by truncating the text and attaching ellipses.\n                            trimStr = tempArr.slice(0, -1).join('');\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = toolText;\n                            smartLabel.width = maxStrWidth;\n\t\t\t\t\t\t\tsmartLabel.height = strHeight - this._lineHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            // do not perform any line break operation if next character is a break tag\n                            if (oriTextArr[i + 1] === '<br />') {\n                                continue;\n                            }\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), ' ');\n                            lastDash = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), '-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br />');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br />-');\n                                } else {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br />');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice((tempArr.length - 1), 1, '<br />' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1,\n                                    lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n\t\t\t\t\t\t\t\tsmartLabel.height = (strHeight - this._lineHeight);\n\t\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                if (!hasOnlyBrTag) {\n                                    nearestChar =\n                                    slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                    strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                    if (tempArr.length < newCharIndex + nearestChar) {\n                                        tempArr = tempArr.concat(\n                                            text.substr(\n                                                tempArr.length,\n                                                newCharIndex + nearestChar - tempArr.length\n                                            ).split('')\n                                        );\n                                        i = tempArr.length - 1;\n                                    }\n                                } else {\n                                    // take the width already taken in the new line.\n                                    strWidth = slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken + 1).join(''), this).width;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        }\n        else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(\n                /(<br\\s*\\/*\\>)/g,\n                '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>'\n            );\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if ( chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            // if character array is not generated\n            minWidth = len && characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth || !len) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) { // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if ((elem.offsetHeight + elem.offsetTop) > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                }\n                                else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ?\n                removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    }\n    else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        container,\n        indiSizeStore = { },\n        hasHTMLTag = config.hasHTMLTag,\n        hasOnlyBrTag = config.hasOnlyBrTag;\n\n    if (typeof hasHTMLTag === 'undefined') {\n        hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    }\n    if (typeof hasOnlyBrTag === 'undefined') {\n        hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n    }\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    if (!config.cleanText) {\n        text = text.replace(slLib.ltgtRegex, function (match) {\n            return match === '&lt;' ? '<' : '>';\n        });\n    }\n    this._updateStyle();\n    container = this._container;\n\n    // When text is normal text\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    } else {\n        // Calculate the width of every letter with an approximation\n        textArr = text.split('');\n        for (i = 0, l = textArr.length; i < l; i++) {\n            letter = textArr[i];\n            lSize = this._calCharDimWithCache(letter, false, textArr.length);\n            height = max(height, lSize.height);\n            cumulativeSize += lSize.width;\n            indiSizeStore[letter] = lSize.width;\n        }\n    }\n    // If text has br tag, return the width and height with proper calculations\n    if (hasOnlyBrTag) {\n        return {\n            ...slLib._getDimentionOfMultiLineText(text, this),\n            detailObj: indiSizeStore\n        };\n    }\n\n    // text contains html tags other than br\n    if (hasHTMLTag) {\n        container.innerHTML = text;\n        return {\n            width: container.offsetWidth,\n            height: container.offsetHeight,\n            detailObj: indiSizeStore\n        };\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/**\n * getOriSize API will eventually be deprecated and will be renamed to getSize API. For the next two versions,\n * both getOriSize and getSize API will be supported.\n */\nSmartLabelManager.prototype.getOriSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    return this.getSize(text, detailedCalculationFlag, config);\n};\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    if (this._containerManager && this._containerManager.dispose) {\n        this._containerManager.dispose();\n    }\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexport default SmartLabelManager;\n","import SmartLabel from 'vendor/smartLabel/SmartlabelManager'\r\n\r\nconst sl = new SmartLabel('div', true)\r\n\r\nexport const calcText = (props) => {\r\n  const {\r\n    text,\r\n    fontSize,\r\n    fontFamily,\r\n    fontWeight = 'normal',\r\n    lineHeight,\r\n    width,\r\n    height,\r\n    hPadding,\r\n    vPadding\r\n  } = props\r\n\r\n  const textWidth = width - hPadding * 2\r\n  const textHeight = height - vPadding * 2\r\n\r\n  sl.setStyle({\r\n    lineHeight: lineHeight && `${lineHeight}px`,\r\n    fontSize: fontSize && `${fontSize}px`,\r\n    fontFamily: fontFamily || 'Arial',\r\n    fontWeight: fontWeight,\r\n    fontStyle: 'normal'\r\n  })\r\n\r\n  const smartLabel = sl.getSmartText(text, textWidth, textHeight, false)\r\n  const generalizedSmartlabel = SmartLabel.textToLines(smartLabel)\r\n\r\n  return {\r\n    ...props,\r\n    lines: generalizedSmartlabel.lines,\r\n    lineHeight,\r\n    textWidth: generalizedSmartlabel.width,\r\n    textHeight: generalizedSmartlabel.height,\r\n    text: generalizedSmartlabel.text,\r\n    oriText: text\r\n  }\r\n}\r\n","export function calcImageFit (isCover) {\r\n  return (sourceWidth, sourceHeight, targetWidth, targetHeight) => {\r\n    var scale = isCover\r\n      ? Math.min(sourceWidth / targetWidth, sourceHeight / targetHeight)\r\n      : Math.max(sourceWidth / targetWidth, sourceHeight / targetHeight)\r\n\r\n    var x = (sourceWidth / 2) - (targetWidth / 2) * scale\r\n    var y = (sourceHeight / 2) - (targetHeight / 2) * scale\r\n    return {\r\n      x,\r\n      y,\r\n      width: targetWidth * scale,\r\n      height: targetHeight * scale\r\n    }\r\n  }\r\n}\r\n\r\nexport const contain = calcImageFit(false)\r\nexport const cover = calcImageFit(true)\r\n","import { calcImageFit } from './helpers'\r\n\r\nconst drawCover = (ctx, {\r\n  background\r\n}) => {\r\n  const yoyo = calcImageFit(background.isCover)(\r\n    background.bitmap.width,\r\n    background.bitmap.height,\r\n    background.width,\r\n    background.height\r\n  )\r\n\r\n  const {\r\n    width, height, x, y\r\n  } = yoyo\r\n\r\n  ctx.drawImage(\r\n    background.bitmap,\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    background.x,\r\n    background.y,\r\n    background.width,\r\n    background.height\r\n  )\r\n}\r\n\r\nconst getXPos = ({\r\n  align, textWidth, width, padding\r\n}) => {\r\n  switch (align) {\r\n    case 'center':\r\n      return width / 2\r\n    case 'right':\r\n      return textWidth + padding\r\n    case 'left':\r\n    default:\r\n      return padding\r\n  }\r\n}\r\n\r\nconst getYPos = ({\r\n  align, textHeight, height, padding\r\n}) => {\r\n  const difference = height - textHeight\r\n\r\n  switch (align) {\r\n    case 'center':\r\n      return difference / 2\r\n    case 'bottom':\r\n      return textHeight\r\n    case 'top':\r\n    default:\r\n      return padding\r\n  }\r\n}\r\n\r\nconst drawText = ctx => text => {\r\n  const {\r\n    width,\r\n    height,\r\n    autoHeight,\r\n    lines,\r\n    fontSize,\r\n    fontFamily,\r\n    fontWeight = 'normal',\r\n    lineHeight,\r\n    hPadding,\r\n    vPadding,\r\n    verticalAlign,\r\n    textAlign,\r\n    textWidth,\r\n    textHeight,\r\n    textColor,\r\n    backgroundColor,\r\n    x = 0,\r\n    y = 0\r\n  } = text\r\n\r\n  ctx.fillStyle = backgroundColor || '#0000'\r\n  ctx.fillRect(\r\n    x,\r\n    y,\r\n    width,\r\n    autoHeight ? textHeight + vPadding * 2 : height\r\n  )\r\n\r\n  ctx.fillStyle = textColor || '#111'\r\n  ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`\r\n  ctx.textBaseline = 'middle'\r\n  ctx.textAlign = textAlign\r\n\r\n  const xPos = x + getXPos({\r\n    align: textAlign,\r\n    textWidth,\r\n    width,\r\n    padding: hPadding\r\n  })\r\n\r\n  const yPos = y + getYPos({\r\n    align: verticalAlign,\r\n    textHeight,\r\n    height,\r\n    padding: vPadding\r\n  })\r\n\r\n  lines.forEach((lineOfText, i) => {\r\n    ctx.fillText(\r\n      lineOfText,\r\n      xPos,\r\n      yPos + lineHeight * (i + 0.5)\r\n    )\r\n  })\r\n}\r\n\r\nconst drawBackground = (ctx, {\r\n  width, height, backgroundColor\r\n}) => {\r\n  ctx.fillStyle = backgroundColor || '#000'\r\n  ctx.fillRect(0, 0, width, height)\r\n}\r\n\r\nexport const editCanvas = async (ctx, {\r\n  width, height, texts, background, backgroundColor\r\n}) => {\r\n  drawBackground(ctx, {\r\n    width, height, backgroundColor\r\n  })\r\n\r\n  drawCover(ctx, {\r\n    background\r\n  })\r\n\r\n  texts.forEach(drawText(ctx))\r\n\r\n  return {\r\n    state: 'ready'\r\n  }\r\n}\r\n","import React, { useCallback, useContext, useState } from 'react'\r\nimport { LinksData } from 'store'\r\nimport { editCanvas } from './editCanvas'\r\nimport { calcText } from './helpers'\r\n\r\nexport const Canvas = ({\r\n  template, texts, background\r\n}) => {\r\n  const [isReady, setReady] = useState(false)\r\n  const { loadImage } = useContext(LinksData.ActionsContext)\r\n\r\n  const canvasElRef = useCallback(canvas => {\r\n    if (canvas !== null) {\r\n      const ctx = canvas.getContext('2d')\r\n      loadImage(background)\r\n        .then(bitmap => {\r\n          editCanvas(ctx, {\r\n            ...template,\r\n            texts: texts.map((text, i) => ({\r\n              ...template.texts[i],\r\n              text\r\n            })).map(calcText),\r\n            background: {\r\n              ...template.background,\r\n              bitmap,\r\n              src: background\r\n            }\r\n          })\r\n\r\n          setReady(true)\r\n        })\r\n    }\r\n  }, [template, texts, background, loadImage])\r\n\r\n  return (\r\n    <div>\r\n      { !isReady && 'loading...'}\r\n\r\n      <canvas\r\n        style={{\r\n          display: isReady ? 'block' : 'none'\r\n        }}\r\n        ref={canvasElRef}\r\n        width={template.width}\r\n        height={template.height}\r\n      ></canvas>\r\n    </div>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'styles'\r\nimport { App } from 'components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React from 'react'\r\nimport './style.css'\r\nimport { LinkToSource, Showtime, Review } from 'components'\r\nimport { LinksData, Combinations } from 'store'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <LinksData.Provider>\r\n      <Combinations.Provider>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <div className=\"App-header-text\">\r\n              In vino veritas\r\n              In vino veritas\r\n              In vino veritas\r\n              In vino veritas\r\n            </div>\r\n          </header>\r\n\r\n          <main className=\"App-main\">\r\n            <div className=\"App-main-row\">\r\n              <LinkToSource />\r\n            </div>\r\n            <div className=\"App-main-row\">\r\n              <Review />\r\n            </div>\r\n            <div className=\"App-main-row\">\r\n              <Showtime />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </Combinations.Provider>\r\n    </LinksData.Provider>\r\n  )\r\n}\r\n"],"sourceRoot":""}