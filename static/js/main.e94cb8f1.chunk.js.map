{"version":3,"sources":["assets/images/pic1.png","assets/images/pic2.jpg","assets/images/pic3.jpg","assets/images/pic4.jpg","api/example.js","data/templates.js","store/LinksData/useLoadImages.js","store/LinksData/LinksData.jsx","store/LinksData/useLinksData.js","store/Combinations/helpers.js","store/Combinations/useCombinations.js","store/Combinations/normalize.js","store/Combinations/Combinations.jsx","store/Banners/Banners.jsx","store/Banners/useBanners.js","store/Result/Result.jsx","store/Result/useResult.js","components/LinkToSource/LinkToSource.jsx","api/handlers.js","components/CloseButton/styled.js","components/CloseButton/CloseButton.jsx","components/Showtime/styled.js","components/Showtime/Showtime.jsx","components/Review/styled.js","components/Review/components/ImageItem.jsx","components/Review/components/TextItem.jsx","components/Review/Review.jsx","components/Canvas/helpers/helpers.js","vendor/smartLabel/lib.js","vendor/smartLabel/container-manager.js","vendor/smartLabel/SmartlabelManager.js","components/Canvas/helpers/calcText.js","components/Canvas/helpers/calcImageFit.js","components/Canvas/editCanvas.js","components/Canvas/styled.js","components/Canvas/Canvas.jsx","components/Loader/styled.js","components/Loader/Loader.jsx","components/ResultsActions/styled.js","components/ResultsActions/ResultsActions.jsx","components/ResultsActions/useDownload.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","res","titles","texts","images","src","require","templates","Object","freeze","key","width","height","backgroundColor","background","x","y","isCover","textAlign","verticalAlign","hPadding","vPadding","fontSize","lineHeight","fontFamily","fontWeight","textColor","autoHeight","pinTo","loadImage","memoized","Promise","resolve","img","Image","crossOrigin","onload","createImageBitmap","loadImageCreator","preloadImages","all","map","image","Context","createContext","WasChanged","ActionsContext","Provider","children","useState","linksData","setLinksDataState","wasChanged","setWasChanged","setLinksData","useCallback","data","setLinksDataFieldItem","input","field","i","newData","assign","removeLinksFieldItem","length","splice","actions","useMemo","value","useLinksData","loadImagesActions","useEffect","useLoadImages","mergedActions","useCombinations","combinations","setCombinations","calcCombinations","result","keys","forEach","local","item","ii","resultItem","push","getCartesianIndexes","title","text","template","sort","a","b","removeItem","index","prev","filter","BannersContext","useContext","Combinations","LinksData","banners","setBanners","combination","changeBanner","id","newArray","slice","removeBanner","newState","removed","useBanners","setResult","changeResultItem","removeResultItem","useResult","block","LinkToSource","className","onSubmit","e","preventDefault","reject","d","reduce","error","then","catch","console","warn","placeholder","type","Button","styled","button","CloseButton","props","Wrapper","div","Title","h2","List","Item","Showtime","linksDataWasChanged","onRemove","Remove","DataFromLink","Section","TextsWrapper","ImagesWrapper","ImageItem","onClick","TextItem","onChange","contentEditable","suppressContentEditableWarning","onBlur","Review","hasLinksData","changeFieldItem","event","target","textContent","removeFieldItem","downloadCanvas","canvas","filename","toBlob","blob","URL","createObjectURL","downloadBlobUrl","url","link","document","createElement","href","download","body","appendChild","click","remove","lib","init","win","doc","userAgent","navigator","ceil","Math","floor","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","RegExp","xmlTagRegEx","brRegex","ltgtRegex","nbspRegex","htmlSpecialEntityRegex","brReplaceRegex","testStrAvg","parentContainerStyle","position","top","whiteSpace","padding","overflow","supportedStyle","font","fontStyle","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","test","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","container","offsetWidth","offsetHeight","setAttribute","getElementsByTagName","getNearestBreakIndex","maxWidth","sl","difference","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","parseStyle","style","parsedStyle","fontVariant","setLineHeight","styleObj","fSize","parseInt","_getCleanHeight","replace","Number","_getDimentionUsingDiv","_container","Array","join","innerHTML","_getDimentionUsingCanvas","ctx","measureText","_hasOnlyBRTag","_getDimentionOfMultiLineText","len","textWidth","rawText","textAr","_getTextArray","textHeight","indiSizeStore","max","detailObj","j","tempLen","brText","tempText","finaltextAr","split","_findLastIndex","array","slLib","window","documentSupport","SVG_BBOX_CORRECTION","ContainerManager","parentContainer","isBrowserLess","maxContainers","svg","this","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","prototype","get","diff","containerObj","keyStr","undefined","next","removeContainer","addContainer","_makeDivNode","node","display","avgCharWidth","svgText","getBBox","ellipsesWidth","dotWidth","charCache","cObj","parentNode","removeChild","dispose","M","round","htmlSplCharSpace","SmartLabelManager","useEllipses","options","wrapper","prop","maxCacheLimit","isFinite","getElementById","getContext","_containerManager","_showNoEllipses","_init","oldStyle","setStyle","textToLines","smartlabel","toString","lines","_calCharDimWithCache","calculateDifference","size","tw","twi","cachedStyle","asymmetricDifference","cache","advancedCacheKey","cacheName","cacheInitName","maxAdvancedCacheLimit","_advancedCache","_advancedCacheKey","_getDimention","repeat","shift","requireDiv","_containerObj","str","bbox","_isSameStyle","_setStyleOfCanvas","hashString","sCont","indexOf","_context","context","_cache","_lineHeight","_styleNotSet","_setStyleOfDiv","_updateStyle","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","hasOnlyBrTag","dimentionObj","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","match","getSize","cleanText","tooltext","concat","spaceIdx","dashIdx","offsetLeft","offsetTop","insertBefore","Error","detailedCalculationFlag","config","textArr","letter","lSize","l","cumulativeSize","getOriSize","SmartLabel","calcText","generalizedSmartlabel","calcImageFit","sourceWidth","sourceHeight","targetWidth","targetHeight","scale","min","drawCover","fit","bitmap","drawImage","drawText","fillStyle","fillRect","textBaseline","xPos","align","getXPos","yPos","getYPos","lineOfText","fillText","drawBackground","editCanvas","state","RemoveButton","DownloadButton","Canvas","isReady","setReady","setCanvas","Result","canvasElRef","isLoading","ref","blink","keyframes","Spinner","Loader","ResultsActions","setLoading","Banners","creatives","zip","JSZip","setTimeout","entries","creative","filePromise","file","generateAsync","content","saveAs","finally","useDownload","allLoaded","disabled","App","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e94cb8f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.5bced02a.png\";","module.exports = __webpack_public_path__ + \"static/media/pic2.57a2f3dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic3.5c3a90ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4.43b87bdb.jpg\";","const pic1 = require('assets/images/pic1.png')\nconst pic2 = require('assets/images/pic2.jpg')\nconst pic3 = require('assets/images/pic3.jpg')\nconst pic4 = require('assets/images/pic4.jpg')\n\nexport const req = {\n  data: {}\n}\n\nexport const res = {\n  titles: [\n    'Найдем вашу аудиторию и приведем новых клиентов из интернета'\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета',\n    // 'Найдем вашу аудиторию и приведем новых клиентов из интернета'\n    // 'IN VINO VERITAS'\n  ],\n  texts: [\n    'имеем доступ к бета-инструментам: вы всегда будете в курсе новых возможностей рекламных систем;'\n    // 'Подберем эффективное решение для каждого — от локального бизнеса до международных интернет-магазинов. Работаем с клиентами из России и из-за рубежа',\n    // 'фиксированная стоимость услуг: вы платите ровно столько, сколько прописано в договоре. Никаких скрытых комиссий.'\n  ],\n  images: [\n    {\n      src: pic1\n    },\n    {\n      src: pic2\n    },\n    {\n      src: pic3\n    },\n    {\n      src: pic4\n    }\n  ]\n}\n","export const templates = Object.freeze([\n  {\n    key: 'key1',\n    width: 1080,\n    height: 1920,\n    backgroundColor: '#000',\n    background: {\n      x: 0,\n      y: 380,\n      width: 1080,\n      height: 650,\n      isCover: false\n    },\n    texts: [{\n      x: 0,\n      y: 1200,\n      width: 1080,\n      height: 240,\n      textAlign: 'left',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 20,\n      fontSize: 72,\n      lineHeight: 84,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: ''\n    },\n    {\n      x: 0,\n      y: 1460,\n      width: 1080,\n      height: 300,\n      autoHeight: true,\n      textAlign: 'left',\n      verticalAlign: 'top',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 40,\n      lineHeight: 70,\n      fontFamily: 'Arial',\n      textColor: '#fff',\n      backgroundColor: ''\n    }]\n  },\n  {\n    key: 'key2',\n    width: 1080,\n    height: 1080,\n    backgroundColor: '#fff',\n    background: {\n      x: 0,\n      y: 100,\n      width: 1080,\n      height: 460,\n      isCover: false\n    },\n    texts: [{\n      x: 0,\n      y: 600,\n      width: 1080,\n      height: 200,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 20,\n      fontSize: 66,\n      lineHeight: 80,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#000',\n      backgroundColor: ''\n    },\n    {\n      x: 0,\n      y: 820,\n      width: 1080,\n      height: 200,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 32,\n      lineHeight: 52,\n      fontFamily: 'Arial',\n      textColor: '#000',\n      backgroundColor: '',\n      autoHeight: true,\n      pinTo: 'bottom'\n    }]\n  },\n  {\n    key: 'key3',\n    width: 1080,\n    height: 610,\n    backgroundColor: '#000',\n    background: {\n      x: 40,\n      y: 40,\n      width: 520,\n      height: 530,\n      isCover: false\n    },\n    texts: [{\n      x: 560,\n      y: 50,\n      width: 520,\n      height: 250,\n      textAlign: 'left',\n      verticalAlign: 'center',\n      hPadding: 50,\n      vPadding: 20,\n      fontSize: 48,\n      lineHeight: 60,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: ''\n    },\n    {\n      x: 560,\n      y: 300,\n      width: 520,\n      height: 300,\n      textAlign: 'left',\n      verticalAlign: 'top',\n      hPadding: 50,\n      vPadding: 10,\n      fontSize: 28,\n      lineHeight: 42,\n      fontFamily: 'Arial',\n      textColor: '#fff',\n      backgroundColor: '',\n      autoHeight: true,\n      pinTo: 'bottom'\n    }]\n  },\n  {\n    key: 'key4',\n    width: 1080,\n    height: 1080,\n    backgroundColor: '#000',\n    background: {\n      x: 0,\n      y: 0,\n      width: 1080,\n      height: 1080,\n      isCover: true\n    },\n    texts: [{\n      x: 0,\n      y: 0,\n      width: 1080,\n      height: 600,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 40,\n      fontSize: 130,\n      lineHeight: 140,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: '#cc2600cc'\n    },\n    {\n      x: 0,\n      y: 930,\n      width: 1080,\n      height: 150,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 32,\n      lineHeight: 52,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#000',\n      backgroundColor: '#fffc',\n      pinTo: 'bottom'\n    }]\n  }\n])\n","import { useEffect } from 'react'\n\nconst loadImageCreator = () => {\n  const memoized = {}\n\n  return (src) => {\n    if (memoized[src]) return memoized[src]\n\n    memoized[src] = new Promise((resolve) => {\n      const img = new Image()\n      img.src = src\n      img.crossOrigin = 'Anonymous'\n\n      img.onload = () => {\n        resolve(createImageBitmap(img))\n      }\n    })\n\n    return memoized[src]\n  }\n}\n\nconst loadImage = loadImageCreator()\n\nconst preloadImages = (images) => {\n  return Promise.all(\n    images.map(image => loadImage(image.src))\n  )\n}\n\nexport const useLoadImages = (linksData) => {\n  const images = linksData.images\n\n  useEffect(() => {\n    if (images) {\n      preloadImages(images)\n    }\n  }, [images])\n\n  return {\n    loadImage, preloadImages\n  }\n}\n","import React, { createContext, useMemo } from 'react'\nimport { useLinksData } from './useLinksData'\nimport { useLoadImages } from './useLoadImages'\n\nconst Context = createContext({})\nconst WasChanged = createContext(false)\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value, wasChanged\n  } = useLinksData()\n\n  const loadImagesActions = useLoadImages(value.linksData)\n\n  const mergedActions = useMemo(() => ({\n    ...actions,\n    ...loadImagesActions\n  }), [actions, loadImagesActions])\n\n  return (\n    <Context.Provider value={value}>\n      <WasChanged.Provider value={wasChanged}>\n        <ActionsContext.Provider value={mergedActions}>\n          { children }\n        </ActionsContext.Provider>\n      </WasChanged.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, WasChanged, ActionsContext, Provider\n}\n","import { useState, useMemo, useCallback } from 'react'\n\nexport const useLinksData = () => {\n  const [linksData, setLinksDataState] = useState({})\n  const [wasChanged, setWasChanged] = useState(false)\n\n  const setLinksData = useCallback((data) => {\n    setLinksDataState(data)\n  }, [setLinksDataState])\n\n  const setLinksDataFieldItem = useCallback(({\n    input, field, i\n  }) => {\n    setLinksDataState(data => {\n      const newData = Object.assign({}, data)\n      newData[field][i] = input\n      return newData\n    })\n  }, [setLinksDataState])\n\n  const removeLinksFieldItem = useCallback(({\n    field, i\n  }) => {\n    setLinksData(data => {\n      if (data[field].length > 1) {\n        const newData = Object.assign({}, data)\n        newData[field].splice(i, 1)\n        setWasChanged(true)\n        return newData\n      }\n      return data\n    })\n  }, [setLinksData, setWasChanged])\n\n  const actions = useMemo(() => ({\n    setLinksData, setLinksDataFieldItem, removeLinksFieldItem, setWasChanged\n  }), [setLinksData, setLinksDataFieldItem, removeLinksFieldItem, setWasChanged])\n\n  const value = useMemo(() => ({\n    linksData\n  }), [linksData])\n\n  return {\n    actions, value, wasChanged\n  }\n}\n","export function getCartesian (object) {\n  return Object.entries(object).reduce(\n    (r, [k, v]) => {\n      var temp = []\n      r.forEach(s =>\n        (Array.isArray(v) ? v : [v]).forEach(w =>\n          (w && [w]).forEach((x, ii) =>\n            temp.push(\n              Object.assign({}, s, {\n                [k]: {\n                  index: ii,\n                  value: x\n                }\n              })\n            )\n          )\n        )\n      )\n      return temp\n    },\n    [{}]\n  )\n}\n\nexport function getCartesianIndexes (data) {\n  let result = [0]\n\n  Object.keys(data).forEach(key => {\n    const local = []\n    data[key].forEach((item, ii) => {\n      result.forEach(resultItem => {\n        local.push({\n          ...resultItem,\n          [key]: ii\n        })\n      })\n    })\n    result = local\n  })\n\n  return result\n};\n\nexport const skipEmptyArrays = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val && val.length) result[key] = val\n  })\n  return result\n}\n\nexport const skipEmptyProps = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val !== undefined) result[key] = val\n  })\n  return result\n}\n\nexport const downloadFromUrl = (url) => {\n  if (url) {\n    const link = document.createElement('a')\n    link.href = url\n    link.download = 'creatives.zip'\n    link.click()\n  }\n}\n","import { useState, useMemo, useCallback } from 'react'\nimport { templates } from 'data/templates'\nimport { getCartesianIndexes } from './helpers'\nimport { normalizeLinksData } from './normalize'\n\nexport const useCombinations = () => {\n  const [combinations, setCombinations] = useState([])\n\n  const calcCombinations = useCallback((linksData) => {\n    const normalized = normalizeLinksData(linksData)\n    const combinations = getCartesianIndexes(normalized)\n\n    if (combinations.length) {\n      setCombinations(combinations.sort((a, b) => {\n        return templates[a.template] > templates[b.template]\n          ? 1\n          : templates[a.template] < templates[b.template]\n            ? -1\n            : 0\n      })\n      )\n    }\n  }, [setCombinations])\n\n  const removeItem = useCallback((index) => {\n    setCombinations(prev => {\n      return prev.filter((item, i) => i !== index)\n    })\n  }, [setCombinations])\n\n  const actions = useMemo(() => ({\n    calcCombinations, removeItem\n  }), [calcCombinations, removeItem])\n\n  const value = useMemo(() => ({\n    combinations\n  }), [combinations])\n\n  return {\n    actions, value\n  }\n}\n","export const normalizeLinksData = (data) => {\n  return {\n    image: data.images,\n    title: data.titles,\n    text: data.texts,\n    template: data.templates\n  }\n}\n","import React, { createContext } from 'react'\nimport { useCombinations } from './useCombinations'\n\nconst Context = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value\n  } = useCombinations()\n\n  return (\n    <Context.Provider value={value}>\n      <ActionsContext.Provider value={actions}>\n        { children }\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import React, { createContext } from 'react'\nimport { useBanners } from './useBanners'\n\nconst BannersContext = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, banners\n  } = useBanners()\n\n  return (\n    <BannersContext.Provider value={banners}>\n      <ActionsContext.Provider value={actions}>\n        {children}\n      </ActionsContext.Provider>\n    </BannersContext.Provider>\n  )\n}\n\nexport {\n  BannersContext, ActionsContext, Provider\n}\n","import { useContext, useState, useMemo, useCallback, useEffect } from 'react'\nimport { Combinations, LinksData } from 'store'\n\nexport const useBanners = () => {\n  const { combinations } = useContext(Combinations.Context)\n  const { linksData } = useContext(LinksData.Context)\n  const [banners, setBanners] = useState([])\n\n  useEffect(() => {\n    setBanners(function someSetBanners (prev) {\n      return combinations.map(combination => ({\n        image: linksData.images[combination.image],\n        title: linksData.titles[combination.title],\n        text: linksData.texts[combination.text],\n        template: linksData.templates[combination.template],\n        ...prev\n      }))\n    })\n  }, [combinations, setBanners, linksData])\n\n  const changeBanner = useCallback(({\n    data, id\n  }) => {\n    setBanners(prev => {\n      const newArray = prev.slice()\n      newArray[id] = {\n        ...newArray[id],\n        ...data\n      }\n      return newArray\n    })\n  }, [setBanners])\n\n  const removeBanner = useCallback((index) => {\n    setBanners(prev => {\n      const newState = Object.assign({}, prev)\n      newState[index].removed = true\n      return newState\n    })\n  }, [setBanners])\n\n  const actions = useMemo(() => ({\n    changeBanner, removeBanner\n  }), [changeBanner, removeBanner])\n\n  return {\n    actions,\n    banners\n  }\n}\n","import React, { createContext } from 'react'\nimport { useResult } from './useResult'\n\nconst Context = createContext({})\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, result\n  } = useResult()\n\n  return (\n    <Context.Provider value={result}>\n      <ActionsContext.Provider value={actions}>\n        {children}\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import { useContext, useState, useMemo, useCallback, useEffect } from 'react'\nimport { Combinations } from 'store'\n\nexport const useResult = () => {\n  const { combinations } = useContext(Combinations.Context)\n  const [result, setResult] = useState({})\n\n  useEffect(() => {\n    if (combinations.length) {\n      setResult({})\n    }\n  }, [combinations, setResult])\n\n  const changeResultItem = useCallback(({\n    data, id\n  }) => {\n    setResult(prev => {\n      const result = Object.assign({}, prev)\n      result[id] = {\n        ...result[id],\n        ...data\n      }\n      return result\n    })\n  }, [setResult])\n\n  const removeResultItem = useCallback(({ id }) => () => {\n    changeResultItem({\n      data: {\n        removed: true\n      },\n      id\n    })\n  }, [changeResultItem])\n\n  const actions = useMemo(() => ({\n    changeResultItem, removeResultItem\n  }), [changeResultItem, removeResultItem])\n\n  return {\n    actions,\n    result\n  }\n}\n","import React, { useContext } from 'react'\nimport { getDataFromLink } from 'api'\nimport { LinksData, Combinations } from 'store'\nimport './style.css'\n\nconst block = 'LinkToSource'\n\nexport const LinkToSource = () => {\n  const { setLinksData } = useContext(LinksData.ActionsContext)\n  const { calcCombinations } = useContext(Combinations.ActionsContext)\n\n  const onLinkSubmit = (e) => {\n    e.preventDefault()\n    getDataFromLink()\n      .then(data => {\n        setLinksData(data)\n        calcCombinations(data)\n      })\n      .catch(error => console.warn(error))\n  }\n\n  return (\n    <form\n      className={`${block}-form`}\n      onSubmit={onLinkSubmit}\n    >\n      <input\n        className={`${block}-input`}\n        placeholder='ссылка на источник'\n      />\n      <button\n        className={`${block}-submit`}\n        type=\"submit\"\n      >\n        загрузить\n      </button>\n    </form>\n  )\n}\n","// import axios from 'axios'\nimport { res } from './example'\nimport { templates } from 'data/templates'\n\nexport const getDataFromLink = () => {\n  return new Promise((resolve, reject) => {\n    try {\n      const d = Object.keys(res).reduce((prev, key) => {\n        return {\n          ...prev,\n          [key]: res[key].slice()\n        }\n      }, {})\n      return {\n        ...d,\n        templates\n      }\n    } catch (error) {\n      reject(error)\n    }\n  })\n  // return axios.get('/')\n  //   .then(data => {\n  //     const d = Object.keys(res).reduce((prev, key) => {\n  //       return {\n  //         ...prev,\n  //         [key]: res[key].slice()\n  //       }\n  //     }, {})\n  //     return {\n  //       ...d,\n  //       templates\n  //     }\n  //   })\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: red;\n  color: #fff;\n  font-size: 20px;\n  line-height: 1;\n\n  &:hover {\n    background-color: #f00a;\n  }\n`\n","import React from 'react'\nimport { Button } from './styled'\n\nexport const CloseButton = (props) => {\n  return (\n    <Button {...props}>\n      ×\n    </Button>\n  )\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components/CloseButton'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 20px;\n`\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const List = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n`\n\nexport const Item = styled.div`\n  padding: 6px 0;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: var(--radius-m);\n\n  canvas {\n    max-width: 100%;\n  }\n`\n\nexport const Loader = styled.div`\n\n`\n\nexport const RemoveItem = styled(CloseButton)``\n","import React, { useContext, useEffect } from 'react'\nimport { Combinations, LinksData } from 'store'\nimport { Wrapper, List, Item, Title } from './styled'\nimport { Canvas, ResultsActions } from 'components'\n\nexport const Showtime = () => {\n  const { linksData } = useContext(LinksData.Context)\n  const linksDataWasChanged = useContext(LinksData.WasChanged)\n  const { combinations } = useContext(Combinations.Context)\n  const { removeItem, calcCombinations } = useContext(Combinations.ActionsContext)\n\n  useEffect(() => {\n    if (linksDataWasChanged) {\n      calcCombinations(linksData)\n    }\n  }, [linksData, linksDataWasChanged, calcCombinations])\n\n  const removeCombinationItem = (index) => () => {\n    removeItem(index)\n  }\n\n  if (!combinations.length) return null\n\n  return (\n    <Wrapper>\n      <Title>Результаты: {combinations.length}</Title>\n\n      <ResultsActions />\n\n      <List>\n        {combinations.map(({ template, image, text, title }, i) => {\n          const key = `${template}_${image}_${text}_${title}`\n          return (\n            <Item key={key}>\n              <Canvas\n                {...{\n                  id: key,\n                  texts: [linksData.titles[title], linksData.texts[text]],\n                  template: linksData.templates[template],\n                  background: linksData.images[image].src,\n                  onRemove: removeCombinationItem(i)\n                }}\n              />\n            </Item>\n          )\n        })}\n      </List>\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components/CloseButton'\n\nexport const Remove = styled(CloseButton)`\n  opacity: 0;\n  transition: opacity 0.3s ease;\n`\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  word-break: break-word;\n  display: grid;\n  grid-gap: 50px;\n`\n\nexport const DataFromLink = styled.div`\n  display: grid;\n  grid-gap: 30px;\n`\n\nexport const Section = styled.div`\n  display: grid;\n  grid-gap: 20px;\n`\n\nexport const TextsWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n`\n\nexport const ImagesWrapper = styled(Section)`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(3, 1fr);\n`\n\nexport const Item = styled.div`\n  position: relative;\n  display: block;\n  padding: 10px 20px;\n  background: #fff3;\n  border-radius: 3px;\n  overflow: hidden;\n\n  &:hover ${Remove} {\n    opacity: 1;\n    transition: opacity 0.1s ease;\n  }\n`\n\nexport const ImageItem = styled(Item)`\n  padding: 0;\n  overflow: hidden;\n`\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`\n","import React from 'react'\nimport {\n  ImageItem as Wrapper, Image, Remove\n} from '../styled'\n\nexport const ImageItem = ({\n  image, onRemove\n}) => {\n  return (\n    <Wrapper>\n      <Image src={image.src} />\n      <Remove\n        onClick={onRemove}\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport {\n  Item, Remove\n} from '../styled'\n\nexport const TextItem = ({\n  text, onChange, onRemove\n}) => {\n  return (\n    <Item>\n      <span\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={onChange}\n      >\n        { text }\n      </span>\n      <Remove\n        onClick={onRemove}\n      />\n    </Item>\n  )\n}\n","import React, { useContext, useCallback } from 'react'\nimport { LinksData } from 'store'\nimport {\n  Wrapper, DataFromLink, Section, TextsWrapper, ImagesWrapper, Title\n} from './styled'\nimport { ImageItem, TextItem } from './components'\n\nexport const Review = () => {\n  const { linksData } = useContext(LinksData.Context)\n  const {\n    setLinksDataFieldItem, removeLinksFieldItem\n  } = useContext(LinksData.ActionsContext)\n\n  const hasLinksData = Object.keys(linksData).length > 0\n\n  const changeFieldItem = useCallback(props => event => {\n    setLinksDataFieldItem({\n      ...props,\n      input: event.target.textContent\n    })\n  }, [setLinksDataFieldItem])\n\n  const removeFieldItem = useCallback(props => () => {\n    removeLinksFieldItem(props)\n  }, [removeLinksFieldItem])\n\n  if (!hasLinksData) return null\n\n  return (\n    <Wrapper>\n      <DataFromLink>\n        <Section>\n          <Title>\n            Заголовок\n          </Title>\n          <TextsWrapper>\n            {linksData.titles.map((title, i) => (\n              <TextItem\n                key={`${i}_${title}`}\n                text={title}\n                index={i}\n                onChange={changeFieldItem({\n                  field: 'titles', i\n                })}\n                onRemove={removeFieldItem({\n                  field: 'titles', i\n                })}\n              />\n            ))}\n          </TextsWrapper>\n        </Section>\n\n        <Section>\n          <Title>\n            Описание\n          </Title>\n          <TextsWrapper>\n            {linksData.texts.map((text, i) => (\n              <TextItem\n                key={`${i}_${text}`}\n                text={text}\n                index={i}\n                onChange={changeFieldItem({\n                  field: 'texts', i\n                })}\n                onRemove={removeFieldItem({\n                  field: 'texts', i\n                })}\n              />\n            ))}\n          </TextsWrapper>\n        </Section>\n\n        <Section>\n          <Title>\n            Изображение\n          </Title>\n          <ImagesWrapper>\n            {linksData.images.map((image, i) => (\n              <ImageItem\n                key={`${i}_${image.src}`}\n                image={image}\n                index={i}\n                onRemove={removeFieldItem({\n                  field: 'images', i\n                })}\n              />\n            ))}\n          </ImagesWrapper>\n        </Section>\n      </DataFromLink>\n    </Wrapper>\n  )\n}\n","export function createImageFromBlob (blob, size) {\n  const imageEl = document.createElement('img')\n  const urlCreator = window.URL || window.webkitURL\n  const imageUrl = urlCreator.createObjectURL(blob)\n  imageEl.src = imageUrl\n  imageEl.width = size.width\n  imageEl.height = size.height\n  return imageEl\n}\n\nexport function downloadCanvas ({ canvas, filename }) {\n  return () => {\n    canvas.toBlob(async blob => {\n      const blobUrl = await URL.createObjectURL(blob)\n\n      downloadBlobUrl({\n        url: blobUrl,\n        filename\n      })\n    })\n  }\n}\n\nexport function downloadBlobCreator ({ blob, filename }) {\n  return async () => {\n    const blobUrl = await URL.createObjectURL(blob)\n\n    downloadBlobUrl({\n      url: blobUrl,\n      filename\n    })\n  }\n}\n\nexport async function downloadFromUrl ({ url, filename }) {\n  const blobUrl = await generateBlobUrl(url)\n\n  downloadBlobUrl({\n    url: blobUrl,\n    filename\n  })\n}\n\nasync function generateBlobUrl (url) {\n  const response = await fetch(url)\n  const blob = await response.blob()\n  return URL.createObjectURL(blob)\n}\n\nfunction downloadBlobUrl ({ url, filename = 'file' }) {\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename + '.png'\n  document.body.appendChild(link)\n  link.click()\n  link.remove()\n}\n","/* eslint-disable */\n\nvar lib = {\n\tinit: function (win) {\n\t\tvar doc = win.document,\n        \tnav = win.navigator,\n        \tuserAgent = nav.userAgent,\n        \tDIV = 'DIV',\n        \tceil = Math.ceil,\n        \tfloor = Math.floor,\n        \tclsNameSpace = 'fusioncharts-smartlabel-',\n        \tcontainerClass = clsNameSpace + 'container',\n        \tclassNameWithTag = clsNameSpace + 'tag',\n        \tclassNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\t\t\t\n\t\t\tmaxDefaultCacheLimit: 1000,\n\n\t\t\t// The regex we get from new RegExp does not perform the work as intended\n\n\t\t\t// classNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\t\t\t\n\t\t\t// classNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tclassNameReg: /\\bfusioncharts-smartlabel-tag\\b/,\n\n\t\t\tclassNameBrReg: /\\bfusioncharts-smartlabel-br\\b/,\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\t\t\t\n\t\t\tspanAdditionReplacer: '$1<span class=\"'+ classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?'+ classNameWithTag +'[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tbrRegex: new RegExp('({br[ ]*})|(<br[ ]*>)|(<br[ ]*\\/>)|(<BR[ ]*\\/>)|(<br\\\\>)', 'g'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tnbspRegex: /&nbsp;|&#160;|&#xA0;/g,\n\n\t\t\thtmlSpecialEntityRegex: /&amp;|&quot;|&lt;|&gt;/g,\n        \t\n        \tbrReplaceRegex: /<br\\/>/ig,\n\n        \ttestStrAvg: 'WgI',\n\n        \t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t    position: 'absolute',\n\t\t\t    top: '-9999em',\n\t\t\t    whiteSpace: 'nowrap',\n\t\t\t    padding: '0px',\n\t\t\t    width: '1px',\n\t\t\t    height: '1px',\n\t\t\t    overflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t    font: 'font',\n\t\t\t    fontFamily: 'font-family',\n\t\t\t    'font-family': 'font-family',\n\t\t\t    fontWeight: 'font-weight',\n\t\t\t    'font-weight': 'font-weight',\n\t\t\t    fontSize: 'font-size',\n\t\t\t    'font-size': 'font-size',\n\t\t\t    lineHeight: 'line-height',\n\t\t\t    'line-height': 'line-height',\n\t\t\t    fontStyle: 'font-style',\n\t\t\t    'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function () {\n\t\t\t\tvar childRetriverFn,\n\t\t\t\t    childRetriverString,\n\t\t\t\t    noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t    childRetriverFn = 'getElementsByClassName';\n\t\t\t\t    childRetriverString = classNameWithTag;\n\t\t\t\t    noClassTesting = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t    childRetriverFn = 'getElementsByTagName';\n\t\t\t\t    childRetriverString = 'span';\n\t\t\t\t    noClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t    isIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t    hasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature(\n\t\t\t\t        'http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t    isHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t    isWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t    childRetriverFn: childRetriverFn,\n\t\t\t\t    childRetriverString: childRetriverString,\n\t\t\t\t    noClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Create a html div element and attach it with a parent. All the subsequent operations are performed\n\t\t\t * by upding this dom tree only.\n\t\t\t *\n\t\t\t * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n\t\t\t *                      the new div is appended on the body.\n\t\t\t */\n\t\t\tcreateContainer: function (containerParent) {\n\t\t\t    var body,\n\t\t\t        container;\n\n\t\t\t    if (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t        if (containerParent.appendChild) {\n\t\t\t            containerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        body = doc.getElementsByTagName('body')[0];\n\n\t\t\t        if (body && body.appendChild) {\n\t\t\t            container = doc.createElement(DIV);\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            body.appendChild(container);\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function  (text, maxWidth, sl) {\n\t\t\t    if (!text || !text.length) {\n\t\t\t        return 0;\n\t\t\t    }\n\n\t\t\t    var difference,\n\t\t\t        getWidth = sl._getWidthFn(),\n\t\t\t        charLen = 0,\n\t\t\t        increment = 0,\n\t\t\t        oriWidth = getWidth(text),\n\t\t\t        avgWidth = oriWidth / text.length;\n\n\t\t\t    difference = maxWidth;\n\t\t\t    charLen = ceil(maxWidth / avgWidth);\n\n\t\t\t    if (oriWidth < maxWidth) {\n\t\t\t        return (text.length - 1);\n\t\t\t    }\n\n\t\t\t    if (charLen > text.length) {\n\t\t\t        difference = maxWidth - oriWidth;\n\t\t\t        charLen = text.length;\n\t\t\t    }\n\n\t\t\t    while (difference > 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\n\t\t\t    while (difference < 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    return charLen;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * parses the style information\n\t\t\t */\n\t\t\tparseStyle: function (style = {}) {\n\t\t\t\tvar parsedStyle = {};\n\n\t\t\t\tparsedStyle.fontSize = (style.fontSize || style['font-size'] || '12px') + '';\n\t\t\t\tparsedStyle.fontVariant = style.fontVariant || style['font-variant'] || 'normal';\n\t\t\t\tparsedStyle.fontWeight = style.fontWeight || style['font-weight'] || 'normal';\n\t\t\t\tparsedStyle.fontStyle = style.fontStyle || style['font-style'] || 'normal';\n\t\t\t\tparsedStyle.fontFamily = style.fontFamily || style['font-family'] || 'Verdana,sans';\n\t\t\t\tparsedStyle.lineHeight = style.lineHeight || style['line-height'] || '15px';\n\n\t\t\t\treturn parsedStyle;\n\t\t\t},\n\t\t\t/*\n\t\t\t * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n\t\t\t *\n\t\t\t * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n\t\t\t *                  based on fontSize property, if its not present a default font size is assumed.\n\t\t\t *\n\t\t\t * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n\t\t\t */\n\t\t\tsetLineHeight: function  (styleObj) {\n\t\t        var fSize = styleObj.fontSize;\n\t\t        styleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || ((parseInt(fSize, 10) * 1.2) + 'px');\n\t\t        return styleObj;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the clean height by removing 'px' if present.\n\t\t\t */\n\t\t\t_getCleanHeight: function (height) {\n\t\t\t\t// Remove 'px' from  height and convert it to number\n\t\t\t\theight = height.replace(/px/g, '');\n\t\t\t\treturn Number(height);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Div is used for calculation of text dimention in all non-canvas browsers. It sets the text as\n\t\t\t * innerHTML of the div and uses it's offsetWidth and offsetHeight as width and height respectively\n\t\t\t *\n\t\t\t * @param {string} text - text, whose measurements are to be calculated\n\t\t\t * \n\t\t\t * @returns {Object} - dimension of text\n\t\t\t */\n\t\t\t_getDimentionUsingDiv: function (text = '', sl) {\n\t\t\t\tvar container = sl._container;\n\t\t\t\n\t\t\t\t// In case text is an array, convert it to string.\n\t\t\t\tif (text instanceof Array) {\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t}\n\t\t\t\tcontainer.innerHTML = text;\n\t\t\t\treturn {\n\t\t\t\t\twidth: container.offsetWidth,\n\t\t\t\t\theight: container.offsetHeight\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the height and width of a text using the canvas.measureText API.\n\t\t\t * Used for calculating width in browsers supporting html canvas.\n\t\t\t * In case canvas is not present, <div> is used for calculation as a fallback solution\n\t\t\t * \n\t\t\t * @param {any} text -  text. Can be array or string.\n\t\t\t * \n\t\t\t * @return {Object} - width and height.\n\t\t\t */\n\t\t\t_getDimentionUsingCanvas: function (text = '', sl) {\n\t\t\t\tvar ctx = sl.ctx,\n\t\t\t\t\tstyle = sl.style,\n\t\t\t\t\theight = lib._getCleanHeight(style.lineHeight);\n\n\t\t\t\t// In case text is string, remove <br /> from it.\n\t\t\t\tif (!(text instanceof Array)) {\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t} else {\n\t\t\t\t\t// Else if it an array, convert it to string and remove <br />\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: ctx.measureText(text).width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Checks if text contains any <br /> tag. If yes, it returns all the indexes of it.\n\t\t\t * Else, it returns undefined.\n\t\t\t * \n\t\t\t * @param {string} input -  text which is to be examined for <br /> tag\n\t\t\t * \n\t\t\t * @returns {boolean} - whether text contains only <br> tag\n\t\t\t */\n\t\t\t_hasOnlyBRTag: function (input = '') {\n\t\t\t\treturn !(lib.xmlTagRegEx.test(input)) && lib.brRegex.test(input);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * For a text containing <br /> it returns the height and width of the text\n\t\t\t * \n\t\t\t */\n\t\t\t_getDimentionOfMultiLineText: function (rawText = '', sl) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen,\n\t\t\t\t\ttext = rawText.replace(lib.brRegex, '<br />'),\n\t\t\t\t\ttextAr = lib._getTextArray(text),\n\t\t\t\t\twidth = 0,\n\t\t\t\t\tmaxWidth = 0,\n\t\t\t\t\tgetWidth = sl._getWidthFn(),\n\t\t\t\t\theight = lib._getCleanHeight(sl.style.lineHeight),\n\t\t\t\t\ttextHeight = height,\n\t\t\t\t\ttextWidth,\n\t\t\t\t\tindiSizeStore = {};\n\n\t\t\t\tfor (i = 0, len = textAr.length; i < len; i++) {\n\t\t\t\t\tif (textAr[i] === '<br />') {\n\t\t\t\t\t\t// In case of <br />, reset width to 0, since it will be new line now.\n\t\t\t\t\t\t// Also, increase the line height.\n\t\t\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\t\t\twidth = 0;\n\t\t\t\t\t\ttextHeight += height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Else, calculate the width of the line.\n\t\t\t\t\t\ttextWidth = getWidth(textAr[i]);\n\t\t\t\t\t\twidth += textWidth;\n\t\t\t\t\t\tindiSizeStore[textAr[i]] = textWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\treturn {\n\t\t\t\t\theight: textHeight,\n\t\t\t\t\twidth: maxWidth,\n\t\t\t\t\tdetailObj: indiSizeStore\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Splits text into array and returns. Special functionality is, it treats <br /> as a single character\n\t\t\t */\n\t\t\t_getTextArray: function (text = '') {\n\t\t\t\tvar i,\n\t\t\t\t\tj,\n\t\t\t\t\tlen,\n\t\t\t\t\ttempLen,\n\t\t\t\t\tbrText,\n\t\t\t\t\ttempText,\n\t\t\t\t\tfinaltextAr = [];\n\n\t\t\t\t// Split using <br />\n\t\t\t\tbrText = text.split('<br />');\n\t\t\t\tlen = brText.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttempText = brText[i].split('');\n\t\t\t\t\ttempLen = tempText.length;\n\n\t\t\t\t\t// for each array retrieved by spliting using <br /> push elements to finalArray.\n\t\t\t\t\tfor (j = 0; j < tempLen; j++) {\n\t\t\t\t\t\tfinaltextAr.push(tempText[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if tempText is not the last text. IF true, add <br /> to the final Array.\n\t\t\t\t\tif (i !== len - 1) {\n\t\t\t\t\t\tfinaltextAr.push('<br />');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn finaltextAr;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the last occurance of item in a array\n\t\t\t */\n\t\t\t_findLastIndex: function (array = [], item) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen = array.length;\n\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tif (array[i] === item) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\n\nexport default lib;","/* eslint-disable */\n\nimport lib from './lib';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager (parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg','svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','xlink','http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','height','0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','width','0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            if (containerObj.prev) {\n                containerObj.prev.next = containerObj.next;\n            }\n            if (containerObj.next) {\n                containerObj.next.prev = containerObj.prev;\n            }\n            // containerObj.prev && (containerObj.prev.next = containerObj.next);\n            // containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            if (this.last === containerObj) {\n                this.last = containerObj.prev;\n            }\n            // (this.last === containerObj) && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = (len - max) + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype._makeDivNode = function (container) {\n    var node,\n        keyStr = container.keyStr;\n\n    if (!container.node) {\n        container.node = doc.createElement('div');\n        container.node.className = 'fusioncharts-div';\n        this.rootNode.appendChild(container.node);\n    }\n    node = container.node;\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    }\n    else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = (node.offsetWidth / 3);\n\n    if (documentSupport.isBrowserLess) {\n        if (!container.svgText) {\n            container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n            this.svgRoot.appendChild(node);\n        }\n        node = container.svgText;\n        node.setAttribute('style', keyStr);\n        \n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = ((node.getBBox().width - SVG_BBOX_CORRECTION) / 3);\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n};\nContainerManager.prototype.addContainer = function (keyStr) {\n    var container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    if (container.next) {\n        container.next.prev = container;\n    }\n    this.first = container;\n    if (!this.last) {\n        (this.last = container);\n    }\n    this.length += 1;\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    if (cObj.prev) {\n        cObj.prev.next = cObj.next;\n    }\n    if (cObj.next) {\n        cObj.next.prev = cObj.prev;\n    }\n    if (this.first === cObj) {\n        this.first = cObj.next;\n    }\n    if (this.last === cObj) {\n        this.last = cObj.prev;\n    }\n\n    if (cObj.node) {\n        cObj.node.parentNode.removeChild(cObj.node);\n    }\n    \n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nexport default ContainerManager;","/* eslint-disable */\n\nimport lib from './lib';\nimport ContainerManager from './container-manager';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n\n/*\n * @constrcutor\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n */\nfunction SmartLabelManager(container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        isBrowserLess = false,\n        canvas = window.document.createElement('canvas');\n\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || (!documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth)) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.parentContainer = wrapper;\n\n    // Get a context of canvas\n    this.ctx = canvas && canvas.getContext && canvas.getContext('2d');\n\n    this._containerManager = new ContainerManager(wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.oldStyle = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\r?\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text = '', calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        style = this.style || {},\n        cache,\n        advancedCacheKey,\n        cacheName,\n        cacheInitName;\n\n        cache = this._advancedCache = this._advancedCache || (this._advancedCache = {});\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []);\n        cacheName = text + style.fontSize + style.fontFamily + style.fontWeight + style.fontStyle;\n        cacheInitName = text + 'init' + style.fontSize + style.fontFamily +\n           style.fontWeight + style.fontStyle;\n\n    if (!this.ctx && htmlSplCharSpace[text]) {\n        text = htmlSplCharSpace[text];\n    }\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            tw = this._getDimention(text.repeat ? text.repeat(length) : Array(length + 1).join(text)).width;\n\n            twi = this._getDimention(text).width;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        return {\n            width: cachedStyle.width,\n            height: cachedStyle.height\n        };\n    }\n\n    size = this._getDimention(text);\n    size.width += asymmetricDifference;\n\n    cache[cacheName] = {\n        width: size.width,\n        height: size.height\n    };\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\nSmartLabelManager.prototype._getDimention = function (text) {\n    if (this.requireDiv || !this.ctx) {\n        return slLib._getDimentionUsingDiv(text, this);\n    } else {\n        return slLib._getDimentionUsingCanvas(text, this);\n    }\n};\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var sl = this,\n        contObj = sl._containerObj,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox,\n                width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = (bbox.width - SVG_BBOX_CORRECTION);\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            if (sl.requireDiv || !sl.ctx) {\n                return slLib._getDimentionUsingDiv(str, sl).width;\n            } else {\n                return slLib._getDimentionUsingCanvas(str, sl).width;\n            }\n        };\n    }\n};\n\n/**\n * Checks if two style object contains the same properties from the following list\n * - font-size\n * - font-family\n * - font-style\n * - font-weight\n * - font-variant\n */\nSmartLabelManager.prototype._isSameStyle = function () {\n    var sl = this,\n        oldStyle = sl.oldStyle || {},\n        style = sl.style;\n\n    if (\n        (style.fontSize !== oldStyle.fontSize) ||\n        (style.fontFamily !== oldStyle.fontFamily) ||\n        (style.fontStyle !== oldStyle.fontStyle) ||\n        (style.fontWeight !== oldStyle.fontWeight) ||\n        (style.lineHeight !== oldStyle.lineHeight) ||\n        (style.fontVariant !== oldStyle.fontVariant)\n    ) {\n        return false;\n    }\n    return true;\n};\n/**\n * Sets font property of canvas context based on which the width of text is calculated.\n *\n * @param {any} style style configuration which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                          lineHeight / 'line-height'\n *                      }\n */\nSmartLabelManager.prototype._setStyleOfCanvas = function () {\n    if (this._isSameStyle()) {\n        return;\n    }\n\n    var sl = this,\n        style = sl.style,\n        hashString,\n        sCont,\n        fontStyle = style.fontStyle,\n        fontVariant = style.fontVariant,\n        fontWeight = style.fontWeight,\n        fontSize = style.fontSize,\n        fontFamily = style.fontFamily,\n        lineHeight = style.lineHeight;\n\n    fontSize += fontSize.indexOf('px') === -1 ? 'px' : '';\n    hashString = fontStyle + ' ' + fontVariant + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily;\n\n    sl.ctx.font = hashString;\n    sCont = this._containerObj = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n    sCont.ellipsesWidth = sl._calCharDimWithCache('...', false).width;\n    sCont.dotWidth = sl._calCharDimWithCache('.', false).width;\n    sCont.lineHeight = this._lineHeight = sCont.lineHeight || slLib._getCleanHeight(style.lineHeight);\n    this.oldStyle = style;\n};\n\nSmartLabelManager.prototype._setStyleOfDiv = function () {\n    var sCont,\n        style = this.style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n    if (!sCont.node) {\n        this._containerManager._makeDivNode(this._containerObj);\n    }\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n};\n\nSmartLabelManager.prototype._updateStyle = function () {\n    return (this.requireDiv || !this.ctx) ? this._setStyleOfDiv() : this._setStyleOfCanvas();\n};\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    this.style = slLib.parseStyle(style);\n    slLib.setLineHeight(this.style);\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = (this._showNoEllipses ? '' : '...'),\n        lineHeight,\n        context,\n        container,\n        sCont,\n        ellipsesWidth,\n        dotWidth,\n        canvas = this.ctx,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        hasOnlyBrTag,\n        dimentionObj,\n        fastTrim = function (str) {\n            str = str.replace(/^\\s\\s*/, '');\n            var ws = /\\s/, i = str.length;\n            while (ws.test(str.charAt(i -= 1))) { /* jshint noempty:false */ }\n            return str.slice(0, i + 1);\n        },\n        smartLabel = {\n            text : text,\n            maxWidth : maxWidth,\n            maxHeight : maxHeight,\n            width : null,\n            height : null,\n            oriTextWidth : null,\n            oriTextHeight : null,\n            oriText : text,\n            isTruncated : false\n        };\n\n    hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    this._updateStyle();\n\n    lineHeight = this._lineHeight;\n    context = this._context;\n    container = this._container;\n    sCont = this._containerObj;\n    ellipsesWidth = sCont.ellipsesWidth;\n    dotWidth = sCont.dotWidth;\n\n    toolText = text.replace(slLib.spanAdditionRegx, '$2');\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    /**\n     * For canvas lineHeight is directly used. In some cases, lineHeight can be 0.x pixels greater than\n     * maxHeight. Previously, div was used to calculate lineHeight and it used to return a rounded number.\n     *\n     * Adding a buffer of 1px, maxheight will be increased by a factor of 1.2 only when\n     * 0 <= (lineHeight - maxHeight) <= 1\n     */\n    if ((lineHeight - maxHeight <= 1) && (lineHeight - maxHeight >= 0)) {\n        maxHeight *= 1.2;\n    }\n\n    if (canvas || container) {\n        if (!documentSupport.isBrowserLess) {\n\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getSize(tmpText, true, {\n                    hasHTMLTag: hasHTMLTag,\n                    hasOnlyBrTag: hasOnlyBrTag,\n                    cleanText: true\n                });\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else if (hasOnlyBrTag) {\n                text = text.replace(slLib.brRegex, '<br />');\n                dimentionObj = slLib._getDimentionOfMultiLineText(text, this);\n                smartLabel.oriTextWidth = oriWidth = dimentionObj.width;\n                smartLabel.oriTextHeight = oriHeight = dimentionObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : (maxWidth - ellipsesWidth);\n\n        // Checks if any html tag is present. This if block is executed for all normal texts and\n        // all texts containing only <br /> tag.\n        if (!hasHTMLTag || hasOnlyBrTag) {\n            // Gets splitted array\n            oriTextArr = slLib._getTextArray(text);\n            len = oriTextArr.length;\n            trimStr = '';\n            tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            }\n            else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth && !hasOnlyBrTag) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n            }\n            else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth =\n                    smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n            else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            i = tempArr.length;\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        strHeight += this._lineHeight;\n                        lastIndexBroken = i;\n\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strWidth = 0;\n                        trimStr = null;\n                        continue;\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = max(maxStrWidth, strWidth);\n\t\t\t\t\t\t\tsmartLabel.height = strHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = max(maxStrWidth, strWidth);\n                smartLabel.height = strHeight;\n                return smartLabel;\n\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = this.ctx ? ' ' : '&nbsp;';\n                    }\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strHeight += this._lineHeight;\n                        if (strHeight <= maxHeight) {\n                            // If the totalHeight is less than allowed height, continue.\n                            lastIndexBroken = i;\n                            strWidth = 0;\n                            trimStr = null;\n                            continue;\n                        } else if (strHeight > maxHeight) {\n                            // Else return by truncating the text and attaching ellipses.\n                            trimStr = tempArr.slice(0, -1).join('');\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = toolText;\n                            smartLabel.width = maxStrWidth;\n\t\t\t\t\t\t\tsmartLabel.height = strHeight - this._lineHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            // do not perform any line break operation if next character is a break tag\n                            if (oriTextArr[i + 1] === '<br />') {\n                                continue;\n                            }\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), ' ');\n                            lastDash = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), '-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br />');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br />-');\n                                } else {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br />');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice((tempArr.length - 1), 1, '<br />' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1,\n                                    lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n\t\t\t\t\t\t\t\tsmartLabel.height = (strHeight - this._lineHeight);\n\t\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                if (!hasOnlyBrTag) {\n                                    nearestChar =\n                                    slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                    strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                    if (tempArr.length < newCharIndex + nearestChar) {\n                                        tempArr = tempArr.concat(\n                                            text.substr(\n                                                tempArr.length,\n                                                newCharIndex + nearestChar - tempArr.length\n                                            ).split('')\n                                        );\n                                        i = tempArr.length - 1;\n                                    }\n                                } else {\n                                    // take the width already taken in the new line.\n                                    strWidth = slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken + 1).join(''), this).width;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        }\n        else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(\n                /(<br\\s*\\/*\\>)/g,\n                '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>'\n            );\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if ( chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            // if character array is not generated\n            minWidth = len && characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth || !len) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) { // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if ((elem.offsetHeight + elem.offsetTop) > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                }\n                                else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ?\n                removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    }\n    else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        container,\n        indiSizeStore = { },\n        hasHTMLTag = config.hasHTMLTag,\n        hasOnlyBrTag = config.hasOnlyBrTag;\n\n    if (typeof hasHTMLTag === 'undefined') {\n        hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    }\n    if (typeof hasOnlyBrTag === 'undefined') {\n        hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n    }\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    if (!config.cleanText) {\n        text = text.replace(slLib.ltgtRegex, function (match) {\n            return match === '&lt;' ? '<' : '>';\n        });\n    }\n    this._updateStyle();\n    container = this._container;\n\n    // When text is normal text\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    } else {\n        // Calculate the width of every letter with an approximation\n        textArr = text.split('');\n        for (i = 0, l = textArr.length; i < l; i++) {\n            letter = textArr[i];\n            lSize = this._calCharDimWithCache(letter, false, textArr.length);\n            height = max(height, lSize.height);\n            cumulativeSize += lSize.width;\n            indiSizeStore[letter] = lSize.width;\n        }\n    }\n    // If text has br tag, return the width and height with proper calculations\n    if (hasOnlyBrTag) {\n        return {\n            ...slLib._getDimentionOfMultiLineText(text, this),\n            detailObj: indiSizeStore\n        };\n    }\n\n    // text contains html tags other than br\n    if (hasHTMLTag) {\n        container.innerHTML = text;\n        return {\n            width: container.offsetWidth,\n            height: container.offsetHeight,\n            detailObj: indiSizeStore\n        };\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/**\n * getOriSize API will eventually be deprecated and will be renamed to getSize API. For the next two versions,\n * both getOriSize and getSize API will be supported.\n */\nSmartLabelManager.prototype.getOriSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    return this.getSize(text, detailedCalculationFlag, config);\n};\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    if (this._containerManager && this._containerManager.dispose) {\n        this._containerManager.dispose();\n    }\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexport default SmartLabelManager;\n","import SmartLabel from 'vendor/smartLabel/SmartlabelManager'\n\nconst sl = new SmartLabel('div', true)\n\nexport const calcText = (props) => {\n  const {\n    text,\n    fontSize,\n    fontFamily,\n    fontWeight = 'normal',\n    lineHeight,\n    width,\n    height,\n    hPadding,\n    vPadding\n  } = props\n\n  const textWidth = width - hPadding * 2\n  const textHeight = height - vPadding * 2\n\n  sl.setStyle({\n    lineHeight: lineHeight && `${lineHeight}px`,\n    fontSize: fontSize && `${fontSize}px`,\n    fontFamily: fontFamily || 'Arial',\n    fontWeight: fontWeight,\n    fontStyle: 'normal'\n  })\n\n  const smartLabel = sl.getSmartText(text, textWidth, textHeight, false)\n  const generalizedSmartlabel = SmartLabel.textToLines(smartLabel)\n\n  return {\n    ...props,\n    lines: generalizedSmartlabel.lines,\n    lineHeight,\n    textWidth: generalizedSmartlabel.width,\n    textHeight: generalizedSmartlabel.height,\n    text: generalizedSmartlabel.text,\n    oriText: text\n  }\n}\n","export function calcImageFit (isCover) {\n  return (sourceWidth, sourceHeight, targetWidth, targetHeight) => {\n    var scale = isCover\n      ? Math.min(sourceWidth / targetWidth, sourceHeight / targetHeight)\n      : Math.max(sourceWidth / targetWidth, sourceHeight / targetHeight)\n\n    var x = (sourceWidth / 2) - (targetWidth / 2) * scale\n    var y = (sourceHeight / 2) - (targetHeight / 2) * scale\n    return {\n      x,\n      y,\n      width: targetWidth * scale,\n      height: targetHeight * scale\n    }\n  }\n}\n\nexport const contain = calcImageFit(false)\nexport const cover = calcImageFit(true)\n","import { calcImageFit } from './helpers'\n\nconst drawCover = (ctx, {\n  background\n}) => {\n  const fit = calcImageFit(background.isCover)(\n    background.bitmap.width,\n    background.bitmap.height,\n    background.width,\n    background.height\n  )\n\n  const {\n    width, height, x, y\n  } = fit\n\n  ctx.drawImage(\n    background.bitmap,\n    x,\n    y,\n    width,\n    height,\n    background.x,\n    background.y,\n    background.width,\n    background.height\n  )\n}\n\nconst getXPos = ({\n  align, textWidth, width, padding\n}) => {\n  switch (align) {\n    case 'center':\n      return width / 2\n    case 'right':\n      return textWidth + padding\n    case 'left':\n    default:\n      return padding\n  }\n}\n\nconst getYPos = ({\n  align, textHeight, height, padding\n}) => {\n  const difference = height - textHeight\n\n  switch (align) {\n    case 'center':\n      return difference / 2\n    case 'bottom':\n      return textHeight\n    case 'top':\n    default:\n      return padding\n  }\n}\n\nconst drawText = ctx => text => {\n  const {\n    width,\n    height,\n    autoHeight,\n    lines,\n    fontSize,\n    fontFamily,\n    fontWeight = 'normal',\n    lineHeight,\n    hPadding,\n    vPadding,\n    verticalAlign,\n    textAlign,\n    textWidth,\n    textHeight,\n    textColor,\n    backgroundColor,\n    x = 0,\n    y = 0\n  } = text\n\n  ctx.fillStyle = backgroundColor || '#0000'\n  ctx.fillRect(\n    x,\n    y,\n    width,\n    autoHeight ? textHeight + vPadding * 2 : height\n  )\n\n  ctx.fillStyle = textColor || '#111'\n  ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`\n  ctx.textBaseline = 'middle'\n  ctx.textAlign = textAlign\n\n  const xPos = x + getXPos({\n    align: textAlign,\n    textWidth,\n    width,\n    padding: hPadding\n  })\n\n  const yPos = y + getYPos({\n    align: verticalAlign,\n    textHeight,\n    height,\n    padding: vPadding\n  })\n\n  lines.forEach((lineOfText, i) => {\n    ctx.fillText(\n      lineOfText,\n      xPos,\n      yPos + lineHeight * (i + 0.5)\n    )\n  })\n}\n\nconst drawBackground = (ctx, {\n  width, height, backgroundColor\n}) => {\n  ctx.fillStyle = backgroundColor || '#000'\n  ctx.fillRect(0, 0, width, height)\n}\n\nexport const editCanvas = async (ctx, {\n  width, height, texts, background, backgroundColor\n}) => {\n  drawBackground(ctx, {\n    width, height, backgroundColor\n  })\n\n  drawCover(ctx, {\n    background\n  })\n\n  texts.forEach(drawText(ctx))\n\n  return {\n    state: 'ready'\n  }\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  button {\n    opacity: 0;\n    transition: opacity .1s ease;\n  }\n\n  &:hover button {\n    opacity: 1;\n    transition: opacity .2s ease;\n  }\n`\n\nexport const RemoveButton = styled(CloseButton)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n`\n\nexport const DownloadButton = styled.button`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n`\n","import React, { useCallback, useContext, useState } from 'react'\nimport { LinksData, Result } from 'store'\nimport { editCanvas } from './editCanvas'\nimport { calcText, downloadCanvas } from './helpers'\nimport { Loader } from 'components'\nimport { Wrapper, RemoveButton, DownloadButton } from './styled'\n\nexport const Canvas = ({\n  id, template, texts, background, onRemove\n}) => {\n  const [isReady, setReady] = useState(false)\n  const [canvas, setCanvas] = useState(null)\n  const { loadImage } = useContext(LinksData.ActionsContext)\n  const { changeResultItem } = useContext(Result.ActionsContext)\n\n  const canvasElRef = useCallback(async canvas => {\n    if (canvas !== null) {\n      setReady(false)\n      setCanvas(canvas)\n      const ctx = canvas.getContext('2d')\n      const bitmap = await loadImage(background)\n\n      editCanvas(ctx, {\n        ...template,\n        texts: texts.map((text, i) => ({\n          ...template.texts[i],\n          text\n        })).map(calcText),\n        background: {\n          ...template.background,\n          bitmap,\n          src: background\n        }\n      })\n\n      if (canvasElRef) {\n        setReady(true)\n      }\n\n      changeResultItem({\n        data: {\n          canvas,\n          bitmap,\n          texts,\n          background,\n          template\n        },\n        id\n      })\n    }\n  }, [template, texts, background, loadImage, changeResultItem, id, setReady])\n\n  return (\n    <Wrapper>\n      <Loader\n        isLoading={!isReady}\n      />\n\n      { isReady && <>\n        <DownloadButton\n          onClick={downloadCanvas({\n            canvas,\n            filename: 'yoyoy'\n          })}\n        >\n          download\n        </DownloadButton>\n\n        <RemoveButton\n          onClick={onRemove}\n        />\n      </>}\n\n      <canvas\n        style={{\n          display: isReady ? 'block' : 'none'\n        }}\n        ref={canvasElRef}\n        width={template.width}\n        height={template.height}\n      ></canvas>\n    </Wrapper>\n  )\n}\n","import styled, { keyframes } from 'styled-components'\n\nconst blink = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n`\n\nexport const Spinner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 10px;\n  justify-content: center;\n  align-content: center;\n  position: relative;\n  width: 40px;\n  height: 40px;\n\n  div {\n    border: 8px solid #fff;\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${blink} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n\n    &:nth-child(2) {\n      animation-delay: -0.5s;\n    }\n  }\n`\n","import React from 'react'\nimport { Wrapper, Spinner } from './styled'\n\nexport const Loader = ({\n  isLoading = false\n}) => {\n  if (!isLoading) return null\n\n  return <Wrapper>\n    <Spinner>\n      <div></div><div></div>\n    </Spinner>\n  </Wrapper>\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-gap: 20px;\n`\n","import React, { useContext, useState } from 'react'\nimport { Wrapper } from './styled'\nimport { Banners, Combinations, Result } from 'store'\nimport { useDownload } from './useDownload'\n\nexport const ResultsActions = () => {\n  const [isLoading, setLoading] = useState(false)\n  const result = useContext(Result.Context)\n  const banners = useContext(Banners.BannersContext)\n  const { combinations } = useContext(Combinations.Context)\n  const download = useDownload({ setLoading })\n\n  const allLoaded = combinations.length > 0 &&\n    Object.keys(banners).length === combinations.length\n\n  return (\n    <Wrapper>\n      <button\n        onClick={() => download({ creatives: result })}\n        disabled={!allLoaded}\n      >\n        {isLoading\n          ? 'Собираем архив...'\n          : 'Скачать все архивом'\n        }\n      </button>\n    </Wrapper>\n  )\n}\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\n\nexport const useDownload = ({\n  setLoading\n}) => ({\n  creatives\n}) => {\n  setLoading(true)\n  const zip = new JSZip()\n\n  setTimeout(() => {\n    Object.entries(creatives).forEach(([key, creative]) => {\n      const filePromise = new Promise((resolve) => {\n        creative.canvas\n          // .toCanvas({\n          //   pixelRatio: 1 / creative.scale\n          // })\n          .toBlob(blob => {\n            resolve(blob)\n          })\n      })\n\n      const {\n        width, height\n      } = creative.template\n\n      zip.file(\n        `${width}_${height}_${key}.png`,\n        filePromise\n      )\n    })\n\n    zip.generateAsync({ type: 'blob' })\n      .then(content => {\n        saveAs(content, 'creatives.zip')\n      })\n      .catch(error => {\n        console.warn(error)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  })\n}\n","import React from 'react'\nimport './style.css'\nimport { LinkToSource, Showtime, Review } from 'components'\nimport { LinksData, Combinations, Banners, Result } from 'store'\n\nexport const App = () => {\n  return (\n    <LinksData.Provider>\n      <Combinations.Provider>\n        <Banners.Provider>\n          <Result.Provider>\n            <div className=\"App\">\n              <header className=\"App-header\">\n                <div className=\"App-header-text\">\n                  In vino veritas\n                  In vino veritas\n                  In vino veritas\n                  In vino veritas\n                </div>\n              </header>\n\n              <main className=\"App-main\">\n                <div className=\"App-main-row\">\n                  <LinkToSource />\n                </div>\n                <div className=\"App-main-row\">\n                  <Review />\n                </div>\n                <div className=\"App-main-row\">\n                  <Showtime />\n                </div>\n              </main>\n            </div>\n          </Result.Provider>\n        </Banners.Provider>\n      </Combinations.Provider>\n    </LinksData.Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'styles'\nimport { App } from 'components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}