{"version":3,"sources":["data/templates.js","api/handlers.js","store/LinksData/useLoadImages.js","store/LinksData/LinksData.jsx","store/LinksData/useLinksData.js","store/Combinations/helpers.js","store/Combinations/useCombinations.js","store/Combinations/normalize.js","store/Combinations/Combinations.jsx","store/Banners/Banners.jsx","store/Banners/useBanners.js","store/Result/Result.jsx","store/Result/useResult.js","components/LinkToSource/LinkToSource.jsx","components/CloseButton/styled.js","components/CloseButton/CloseButton.jsx","components/Showtime/styled.js","components/Showtime/Showtime.jsx","components/Review/styled.js","components/Review/components/ImageItem.jsx","components/Review/components/TextItem.jsx","components/Review/Review.jsx","components/Canvas/helpers/helpers.js","vendor/smartLabel/lib.js","vendor/smartLabel/container-manager.js","vendor/smartLabel/SmartlabelManager.js","components/Canvas/helpers/calcText.js","components/Canvas/helpers/calcImageFit.js","components/Canvas/editCanvas.js","components/Canvas/styled.js","components/Canvas/Canvas.jsx","components/Loader/styled.js","components/Loader/Loader.jsx","components/ResultsActions/styled.js","components/ResultsActions/ResultsActions.jsx","components/ResultsActions/useDownload.js","components/App/App.js","serviceWorker.js","index.js"],"names":["templates","Object","freeze","key","width","height","backgroundColor","background","x","y","isCover","texts","textAlign","verticalAlign","hPadding","vPadding","fontSize","lineHeight","fontFamily","fontWeight","textColor","autoHeight","pinTo","root","endpoints","getUrlData","imageUrl","loadImage","memoized","src","Promise","resolve","img","Image","crossOrigin","onload","createImageBitmap","loadImageCreator","preloadImages","images","all","map","image","Context","createContext","WasChanged","ActionsContext","Provider","children","useState","linksData","setLinksDataState","wasChanged","setWasChanged","setLinksData","useCallback","data","setLinksDataFieldItem","input","field","i","newData","assign","removeLinksFieldItem","length","splice","actions","useMemo","value","useLinksData","loadImagesActions","useEffect","useLoadImages","mergedActions","useCombinations","combinations","setCombinations","calcCombinations","result","keys","forEach","local","item","ii","resultItem","push","getCartesianIndexes","title","titles","text","template","sort","a","b","removeItem","index","prev","filter","BannersContext","useContext","Combinations","LinksData","banners","setBanners","combination","changeBanner","id","newArray","slice","removeBanner","newState","removed","useBanners","setResult","changeResultItem","removeResultItem","useResult","block","LinkToSource","isLoading","setLoading","link","setLink","className","onSubmit","e","params","preventDefault","url","axios","get","then","response","catch","error","console","Error","warn","finally","placeholder","onChange","target","type","disabled","size","Button","styled","button","CloseButton","props","Wrapper","div","Title","h2","List","Item","Showtime","linksDataWasChanged","onRemove","Remove","DataFromLink","Section","TextsWrapper","ImagesWrapper","ImageItem","log","onClick","TextItem","contentEditable","suppressContentEditableWarning","onBlur","Review","hasLinksData","values","changeFieldItem","event","textContent","removeFieldItem","downloadCanvas","canvas","filename","toBlob","blob","URL","createObjectURL","downloadBlobUrl","document","createElement","href","download","body","appendChild","click","remove","lib","init","win","doc","userAgent","navigator","ceil","Math","floor","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","RegExp","xmlTagRegEx","brRegex","ltgtRegex","nbspRegex","htmlSpecialEntityRegex","brReplaceRegex","testStrAvg","parentContainerStyle","position","top","whiteSpace","padding","overflow","supportedStyle","font","fontStyle","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","test","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","container","offsetWidth","offsetHeight","setAttribute","getElementsByTagName","getNearestBreakIndex","maxWidth","sl","difference","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","parseStyle","style","parsedStyle","fontVariant","setLineHeight","styleObj","fSize","parseInt","_getCleanHeight","replace","Number","_getDimentionUsingDiv","_container","Array","join","innerHTML","_getDimentionUsingCanvas","ctx","measureText","_hasOnlyBRTag","_getDimentionOfMultiLineText","len","textWidth","rawText","textAr","_getTextArray","textHeight","indiSizeStore","max","detailObj","j","tempLen","brText","tempText","finaltextAr","split","_findLastIndex","array","slLib","window","documentSupport","SVG_BBOX_CORRECTION","ContainerManager","parentContainer","isBrowserLess","maxContainers","svg","this","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","prototype","diff","containerObj","keyStr","undefined","next","removeContainer","addContainer","_makeDivNode","node","display","avgCharWidth","svgText","getBBox","ellipsesWidth","dotWidth","charCache","cObj","parentNode","removeChild","dispose","M","round","htmlSplCharSpace","SmartLabelManager","useEllipses","options","wrapper","prop","maxCacheLimit","isFinite","getElementById","getContext","_containerManager","_showNoEllipses","_init","oldStyle","setStyle","textToLines","smartlabel","toString","lines","_calCharDimWithCache","calculateDifference","tw","twi","cachedStyle","asymmetricDifference","cache","advancedCacheKey","cacheName","cacheInitName","maxAdvancedCacheLimit","_advancedCache","_advancedCacheKey","_getDimention","repeat","shift","requireDiv","_containerObj","str","bbox","_isSameStyle","_setStyleOfCanvas","hashString","sCont","indexOf","_context","context","_cache","_lineHeight","_styleNotSet","_setStyleOfDiv","_updateStyle","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","hasOnlyBrTag","dimentionObj","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","match","getSize","cleanText","tooltext","concat","spaceIdx","dashIdx","offsetLeft","offsetTop","insertBefore","detailedCalculationFlag","config","textArr","letter","lSize","l","cumulativeSize","getOriSize","SmartLabel","calcText","generalizedSmartlabel","calcImageFit","sourceWidth","sourceHeight","targetWidth","targetHeight","scale","min","drawCover","fit","bitmap","drawImage","drawText","fillStyle","fillRect","textBaseline","xPos","align","getXPos","yPos","getYPos","lineOfText","fillText","drawBackground","editCanvas","state","RemoveButton","DownloadButton","Canvas","isReady","setReady","setCanvas","Result","canvasElRef","substring","replaceAll","ref","blink","keyframes","Spinner","css","Loader","ResultsActions","Banners","creatives","zip","JSZip","setTimeout","entries","creative","filePromise","file","generateAsync","content","saveAs","useDownload","allLoaded","App","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7a7ca444.chunk.js","sourcesContent":["export const templates = Object.freeze([\n  {\n    key: 'key1',\n    width: 1080,\n    height: 1920,\n    backgroundColor: '#000',\n    background: {\n      x: 0,\n      y: 380,\n      width: 1080,\n      height: 650,\n      isCover: false\n    },\n    texts: [{\n      x: 0,\n      y: 1200,\n      width: 1080,\n      height: 240,\n      textAlign: 'left',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 20,\n      fontSize: 72,\n      lineHeight: 84,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: ''\n    },\n    {\n      x: 0,\n      y: 1460,\n      width: 1080,\n      height: 300,\n      autoHeight: true,\n      textAlign: 'left',\n      verticalAlign: 'top',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 40,\n      lineHeight: 70,\n      fontFamily: 'Arial',\n      textColor: '#fff',\n      backgroundColor: ''\n    }]\n  },\n  {\n    key: 'key2',\n    width: 1080,\n    height: 1080,\n    backgroundColor: '#fff',\n    background: {\n      x: 0,\n      y: 100,\n      width: 1080,\n      height: 460,\n      isCover: false\n    },\n    texts: [{\n      x: 0,\n      y: 600,\n      width: 1080,\n      height: 200,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 20,\n      fontSize: 66,\n      lineHeight: 80,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#000',\n      backgroundColor: ''\n    },\n    {\n      x: 0,\n      y: 820,\n      width: 1080,\n      height: 200,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 32,\n      lineHeight: 52,\n      fontFamily: 'Arial',\n      textColor: '#000',\n      backgroundColor: '',\n      autoHeight: true,\n      pinTo: 'bottom'\n    }]\n  },\n  {\n    key: 'key3',\n    width: 1080,\n    height: 610,\n    backgroundColor: '#000',\n    background: {\n      x: 40,\n      y: 40,\n      width: 520,\n      height: 530,\n      isCover: false\n    },\n    texts: [{\n      x: 560,\n      y: 50,\n      width: 520,\n      height: 250,\n      textAlign: 'left',\n      verticalAlign: 'center',\n      hPadding: 50,\n      vPadding: 20,\n      fontSize: 48,\n      lineHeight: 60,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: ''\n    },\n    {\n      x: 560,\n      y: 300,\n      width: 520,\n      height: 300,\n      textAlign: 'left',\n      verticalAlign: 'top',\n      hPadding: 50,\n      vPadding: 10,\n      fontSize: 28,\n      lineHeight: 42,\n      fontFamily: 'Arial',\n      textColor: '#fff',\n      backgroundColor: '',\n      autoHeight: true,\n      pinTo: 'bottom'\n    }]\n  },\n  {\n    key: 'key4',\n    width: 1080,\n    height: 1080,\n    backgroundColor: '#000',\n    background: {\n      x: 0,\n      y: 0,\n      width: 1080,\n      height: 1080,\n      isCover: true\n    },\n    texts: [{\n      x: 0,\n      y: 0,\n      width: 1080,\n      height: 600,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 40,\n      fontSize: 130,\n      lineHeight: 140,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#fff',\n      backgroundColor: '#cc2600cc'\n    },\n    {\n      x: 0,\n      y: 930,\n      width: 1080,\n      height: 150,\n      textAlign: 'center',\n      verticalAlign: 'center',\n      hPadding: 100,\n      vPadding: 10,\n      fontSize: 32,\n      lineHeight: 52,\n      fontFamily: 'Arial',\n      fontWeight: 'bold',\n      textColor: '#000',\n      backgroundColor: '#fffc',\n      pinTo: 'bottom'\n    }]\n  }\n])\n","import axios from 'axios'\n// import { res } from './example'\nimport { templates } from 'data/templates'\n\n// const root = 'https://725epzm94l.execute-api.eu-central-1.amazonaws.com/dev'\nconst root = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3006'\n  : 'https://ads-gen.herokuapp.com/'\n\nexport const endpoints = {\n  getUrlData: `${root}/getUrlData`,\n  imageUrl: `${root}/imageUrl?url=`\n}\n\nexport const getImageUrl = (url) => {\n  return encodeURIComponent(`${endpoints.imageUrl}${url}`)\n}\n\nexport const getDataFromLink = (params) => {\n  return axios.get(endpoints.getUrlData, {\n    params\n  })\n    .then(response => {\n      return {\n        ...response.data,\n        templates\n      }\n    })\n    .catch(error => {\n      console.error(error)\n    })\n  // .then(response => {\n  //   console.log(response)\n  //   return Promise.all(\n  //     response.data.images.map(image => {\n  //       return {\n  //         ...image,\n  //         src: URL.createObjectURL(new Blob([image.data]), { type: 'image/png' })\n  //       }\n  //     })\n  //   ).then(images => {\n  //     console.log(images)\n\n  //     return {\n  //       ...response.data,\n  //       images,\n  //       templates\n  //     }\n  //   })\n  // })\n\n  // return new Promise((resolve, reject) => {\n  //   try {\n  //     const d = Object.keys(res).reduce((prev, key) => {\n  //       return {\n  //         ...prev,\n  //         [key]: res[key].slice()\n  //       }\n  //     }, {})\n  //     resolve({\n  //       ...d,\n  //       templates\n  //     })\n  //   } catch (error) {\n  //     reject(error)\n  //   }\n  // })\n  // return axios.get('/')\n  //   .then(data => {\n  //     const d = Object.keys(res).reduce((prev, key) => {\n  //       return {\n  //         ...prev,\n  //         [key]: res[key].slice()\n  //       }\n  //     }, {})\n  //     return {\n  //       ...d,\n  //       templates\n  //     }\n  //   })\n}\n","import { useEffect } from 'react'\n\nconst loadImageCreator = () => {\n  const memoized = {}\n\n  return (src) => {\n    if (memoized[src]) return memoized[src]\n\n    memoized[src] = new Promise((resolve) => {\n      const img = new Image()\n      img.src = src\n      img.crossOrigin = 'Anonymous'\n\n      img.onload = () => {\n        resolve(createImageBitmap(img))\n      }\n    })\n\n    return memoized[src]\n  }\n}\n\nconst loadImage = loadImageCreator()\n\nconst preloadImages = (images) => {\n  return Promise.all(\n    images.map(image => loadImage(image.src))\n  )\n}\n\nexport const useLoadImages = (linksData) => {\n  const images = linksData.images\n\n  useEffect(() => {\n    if (images) {\n      preloadImages(images)\n    }\n  }, [images])\n\n  return {\n    loadImage, preloadImages\n  }\n}\n","import React, { createContext, useMemo } from 'react'\nimport { useLinksData } from './useLinksData'\nimport { useLoadImages } from './useLoadImages'\n\nconst Context = createContext({})\nconst WasChanged = createContext(false)\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value, wasChanged\n  } = useLinksData()\n\n  const loadImagesActions = useLoadImages(value.linksData)\n\n  const mergedActions = useMemo(() => ({\n    ...actions,\n    ...loadImagesActions\n  }), [actions, loadImagesActions])\n\n  return (\n    <Context.Provider value={value}>\n      <WasChanged.Provider value={wasChanged}>\n        <ActionsContext.Provider value={mergedActions}>\n          { children }\n        </ActionsContext.Provider>\n      </WasChanged.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, WasChanged, ActionsContext, Provider\n}\n","import { useState, useMemo, useCallback } from 'react'\n\nexport const useLinksData = () => {\n  const [linksData, setLinksDataState] = useState({})\n  const [wasChanged, setWasChanged] = useState(false)\n\n  const setLinksData = useCallback((data) => {\n    setLinksDataState(data)\n  }, [setLinksDataState])\n\n  const setLinksDataFieldItem = useCallback(({\n    input, field, i\n  }) => {\n    setLinksDataState(data => {\n      const newData = Object.assign({}, data)\n      newData[field][i] = input\n      return newData\n    })\n  }, [setLinksDataState])\n\n  const removeLinksFieldItem = useCallback(({\n    field, i\n  }) => {\n    setLinksData(data => {\n      if (data[field].length > 1) {\n        const newData = Object.assign({}, data)\n        newData[field].splice(i, 1)\n        setWasChanged(true)\n        return newData\n      }\n      return data\n    })\n  }, [setLinksData, setWasChanged])\n\n  const actions = useMemo(() => ({\n    setLinksData, setLinksDataFieldItem, removeLinksFieldItem, setWasChanged\n  }), [setLinksData, setLinksDataFieldItem, removeLinksFieldItem, setWasChanged])\n\n  const value = useMemo(() => ({\n    linksData\n  }), [linksData])\n\n  return {\n    actions, value, wasChanged\n  }\n}\n","export function getCartesian (object) {\n  return Object.entries(object).reduce(\n    (r, [k, v]) => {\n      var temp = []\n      r.forEach(s =>\n        (Array.isArray(v) ? v : [v]).forEach(w =>\n          (w && [w]).forEach((x, ii) =>\n            temp.push(\n              Object.assign({}, s, {\n                [k]: {\n                  index: ii,\n                  value: x\n                }\n              })\n            )\n          )\n        )\n      )\n      return temp\n    },\n    [{}]\n  )\n}\n\nexport function getCartesianIndexes (data) {\n  let result = [0]\n\n  Object.keys(data).forEach(key => {\n    const local = []\n    data[key].forEach((item, ii) => {\n      result.forEach(resultItem => {\n        local.push({\n          ...resultItem,\n          [key]: ii\n        })\n      })\n    })\n    result = local\n  })\n\n  return result\n};\n\nexport const skipEmptyArrays = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val && val.length) result[key] = val\n  })\n  return result\n}\n\nexport const skipEmptyProps = (obj) => {\n  const result = {}\n  Object.entries(obj).forEach(([key, val]) => {\n    if (val !== undefined) result[key] = val\n  })\n  return result\n}\n\nexport const downloadFromUrl = (url) => {\n  if (url) {\n    const link = document.createElement('a')\n    link.href = url\n    link.download = 'creatives.zip'\n    link.click()\n  }\n}\n","import { useState, useMemo, useCallback } from 'react'\nimport { templates } from 'data/templates'\nimport { getCartesianIndexes } from './helpers'\nimport { normalizeLinksData } from './normalize'\n\nexport const useCombinations = () => {\n  const [combinations, setCombinations] = useState([])\n\n  const calcCombinations = useCallback((linksData) => {\n    const normalized = normalizeLinksData(linksData)\n    const combinations = getCartesianIndexes(normalized)\n\n    if (combinations.length) {\n      setCombinations(combinations.sort((a, b) => {\n        return templates[a.template] > templates[b.template]\n          ? 1\n          : templates[a.template] < templates[b.template]\n            ? -1\n            : 0\n      })\n      )\n    }\n  }, [setCombinations])\n\n  const removeItem = useCallback((index) => {\n    setCombinations(prev => {\n      return prev.filter((item, i) => i !== index)\n    })\n  }, [setCombinations])\n\n  const actions = useMemo(() => ({\n    calcCombinations, removeItem\n  }), [calcCombinations, removeItem])\n\n  const value = useMemo(() => ({\n    combinations\n  }), [combinations])\n\n  return {\n    actions, value\n  }\n}\n","export const normalizeLinksData = (data) => {\n  return {\n    image: data.images,\n    title: data.titles,\n    text: data.texts,\n    template: data.templates\n  }\n}\n","import React, { createContext } from 'react'\nimport { useCombinations } from './useCombinations'\n\nconst Context = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, value\n  } = useCombinations()\n\n  return (\n    <Context.Provider value={value}>\n      <ActionsContext.Provider value={actions}>\n        { children }\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import React, { createContext } from 'react'\nimport { useBanners } from './useBanners'\n\nconst BannersContext = createContext([])\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, banners\n  } = useBanners()\n\n  return (\n    <BannersContext.Provider value={banners}>\n      <ActionsContext.Provider value={actions}>\n        {children}\n      </ActionsContext.Provider>\n    </BannersContext.Provider>\n  )\n}\n\nexport {\n  BannersContext, ActionsContext, Provider\n}\n","import { useContext, useState, useMemo, useCallback, useEffect } from 'react'\nimport { Combinations, LinksData } from 'store'\n\nexport const useBanners = () => {\n  const { combinations } = useContext(Combinations.Context)\n  const { linksData } = useContext(LinksData.Context)\n  const [banners, setBanners] = useState([])\n\n  useEffect(() => {\n    setBanners(function someSetBanners (prev) {\n      return combinations.map(combination => ({\n        image: linksData.images[combination.image],\n        title: linksData.titles[combination.title],\n        text: linksData.texts[combination.text],\n        template: linksData.templates[combination.template],\n        ...prev\n      }))\n    })\n  }, [combinations, setBanners, linksData])\n\n  const changeBanner = useCallback(({\n    data, id\n  }) => {\n    setBanners(prev => {\n      const newArray = prev.slice()\n      newArray[id] = {\n        ...newArray[id],\n        ...data\n      }\n      return newArray\n    })\n  }, [setBanners])\n\n  const removeBanner = useCallback((index) => {\n    setBanners(prev => {\n      const newState = Object.assign({}, prev)\n      newState[index].removed = true\n      return newState\n    })\n  }, [setBanners])\n\n  const actions = useMemo(() => ({\n    changeBanner, removeBanner\n  }), [changeBanner, removeBanner])\n\n  return {\n    actions,\n    banners\n  }\n}\n","import React, { createContext } from 'react'\nimport { useResult } from './useResult'\n\nconst Context = createContext({})\nconst ActionsContext = createContext({})\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    actions, result\n  } = useResult()\n\n  return (\n    <Context.Provider value={result}>\n      <ActionsContext.Provider value={actions}>\n        {children}\n      </ActionsContext.Provider>\n    </Context.Provider>\n  )\n}\n\nexport {\n  Context, ActionsContext, Provider\n}\n","import { useContext, useState, useMemo, useCallback, useEffect } from 'react'\nimport { Combinations } from 'store'\n\nexport const useResult = () => {\n  const { combinations } = useContext(Combinations.Context)\n  const [result, setResult] = useState({})\n\n  useEffect(() => {\n    if (combinations.length) {\n      setResult({})\n    }\n  }, [combinations, setResult])\n\n  const changeResultItem = useCallback(({\n    data, id\n  }) => {\n    setResult(prev => {\n      const result = Object.assign({}, prev)\n      result[id] = {\n        ...result[id],\n        ...data\n      }\n      return result\n    })\n  }, [setResult])\n\n  const removeResultItem = useCallback(({ id }) => () => {\n    changeResultItem({\n      data: {\n        removed: true\n      },\n      id\n    })\n  }, [changeResultItem])\n\n  const actions = useMemo(() => ({\n    changeResultItem, removeResultItem\n  }), [changeResultItem, removeResultItem])\n\n  return {\n    actions,\n    result\n  }\n}\n","import React, { useContext, useState } from 'react'\nimport { getDataFromLink } from 'api'\nimport { LinksData, Combinations } from 'store'\nimport { Loader } from 'components'\nimport './style.css'\n\nconst block = 'LinkToSource'\n\nexport const LinkToSource = () => {\n  const [isLoading, setLoading] = useState(false)\n  const [link, setLink] = useState('')\n  const { setLinksData } = useContext(LinksData.ActionsContext)\n  const { calcCombinations } = useContext(Combinations.ActionsContext)\n\n  const onLinkSubmit = (e) => {\n    e.preventDefault()\n    setLoading(true)\n    getDataFromLink({\n      url: link\n    })\n      .then(data => {\n        try {\n          if (data) {\n            setLinksData(data)\n            calcCombinations(data)\n          }\n        } catch (e) {\n          throw new Error(e)\n        }\n      })\n      .catch(error => {\n        console.warn(error)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <form\n      className={`${block}-form`}\n      onSubmit={onLinkSubmit}\n    >\n      <input\n        className={`${block}-input`}\n        placeholder='ссылка на источник'\n        value={link}\n        onChange={e => setLink(e.target.value)}\n      />\n      <button\n        className={`${block}-submit`}\n        type=\"submit\"\n        disabled={!link || isLoading}\n      >\n        <Loader isLoading={isLoading} size='s' />\n\n        {!isLoading && (\n          'загрузить'\n        )}\n      </button>\n    </form>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: red;\n  color: #fff;\n  font-size: 20px;\n  line-height: 1;\n\n  &:hover {\n    background-color: #f00a;\n  }\n`\n","import React from 'react'\nimport { Button } from './styled'\n\nexport const CloseButton = (props) => {\n  return (\n    <Button {...props}>\n      ×\n    </Button>\n  )\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components/CloseButton'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 20px;\n`\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const List = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n`\n\nexport const Item = styled.div`\n  padding: 6px 0;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: var(--radius-m);\n\n  canvas {\n    max-width: 100%;\n  }\n`\n\nexport const Loader = styled.div`\n\n`\n\nexport const RemoveItem = styled(CloseButton)``\n","import React, { useContext, useEffect } from 'react'\nimport { Combinations, LinksData } from 'store'\nimport { Wrapper, List, Item, Title } from './styled'\nimport { Canvas, ResultsActions } from 'components'\n\nexport const Showtime = () => {\n  const { linksData } = useContext(LinksData.Context)\n  const linksDataWasChanged = useContext(LinksData.WasChanged)\n  const { combinations } = useContext(Combinations.Context)\n  const { removeItem, calcCombinations } = useContext(Combinations.ActionsContext)\n\n  useEffect(() => {\n    if (linksDataWasChanged) {\n      calcCombinations(linksData)\n    }\n  }, [linksData, linksDataWasChanged, calcCombinations])\n\n  const removeCombinationItem = (index) => () => {\n    removeItem(index)\n  }\n\n  if (!combinations.length) return null\n\n  return (\n    <Wrapper>\n      <Title>Результаты: {combinations.length}</Title>\n\n      <ResultsActions />\n\n      <List>\n        {combinations.map(({ template, image, text, title }, i) => {\n          const key = `${template}_${image}_${text}_${title}`\n          return (\n            <Item key={key}>\n              <Canvas\n                {...{\n                  id: key,\n                  texts: [linksData.titles[title], linksData.texts[text]],\n                  template: linksData.templates[template],\n                  background: linksData.images[image]?.src,\n                  onRemove: removeCombinationItem(i)\n                }}\n              />\n            </Item>\n          )\n        })}\n      </List>\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components/CloseButton'\n\nexport const Remove = styled(CloseButton)`\n  opacity: 0;\n  transition: opacity 0.3s ease;\n`\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  word-break: break-word;\n  display: grid;\n  grid-gap: 50px;\n`\n\nexport const DataFromLink = styled.div`\n  display: grid;\n  grid-gap: 30px;\n`\n\nexport const Section = styled.div`\n  display: grid;\n  grid-gap: 20px;\n`\n\nexport const TextsWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n`\n\nexport const ImagesWrapper = styled(Section)`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(3, 1fr);\n`\n\nexport const Item = styled.div`\n  position: relative;\n  display: block;\n  padding: 10px 20px;\n  background: #fff3;\n  border-radius: 3px;\n  overflow: hidden;\n\n  &:hover ${Remove} {\n    opacity: 1;\n    transition: opacity 0.1s ease;\n  }\n`\n\nexport const ImageItem = styled(Item)`\n  padding: 0;\n  overflow: hidden;\n`\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: normal;\n  margin: 0;\n`\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`\n","import React from 'react'\nimport {\n  ImageItem as Wrapper, Image, Remove\n} from '../styled'\n\nexport const ImageItem = ({\n  image, onRemove\n}) => {\n  console.log(image)\n  return (\n    <Wrapper>\n      <Image src={image.src} />\n      <Remove\n        onClick={onRemove}\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport {\n  Item, Remove\n} from '../styled'\n\nexport const TextItem = ({\n  text, onChange, onRemove\n}) => {\n  return (\n    <Item>\n      <span\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={onChange}\n      >\n        { text }\n      </span>\n      <Remove\n        onClick={onRemove}\n      />\n    </Item>\n  )\n}\n","import React, { useContext, useCallback } from 'react'\nimport { LinksData } from 'store'\nimport {\n  Wrapper, DataFromLink, Section, TextsWrapper, ImagesWrapper, Title\n} from './styled'\nimport { ImageItem, TextItem } from './components'\n\nexport const Review = () => {\n  const { linksData } = useContext(LinksData.Context)\n  const {\n    setLinksDataFieldItem, removeLinksFieldItem\n  } = useContext(LinksData.ActionsContext)\n\n  const hasLinksData = Object.values(linksData).filter(link => typeof link === 'object').length > 2\n\n  const changeFieldItem = useCallback(props => event => {\n    setLinksDataFieldItem({\n      ...props,\n      input: event.target.textContent\n    })\n  }, [setLinksDataFieldItem])\n\n  const removeFieldItem = useCallback(props => () => {\n    removeLinksFieldItem(props)\n  }, [removeLinksFieldItem])\n\n  if (!hasLinksData) return null\n\n  return (\n    <Wrapper>\n      <DataFromLink>\n        <Section>\n          <Title>\n            Заголовок\n          </Title>\n          <TextsWrapper>\n            {linksData.titles.map((title, i) => (\n              <TextItem\n                key={`${i}_${title}`}\n                text={title}\n                index={i}\n                onChange={changeFieldItem({\n                  field: 'titles', i\n                })}\n                onRemove={removeFieldItem({\n                  field: 'titles', i\n                })}\n              />\n            ))}\n          </TextsWrapper>\n        </Section>\n\n        <Section>\n          <Title>\n            Описание\n          </Title>\n          <TextsWrapper>\n            {linksData.texts.map((text, i) => (\n              <TextItem\n                key={`${i}_${text}`}\n                text={text}\n                index={i}\n                onChange={changeFieldItem({\n                  field: 'texts', i\n                })}\n                onRemove={removeFieldItem({\n                  field: 'texts', i\n                })}\n              />\n            ))}\n          </TextsWrapper>\n        </Section>\n\n        <Section>\n          <Title>\n            Изображение\n          </Title>\n          <ImagesWrapper>\n            {linksData.images.map((image, i) => (\n              <ImageItem\n                key={`${i}_${image.src}`}\n                image={image}\n                index={i}\n                onRemove={removeFieldItem({\n                  field: 'images', i\n                })}\n              />\n            ))}\n          </ImagesWrapper>\n        </Section>\n      </DataFromLink>\n    </Wrapper>\n  )\n}\n","export function createImageFromBlob (blob, size) {\n  const imageEl = document.createElement('img')\n  const urlCreator = window.URL || window.webkitURL\n  const imageUrl = urlCreator.createObjectURL(blob)\n  imageEl.src = imageUrl\n  imageEl.width = size.width\n  imageEl.height = size.height\n  return imageEl\n}\n\nexport function downloadCanvas ({ canvas, filename }) {\n  return () => {\n    canvas.toBlob(async blob => {\n      const blobUrl = await URL.createObjectURL(blob)\n\n      downloadBlobUrl({\n        url: blobUrl,\n        filename\n      })\n    })\n  }\n}\n\nexport function downloadBlobCreator ({ blob, filename }) {\n  return async () => {\n    const blobUrl = await URL.createObjectURL(blob)\n\n    downloadBlobUrl({\n      url: blobUrl,\n      filename\n    })\n  }\n}\n\nexport async function downloadFromUrl ({ url, filename }) {\n  const blobUrl = await generateBlobUrl(url)\n\n  downloadBlobUrl({\n    url: blobUrl,\n    filename\n  })\n}\n\nasync function generateBlobUrl (url) {\n  const response = await fetch(url)\n  const blob = await response.blob()\n  return URL.createObjectURL(blob)\n}\n\nfunction downloadBlobUrl ({ url, filename = 'file' }) {\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename + '.png'\n  document.body.appendChild(link)\n  link.click()\n  link.remove()\n}\n","/* eslint-disable */\n\nvar lib = {\n\tinit: function (win) {\n\t\tvar doc = win.document,\n        \tnav = win.navigator,\n        \tuserAgent = nav.userAgent,\n        \tDIV = 'DIV',\n        \tceil = Math.ceil,\n        \tfloor = Math.floor,\n        \tclsNameSpace = 'fusioncharts-smartlabel-',\n        \tcontainerClass = clsNameSpace + 'container',\n        \tclassNameWithTag = clsNameSpace + 'tag',\n        \tclassNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\t\t\t\n\t\t\tmaxDefaultCacheLimit: 1000,\n\n\t\t\t// The regex we get from new RegExp does not perform the work as intended\n\n\t\t\t// classNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\t\t\t\n\t\t\t// classNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tclassNameReg: /\\bfusioncharts-smartlabel-tag\\b/,\n\n\t\t\tclassNameBrReg: /\\bfusioncharts-smartlabel-br\\b/,\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\t\t\t\n\t\t\tspanAdditionReplacer: '$1<span class=\"'+ classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?'+ classNameWithTag +'[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tbrRegex: new RegExp('({br[ ]*})|(<br[ ]*>)|(<br[ ]*\\/>)|(<BR[ ]*\\/>)|(<br\\\\>)', 'g'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tnbspRegex: /&nbsp;|&#160;|&#xA0;/g,\n\n\t\t\thtmlSpecialEntityRegex: /&amp;|&quot;|&lt;|&gt;/g,\n        \t\n        \tbrReplaceRegex: /<br\\/>/ig,\n\n        \ttestStrAvg: 'WgI',\n\n        \t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t    position: 'absolute',\n\t\t\t    top: '-9999em',\n\t\t\t    whiteSpace: 'nowrap',\n\t\t\t    padding: '0px',\n\t\t\t    width: '1px',\n\t\t\t    height: '1px',\n\t\t\t    overflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t    font: 'font',\n\t\t\t    fontFamily: 'font-family',\n\t\t\t    'font-family': 'font-family',\n\t\t\t    fontWeight: 'font-weight',\n\t\t\t    'font-weight': 'font-weight',\n\t\t\t    fontSize: 'font-size',\n\t\t\t    'font-size': 'font-size',\n\t\t\t    lineHeight: 'line-height',\n\t\t\t    'line-height': 'line-height',\n\t\t\t    fontStyle: 'font-style',\n\t\t\t    'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function () {\n\t\t\t\tvar childRetriverFn,\n\t\t\t\t    childRetriverString,\n\t\t\t\t    noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t    childRetriverFn = 'getElementsByClassName';\n\t\t\t\t    childRetriverString = classNameWithTag;\n\t\t\t\t    noClassTesting = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t    childRetriverFn = 'getElementsByTagName';\n\t\t\t\t    childRetriverString = 'span';\n\t\t\t\t    noClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t    isIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t    hasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature(\n\t\t\t\t        'http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t    isHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t    isWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t    childRetriverFn: childRetriverFn,\n\t\t\t\t    childRetriverString: childRetriverString,\n\t\t\t\t    noClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Create a html div element and attach it with a parent. All the subsequent operations are performed\n\t\t\t * by upding this dom tree only.\n\t\t\t *\n\t\t\t * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n\t\t\t *                      the new div is appended on the body.\n\t\t\t */\n\t\t\tcreateContainer: function (containerParent) {\n\t\t\t    var body,\n\t\t\t        container;\n\n\t\t\t    if (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t        if (containerParent.appendChild) {\n\t\t\t            containerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        body = doc.getElementsByTagName('body')[0];\n\n\t\t\t        if (body && body.appendChild) {\n\t\t\t            container = doc.createElement(DIV);\n\t\t\t            container.className = containerClass;\n\t\t\t            container.setAttribute('aria-hidden', 'true');\n\t\t\t            container.setAttribute('role', 'presentation');\n\t\t\t            body.appendChild(container);\n\t\t\t            return container;\n\t\t\t        }\n\t\t\t    }\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function  (text, maxWidth, sl) {\n\t\t\t    if (!text || !text.length) {\n\t\t\t        return 0;\n\t\t\t    }\n\n\t\t\t    var difference,\n\t\t\t        getWidth = sl._getWidthFn(),\n\t\t\t        charLen = 0,\n\t\t\t        increment = 0,\n\t\t\t        oriWidth = getWidth(text),\n\t\t\t        avgWidth = oriWidth / text.length;\n\n\t\t\t    difference = maxWidth;\n\t\t\t    charLen = ceil(maxWidth / avgWidth);\n\n\t\t\t    if (oriWidth < maxWidth) {\n\t\t\t        return (text.length - 1);\n\t\t\t    }\n\n\t\t\t    if (charLen > text.length) {\n\t\t\t        difference = maxWidth - oriWidth;\n\t\t\t        charLen = text.length;\n\t\t\t    }\n\n\t\t\t    while (difference > 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\n\t\t\t    while (difference < 0) {\n\t\t\t        difference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t        increment = floor(difference / avgWidth);\n\t\t\t        if (increment) {\n\t\t\t            charLen += increment;\n\t\t\t        } else {\n\t\t\t            return charLen;\n\t\t\t        }\n\t\t\t    }\n\t\t\t    return charLen;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * parses the style information\n\t\t\t */\n\t\t\tparseStyle: function (style = {}) {\n\t\t\t\tvar parsedStyle = {};\n\n\t\t\t\tparsedStyle.fontSize = (style.fontSize || style['font-size'] || '12px') + '';\n\t\t\t\tparsedStyle.fontVariant = style.fontVariant || style['font-variant'] || 'normal';\n\t\t\t\tparsedStyle.fontWeight = style.fontWeight || style['font-weight'] || 'normal';\n\t\t\t\tparsedStyle.fontStyle = style.fontStyle || style['font-style'] || 'normal';\n\t\t\t\tparsedStyle.fontFamily = style.fontFamily || style['font-family'] || 'Verdana,sans';\n\t\t\t\tparsedStyle.lineHeight = style.lineHeight || style['line-height'] || '15px';\n\n\t\t\t\treturn parsedStyle;\n\t\t\t},\n\t\t\t/*\n\t\t\t * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n\t\t\t *\n\t\t\t * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n\t\t\t *                  based on fontSize property, if its not present a default font size is assumed.\n\t\t\t *\n\t\t\t * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n\t\t\t */\n\t\t\tsetLineHeight: function  (styleObj) {\n\t\t        var fSize = styleObj.fontSize;\n\t\t        styleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || ((parseInt(fSize, 10) * 1.2) + 'px');\n\t\t        return styleObj;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the clean height by removing 'px' if present.\n\t\t\t */\n\t\t\t_getCleanHeight: function (height) {\n\t\t\t\t// Remove 'px' from  height and convert it to number\n\t\t\t\theight = height.replace(/px/g, '');\n\t\t\t\treturn Number(height);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Div is used for calculation of text dimention in all non-canvas browsers. It sets the text as\n\t\t\t * innerHTML of the div and uses it's offsetWidth and offsetHeight as width and height respectively\n\t\t\t *\n\t\t\t * @param {string} text - text, whose measurements are to be calculated\n\t\t\t * \n\t\t\t * @returns {Object} - dimension of text\n\t\t\t */\n\t\t\t_getDimentionUsingDiv: function (text = '', sl) {\n\t\t\t\tvar container = sl._container;\n\t\t\t\n\t\t\t\t// In case text is an array, convert it to string.\n\t\t\t\tif (text instanceof Array) {\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t}\n\t\t\t\tcontainer.innerHTML = text;\n\t\t\t\treturn {\n\t\t\t\t\twidth: container.offsetWidth,\n\t\t\t\t\theight: container.offsetHeight\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the height and width of a text using the canvas.measureText API.\n\t\t\t * Used for calculating width in browsers supporting html canvas.\n\t\t\t * In case canvas is not present, <div> is used for calculation as a fallback solution\n\t\t\t * \n\t\t\t * @param {any} text -  text. Can be array or string.\n\t\t\t * \n\t\t\t * @return {Object} - width and height.\n\t\t\t */\n\t\t\t_getDimentionUsingCanvas: function (text = '', sl) {\n\t\t\t\tvar ctx = sl.ctx,\n\t\t\t\t\tstyle = sl.style,\n\t\t\t\t\theight = lib._getCleanHeight(style.lineHeight);\n\n\t\t\t\t// In case text is string, remove <br /> from it.\n\t\t\t\tif (!(text instanceof Array)) {\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t} else {\n\t\t\t\t\t// Else if it an array, convert it to string and remove <br />\n\t\t\t\t\ttext = text.join('');\n\t\t\t\t\ttext = text.replace(/<br \\/>/g, '');\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: ctx.measureText(text).width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Checks if text contains any <br /> tag. If yes, it returns all the indexes of it.\n\t\t\t * Else, it returns undefined.\n\t\t\t * \n\t\t\t * @param {string} input -  text which is to be examined for <br /> tag\n\t\t\t * \n\t\t\t * @returns {boolean} - whether text contains only <br> tag\n\t\t\t */\n\t\t\t_hasOnlyBRTag: function (input = '') {\n\t\t\t\treturn !(lib.xmlTagRegEx.test(input)) && lib.brRegex.test(input);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * For a text containing <br /> it returns the height and width of the text\n\t\t\t * \n\t\t\t */\n\t\t\t_getDimentionOfMultiLineText: function (rawText = '', sl) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen,\n\t\t\t\t\ttext = rawText.replace(lib.brRegex, '<br />'),\n\t\t\t\t\ttextAr = lib._getTextArray(text),\n\t\t\t\t\twidth = 0,\n\t\t\t\t\tmaxWidth = 0,\n\t\t\t\t\tgetWidth = sl._getWidthFn(),\n\t\t\t\t\theight = lib._getCleanHeight(sl.style.lineHeight),\n\t\t\t\t\ttextHeight = height,\n\t\t\t\t\ttextWidth,\n\t\t\t\t\tindiSizeStore = {};\n\n\t\t\t\tfor (i = 0, len = textAr.length; i < len; i++) {\n\t\t\t\t\tif (textAr[i] === '<br />') {\n\t\t\t\t\t\t// In case of <br />, reset width to 0, since it will be new line now.\n\t\t\t\t\t\t// Also, increase the line height.\n\t\t\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\t\t\twidth = 0;\n\t\t\t\t\t\ttextHeight += height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Else, calculate the width of the line.\n\t\t\t\t\t\ttextWidth = getWidth(textAr[i]);\n\t\t\t\t\t\twidth += textWidth;\n\t\t\t\t\t\tindiSizeStore[textAr[i]] = textWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaxWidth = Math.max(maxWidth, width);\n\t\t\t\treturn {\n\t\t\t\t\theight: textHeight,\n\t\t\t\t\twidth: maxWidth,\n\t\t\t\t\tdetailObj: indiSizeStore\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Splits text into array and returns. Special functionality is, it treats <br /> as a single character\n\t\t\t */\n\t\t\t_getTextArray: function (text = '') {\n\t\t\t\tvar i,\n\t\t\t\t\tj,\n\t\t\t\t\tlen,\n\t\t\t\t\ttempLen,\n\t\t\t\t\tbrText,\n\t\t\t\t\ttempText,\n\t\t\t\t\tfinaltextAr = [];\n\n\t\t\t\t// Split using <br />\n\t\t\t\tbrText = text.split('<br />');\n\t\t\t\tlen = brText.length;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\ttempText = brText[i].split('');\n\t\t\t\t\ttempLen = tempText.length;\n\n\t\t\t\t\t// for each array retrieved by spliting using <br /> push elements to finalArray.\n\t\t\t\t\tfor (j = 0; j < tempLen; j++) {\n\t\t\t\t\t\tfinaltextAr.push(tempText[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if tempText is not the last text. IF true, add <br /> to the final Array.\n\t\t\t\t\tif (i !== len - 1) {\n\t\t\t\t\t\tfinaltextAr.push('<br />');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn finaltextAr;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the last occurance of item in a array\n\t\t\t */\n\t\t\t_findLastIndex: function (array = [], item) {\n\t\t\t\tvar i,\n\t\t\t\t\tlen = array.length;\n\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tif (array[i] === item) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\n\nexport default lib;","/* eslint-disable */\n\nimport lib from './lib';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager (parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg','svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','xlink','http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','height','0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg','width','0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            if (containerObj.prev) {\n                containerObj.prev.next = containerObj.next;\n            }\n            if (containerObj.next) {\n                containerObj.next.prev = containerObj.prev;\n            }\n            // containerObj.prev && (containerObj.prev.next = containerObj.next);\n            // containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            if (this.last === containerObj) {\n                this.last = containerObj.prev;\n            }\n            // (this.last === containerObj) && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = (len - max) + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype._makeDivNode = function (container) {\n    var node,\n        keyStr = container.keyStr;\n\n    if (!container.node) {\n        container.node = doc.createElement('div');\n        container.node.className = 'fusioncharts-div';\n        this.rootNode.appendChild(container.node);\n    }\n    node = container.node;\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    }\n    else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = (node.offsetWidth / 3);\n\n    if (documentSupport.isBrowserLess) {\n        if (!container.svgText) {\n            container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n            this.svgRoot.appendChild(node);\n        }\n        node = container.svgText;\n        node.setAttribute('style', keyStr);\n        \n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = ((node.getBBox().width - SVG_BBOX_CORRECTION) / 3);\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n};\nContainerManager.prototype.addContainer = function (keyStr) {\n    var container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    if (container.next) {\n        container.next.prev = container;\n    }\n    this.first = container;\n    if (!this.last) {\n        (this.last = container);\n    }\n    this.length += 1;\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    if (cObj.prev) {\n        cObj.prev.next = cObj.next;\n    }\n    if (cObj.next) {\n        cObj.next.prev = cObj.prev;\n    }\n    if (this.first === cObj) {\n        this.first = cObj.next;\n    }\n    if (this.last === cObj) {\n        this.last = cObj.prev;\n    }\n\n    if (cObj.node) {\n        cObj.node.parentNode.removeChild(cObj.node);\n    }\n    \n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nexport default ContainerManager;","/* eslint-disable */\n\nimport lib from './lib';\nimport ContainerManager from './container-manager';\n\nvar slLib = lib.init(window),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n\n/*\n * @constrcutor\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n */\nfunction SmartLabelManager(container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        isBrowserLess = false,\n        canvas = window.document.createElement('canvas');\n\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || (!documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth)) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.parentContainer = wrapper;\n\n    // Get a context of canvas\n    this.ctx = canvas && canvas.getContext && canvas.getContext('2d');\n\n    this._containerManager = new ContainerManager(wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.oldStyle = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\r?\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text = '', calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        style = this.style || {},\n        cache,\n        advancedCacheKey,\n        cacheName,\n        cacheInitName;\n\n        cache = this._advancedCache = this._advancedCache || (this._advancedCache = {});\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []);\n        cacheName = text + style.fontSize + style.fontFamily + style.fontWeight + style.fontStyle;\n        cacheInitName = text + 'init' + style.fontSize + style.fontFamily +\n           style.fontWeight + style.fontStyle;\n\n    if (!this.ctx && htmlSplCharSpace[text]) {\n        text = htmlSplCharSpace[text];\n    }\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            tw = this._getDimention(text.repeat ? text.repeat(length) : Array(length + 1).join(text)).width;\n\n            twi = this._getDimention(text).width;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        return {\n            width: cachedStyle.width,\n            height: cachedStyle.height\n        };\n    }\n\n    size = this._getDimention(text);\n    size.width += asymmetricDifference;\n\n    cache[cacheName] = {\n        width: size.width,\n        height: size.height\n    };\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\nSmartLabelManager.prototype._getDimention = function (text) {\n    if (this.requireDiv || !this.ctx) {\n        return slLib._getDimentionUsingDiv(text, this);\n    } else {\n        return slLib._getDimentionUsingCanvas(text, this);\n    }\n};\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var sl = this,\n        contObj = sl._containerObj,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox,\n                width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = (bbox.width - SVG_BBOX_CORRECTION);\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            if (sl.requireDiv || !sl.ctx) {\n                return slLib._getDimentionUsingDiv(str, sl).width;\n            } else {\n                return slLib._getDimentionUsingCanvas(str, sl).width;\n            }\n        };\n    }\n};\n\n/**\n * Checks if two style object contains the same properties from the following list\n * - font-size\n * - font-family\n * - font-style\n * - font-weight\n * - font-variant\n */\nSmartLabelManager.prototype._isSameStyle = function () {\n    var sl = this,\n        oldStyle = sl.oldStyle || {},\n        style = sl.style;\n\n    if (\n        (style.fontSize !== oldStyle.fontSize) ||\n        (style.fontFamily !== oldStyle.fontFamily) ||\n        (style.fontStyle !== oldStyle.fontStyle) ||\n        (style.fontWeight !== oldStyle.fontWeight) ||\n        (style.lineHeight !== oldStyle.lineHeight) ||\n        (style.fontVariant !== oldStyle.fontVariant)\n    ) {\n        return false;\n    }\n    return true;\n};\n/**\n * Sets font property of canvas context based on which the width of text is calculated.\n *\n * @param {any} style style configuration which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                          lineHeight / 'line-height'\n *                      }\n */\nSmartLabelManager.prototype._setStyleOfCanvas = function () {\n    if (this._isSameStyle()) {\n        return;\n    }\n\n    var sl = this,\n        style = sl.style,\n        hashString,\n        sCont,\n        fontStyle = style.fontStyle,\n        fontVariant = style.fontVariant,\n        fontWeight = style.fontWeight,\n        fontSize = style.fontSize,\n        fontFamily = style.fontFamily,\n        lineHeight = style.lineHeight;\n\n    fontSize += fontSize.indexOf('px') === -1 ? 'px' : '';\n    hashString = fontStyle + ' ' + fontVariant + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily;\n\n    sl.ctx.font = hashString;\n    sCont = this._containerObj = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n    sCont.ellipsesWidth = sl._calCharDimWithCache('...', false).width;\n    sCont.dotWidth = sl._calCharDimWithCache('.', false).width;\n    sCont.lineHeight = this._lineHeight = sCont.lineHeight || slLib._getCleanHeight(style.lineHeight);\n    this.oldStyle = style;\n};\n\nSmartLabelManager.prototype._setStyleOfDiv = function () {\n    var sCont,\n        style = this.style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n    if (!sCont.node) {\n        this._containerManager._makeDivNode(this._containerObj);\n    }\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n};\n\nSmartLabelManager.prototype._updateStyle = function () {\n    return (this.requireDiv || !this.ctx) ? this._setStyleOfDiv() : this._setStyleOfCanvas();\n};\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    this.style = slLib.parseStyle(style);\n    slLib.setLineHeight(this.style);\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = (this._showNoEllipses ? '' : '...'),\n        lineHeight,\n        context,\n        container,\n        sCont,\n        ellipsesWidth,\n        dotWidth,\n        canvas = this.ctx,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        hasOnlyBrTag,\n        dimentionObj,\n        fastTrim = function (str) {\n            str = str.replace(/^\\s\\s*/, '');\n            var ws = /\\s/, i = str.length;\n            while (ws.test(str.charAt(i -= 1))) { /* jshint noempty:false */ }\n            return str.slice(0, i + 1);\n        },\n        smartLabel = {\n            text : text,\n            maxWidth : maxWidth,\n            maxHeight : maxHeight,\n            width : null,\n            height : null,\n            oriTextWidth : null,\n            oriTextHeight : null,\n            oriText : text,\n            isTruncated : false\n        };\n\n    hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    this._updateStyle();\n\n    lineHeight = this._lineHeight;\n    context = this._context;\n    container = this._container;\n    sCont = this._containerObj;\n    ellipsesWidth = sCont.ellipsesWidth;\n    dotWidth = sCont.dotWidth;\n\n    toolText = text.replace(slLib.spanAdditionRegx, '$2');\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    /**\n     * For canvas lineHeight is directly used. In some cases, lineHeight can be 0.x pixels greater than\n     * maxHeight. Previously, div was used to calculate lineHeight and it used to return a rounded number.\n     *\n     * Adding a buffer of 1px, maxheight will be increased by a factor of 1.2 only when\n     * 0 <= (lineHeight - maxHeight) <= 1\n     */\n    if ((lineHeight - maxHeight <= 1) && (lineHeight - maxHeight >= 0)) {\n        maxHeight *= 1.2;\n    }\n\n    if (canvas || container) {\n        if (!documentSupport.isBrowserLess) {\n\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getSize(tmpText, true, {\n                    hasHTMLTag: hasHTMLTag,\n                    hasOnlyBrTag: hasOnlyBrTag,\n                    cleanText: true\n                });\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else if (hasOnlyBrTag) {\n                text = text.replace(slLib.brRegex, '<br />');\n                dimentionObj = slLib._getDimentionOfMultiLineText(text, this);\n                smartLabel.oriTextWidth = oriWidth = dimentionObj.width;\n                smartLabel.oriTextHeight = oriHeight = dimentionObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : (maxWidth - ellipsesWidth);\n\n        // Checks if any html tag is present. This if block is executed for all normal texts and\n        // all texts containing only <br /> tag.\n        if (!hasHTMLTag || hasOnlyBrTag) {\n            // Gets splitted array\n            oriTextArr = slLib._getTextArray(text);\n            len = oriTextArr.length;\n            trimStr = '';\n            tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            }\n            else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth && !hasOnlyBrTag) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n            }\n            else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth =\n                    smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n            else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            i = tempArr.length;\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        strHeight += this._lineHeight;\n                        lastIndexBroken = i;\n\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strWidth = 0;\n                        trimStr = null;\n                        continue;\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = max(maxStrWidth, strWidth);\n\t\t\t\t\t\t\tsmartLabel.height = strHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = max(maxStrWidth, strWidth);\n                smartLabel.height = strHeight;\n                return smartLabel;\n\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = this.ctx ? ' ' : '&nbsp;';\n                    }\n\n                    // In case of <br>, reset width to 0 and increase line height\n                    if (tempArr[i] === '<br />') {\n                        maxStrWidth = max(maxStrWidth, strWidth);\n                        strHeight += this._lineHeight;\n                        if (strHeight <= maxHeight) {\n                            // If the totalHeight is less than allowed height, continue.\n                            lastIndexBroken = i;\n                            strWidth = 0;\n                            trimStr = null;\n                            continue;\n                        } else if (strHeight > maxHeight) {\n                            // Else return by truncating the text and attaching ellipses.\n                            trimStr = tempArr.slice(0, -1).join('');\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = toolText;\n                            smartLabel.width = maxStrWidth;\n\t\t\t\t\t\t\tsmartLabel.height = strHeight - this._lineHeight;\n\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                            return smartLabel;\n                        }\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    }\n                    else {\n                        if (!getOriSizeImproveObj || !(minWidth =\n                            getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            // do not perform any line break operation if next character is a break tag\n                            if (oriTextArr[i + 1] === '<br />') {\n                                continue;\n                            }\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), ' ');\n                            lastDash = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), '-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br />');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br />-');\n                                } else {\n                                    strWidth =\n                                        getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br />');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice((tempArr.length - 1), 1, '<br />' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1,\n                                    lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n\t\t\t\t\t\t\t\tsmartLabel.height = (strHeight - this._lineHeight);\n\t\t\t\t\t\t\t\tsmartLabel.isTruncated = true;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                if (!hasOnlyBrTag) {\n                                    nearestChar =\n                                    slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                    strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                    if (tempArr.length < newCharIndex + nearestChar) {\n                                        tempArr = tempArr.concat(\n                                            text.substr(\n                                                tempArr.length,\n                                                newCharIndex + nearestChar - tempArr.length\n                                            ).split('')\n                                        );\n                                        i = tempArr.length - 1;\n                                    }\n                                } else {\n                                    // take the width already taken in the new line.\n                                    strWidth = slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken + 1).join(''), this).width;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        }\n        else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(\n                /(<br\\s*\\/*\\>)/g,\n                '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>'\n            );\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if ( chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            // if character array is not generated\n            minWidth = len && characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth || !len) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - (2 * dotWidth);\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = (elem.offsetLeft - initialLeft) + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) { // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if ((elem.offsetHeight + elem.offsetTop) > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                }\n                                else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ?\n                removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    }\n    else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        container,\n        indiSizeStore = { },\n        hasHTMLTag = config.hasHTMLTag,\n        hasOnlyBrTag = config.hasOnlyBrTag;\n\n    if (typeof hasHTMLTag === 'undefined') {\n        hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n    }\n    if (typeof hasOnlyBrTag === 'undefined') {\n        hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n    }\n\n    this.requireDiv = (hasHTMLTag && !hasOnlyBrTag);\n    if (!config.cleanText) {\n        text = text.replace(slLib.ltgtRegex, function (match) {\n            return match === '&lt;' ? '<' : '>';\n        });\n    }\n    this._updateStyle();\n    container = this._container;\n\n    // When text is normal text\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    } else {\n        // Calculate the width of every letter with an approximation\n        textArr = text.split('');\n        for (i = 0, l = textArr.length; i < l; i++) {\n            letter = textArr[i];\n            lSize = this._calCharDimWithCache(letter, false, textArr.length);\n            height = max(height, lSize.height);\n            cumulativeSize += lSize.width;\n            indiSizeStore[letter] = lSize.width;\n        }\n    }\n    // If text has br tag, return the width and height with proper calculations\n    if (hasOnlyBrTag) {\n        return {\n            ...slLib._getDimentionOfMultiLineText(text, this),\n            detailObj: indiSizeStore\n        };\n    }\n\n    // text contains html tags other than br\n    if (hasHTMLTag) {\n        container.innerHTML = text;\n        return {\n            width: container.offsetWidth,\n            height: container.offsetHeight,\n            detailObj: indiSizeStore\n        };\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/**\n * getOriSize API will eventually be deprecated and will be renamed to getSize API. For the next two versions,\n * both getOriSize and getSize API will be supported.\n */\nSmartLabelManager.prototype.getOriSize = function (text = '', detailedCalculationFlag = true, config = {}) {\n    return this.getSize(text, detailedCalculationFlag, config);\n};\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    if (this._containerManager && this._containerManager.dispose) {\n        this._containerManager.dispose();\n    }\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexport default SmartLabelManager;\n","import SmartLabel from 'vendor/smartLabel/SmartlabelManager'\n\nconst sl = new SmartLabel('div', true)\n\nexport const calcText = (props) => {\n  const {\n    text,\n    fontSize,\n    fontFamily,\n    fontWeight = 'normal',\n    lineHeight,\n    width,\n    height,\n    hPadding,\n    vPadding\n  } = props\n\n  const textWidth = width - hPadding * 2\n  const textHeight = height - vPadding * 2\n\n  sl.setStyle({\n    lineHeight: lineHeight && `${lineHeight}px`,\n    fontSize: fontSize && `${fontSize}px`,\n    fontFamily: fontFamily || 'Arial',\n    fontWeight: fontWeight,\n    fontStyle: 'normal'\n  })\n\n  const smartLabel = sl.getSmartText(text, textWidth, textHeight, false)\n  const generalizedSmartlabel = SmartLabel.textToLines(smartLabel)\n\n  return {\n    ...props,\n    lines: generalizedSmartlabel.lines,\n    lineHeight,\n    textWidth: generalizedSmartlabel.width,\n    textHeight: generalizedSmartlabel.height,\n    text: generalizedSmartlabel.text,\n    oriText: text\n  }\n}\n","export function calcImageFit (isCover) {\n  return (sourceWidth, sourceHeight, targetWidth, targetHeight) => {\n    var scale = isCover\n      ? Math.min(sourceWidth / targetWidth, sourceHeight / targetHeight)\n      : Math.max(sourceWidth / targetWidth, sourceHeight / targetHeight)\n\n    var x = (sourceWidth / 2) - (targetWidth / 2) * scale\n    var y = (sourceHeight / 2) - (targetHeight / 2) * scale\n    return {\n      x,\n      y,\n      width: targetWidth * scale,\n      height: targetHeight * scale\n    }\n  }\n}\n\nexport const contain = calcImageFit(false)\nexport const cover = calcImageFit(true)\n","import { calcImageFit } from './helpers'\n\nconst drawCover = (ctx, {\n  background\n}) => {\n  const fit = calcImageFit(background.isCover)(\n    background.bitmap.width,\n    background.bitmap.height,\n    background.width,\n    background.height\n  )\n\n  const {\n    width, height, x, y\n  } = fit\n\n  ctx.drawImage(\n    background.bitmap,\n    x,\n    y,\n    width,\n    height,\n    background.x,\n    background.y,\n    background.width,\n    background.height\n  )\n}\n\nconst getXPos = ({\n  align, textWidth, width, padding\n}) => {\n  switch (align) {\n    case 'center':\n      return width / 2\n    case 'right':\n      return textWidth + padding\n    case 'left':\n    default:\n      return padding\n  }\n}\n\nconst getYPos = ({\n  align, textHeight, height, padding\n}) => {\n  const difference = height - textHeight\n\n  switch (align) {\n    case 'center':\n      return difference / 2\n    case 'bottom':\n      return textHeight\n    case 'top':\n    default:\n      return padding\n  }\n}\n\nconst drawText = ctx => text => {\n  const {\n    width,\n    height,\n    autoHeight,\n    lines,\n    fontSize,\n    fontFamily,\n    fontWeight = 'normal',\n    lineHeight,\n    hPadding,\n    vPadding,\n    verticalAlign,\n    textAlign,\n    textWidth,\n    textHeight,\n    textColor,\n    backgroundColor,\n    x = 0,\n    y = 0\n  } = text\n\n  ctx.fillStyle = backgroundColor || '#0000'\n  ctx.fillRect(\n    x,\n    y,\n    width,\n    autoHeight ? textHeight + vPadding * 2 : height\n  )\n\n  ctx.fillStyle = textColor || '#111'\n  ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`\n  ctx.textBaseline = 'middle'\n  ctx.textAlign = textAlign\n\n  const xPos = x + getXPos({\n    align: textAlign,\n    textWidth,\n    width,\n    padding: hPadding\n  })\n\n  const yPos = y + getYPos({\n    align: verticalAlign,\n    textHeight,\n    height,\n    padding: vPadding\n  })\n\n  lines.forEach((lineOfText, i) => {\n    ctx.fillText(\n      lineOfText,\n      xPos,\n      yPos + lineHeight * (i + 0.5)\n    )\n  })\n}\n\nconst drawBackground = (ctx, {\n  width, height, backgroundColor\n}) => {\n  ctx.fillStyle = backgroundColor || '#000'\n  ctx.fillRect(0, 0, width, height)\n}\n\nexport const editCanvas = async (ctx, {\n  width, height, texts, background, backgroundColor\n}) => {\n  drawBackground(ctx, {\n    width, height, backgroundColor\n  })\n\n  drawCover(ctx, {\n    background\n  })\n\n  texts.forEach(drawText(ctx))\n\n  return {\n    state: 'ready'\n  }\n}\n","import styled from 'styled-components'\nimport { CloseButton } from 'components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  button {\n    opacity: 0;\n    transition: opacity .1s ease;\n  }\n\n  &:hover button {\n    opacity: 1;\n    transition: opacity .2s ease;\n  }\n`\n\nexport const RemoveButton = styled(CloseButton)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n`\n\nexport const DownloadButton = styled.button`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n`\n","import React, { useCallback, useContext, useState } from 'react'\nimport { LinksData, Result } from 'store'\nimport { editCanvas } from './editCanvas'\nimport { calcText, downloadCanvas } from './helpers'\nimport { Loader } from 'components'\nimport { Wrapper, RemoveButton, DownloadButton } from './styled'\n\nexport const Canvas = ({\n  id, template, texts, background, onRemove\n}) => {\n  const [isReady, setReady] = useState(false)\n  const [canvas, setCanvas] = useState(null)\n  const { loadImage } = useContext(LinksData.ActionsContext)\n  const { changeResultItem } = useContext(Result.ActionsContext)\n\n  const canvasElRef = useCallback(async canvas => {\n    if (canvas !== null) {\n      setReady(false)\n      setCanvas(canvas)\n      const ctx = canvas.getContext('2d')\n      const bitmap = await loadImage(background)\n\n      editCanvas(ctx, {\n        ...template,\n        texts: texts.map((text, i) => ({\n          ...template.texts[i],\n          text\n        })).map(calcText),\n        background: {\n          ...template.background,\n          bitmap,\n          src: background\n        }\n      })\n\n      if (canvasElRef) {\n        setReady(true)\n      }\n\n      changeResultItem({\n        data: {\n          canvas,\n          bitmap,\n          texts,\n          background,\n          template\n        },\n        id\n      })\n    }\n  }, [template, texts, background, loadImage, changeResultItem, id, setReady])\n\n  const text = texts[0] || texts[1] || ''\n\n  return (\n    <Wrapper>\n      <Loader\n        isLoading={!isReady}\n      />\n\n      {isReady && <>\n        <DownloadButton\n          onClick={downloadCanvas({\n            canvas,\n            filename: `${template.width}x${template.height}_${id}_${text.substring(0, 5).replaceAll(' ', '-')}`\n          })}\n        >\n          download\n        </DownloadButton>\n\n        <RemoveButton\n          onClick={onRemove}\n        />\n      </>}\n\n      <canvas\n        style={{\n          display: isReady ? 'block' : 'none'\n        }}\n        ref={canvasElRef}\n        width={template.width}\n        height={template.height}\n      ></canvas>\n    </Wrapper>\n  )\n}\n","import styled, { keyframes, css } from 'styled-components'\n\nconst blink = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n`\n\nexport const Spinner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 10px;\n  justify-content: center;\n  align-content: center;\n  position: relative;\n  width: 40px;\n  height: 40px;\n\n  ${({ size }) => size === 's' && css`\n    width: 10px;\n    height: 0;\n  `}\n\n  div {\n    border: 8px solid #fff;\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${blink} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n\n    &:nth-child(2) {\n      animation-delay: -0.5s;\n    }\n  }\n`\n","import React from 'react'\nimport { Wrapper, Spinner } from './styled'\n\nexport const Loader = ({\n  isLoading = false,\n  size = 'm'\n}) => {\n  if (!isLoading) return null\n\n  return <Wrapper>\n    <Spinner size={size} >\n      <div></div><div></div>\n    </Spinner>\n  </Wrapper>\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-gap: 20px;\n`\n","import React, { useContext, useState } from 'react'\nimport { Wrapper } from './styled'\nimport { Banners, Combinations, Result } from 'store'\nimport { useDownload } from './useDownload'\n\nexport const ResultsActions = () => {\n  const [isLoading, setLoading] = useState(false)\n  const result = useContext(Result.Context)\n  const banners = useContext(Banners.BannersContext)\n  const { combinations } = useContext(Combinations.Context)\n  const download = useDownload({ setLoading })\n\n  const allLoaded = combinations.length > 0 &&\n    Object.keys(banners).length === combinations.length\n\n  return (\n    <Wrapper>\n      <button\n        onClick={() => download({ creatives: result })}\n        disabled={!allLoaded}\n      >\n        {isLoading\n          ? 'Собираем архив...'\n          : 'Скачать все архивом'\n        }\n      </button>\n    </Wrapper>\n  )\n}\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\n\nexport const useDownload = ({\n  setLoading\n}) => ({\n  creatives\n}) => {\n  setLoading(true)\n  const zip = new JSZip()\n\n  setTimeout(() => {\n    Object.entries(creatives).forEach(([key, creative]) => {\n      const filePromise = new Promise((resolve) => {\n        creative.canvas\n          // .toCanvas({\n          //   pixelRatio: 1 / creative.scale\n          // })\n          .toBlob(blob => {\n            resolve(blob)\n          })\n      })\n\n      const {\n        width, height\n      } = creative.template\n\n      const text = creative.texts[0] || creative.texts[1] || ''\n\n      zip.file(\n        `${width}x${height}_${key}_${text.substring(0, 5).replaceAll(' ', '-')}.png`,\n        filePromise\n      )\n    })\n\n    zip.generateAsync({ type: 'blob' })\n      .then(content => {\n        saveAs(content, 'creatives.zip')\n      })\n      .catch(error => {\n        console.warn(error)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  })\n}\n","import React from 'react'\nimport './style.css'\nimport { LinkToSource, Showtime, Review } from 'components'\nimport { LinksData, Combinations, Banners, Result } from 'store'\n\nexport const App = () => {\n  return (\n    <LinksData.Provider>\n      <Combinations.Provider>\n        <Banners.Provider>\n          <Result.Provider>\n            <div className=\"App\">\n              <header className=\"App-header\">\n                <div className=\"App-header-text\">\n                  In vino veritas\n                  In vino veritas\n                  In vino veritas\n                  In vino veritas\n                </div>\n                {/* <img src='http://127.0.0.1:3006/imageUrl/https%3A%2F%2Fimages.pexels.com%2Fphotos%2F36717%2Famazing-animal-beautiful-beautifull.jpg%3Fcs%3Dsrgb%26dl%3Dflight-landscape-nature-sky-36717.jpg%26fm%3Djpg' /> */}\n              </header>\n\n              <main className=\"App-main\">\n                <div className=\"App-main-row\">\n                  <LinkToSource />\n                </div>\n                <div className=\"App-main-row\">\n                  <Review />\n                </div>\n                <div className=\"App-main-row\">\n                  <Showtime />\n                </div>\n              </main>\n            </div>\n          </Result.Provider>\n        </Banners.Provider>\n      </Combinations.Provider>\n    </LinksData.Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'styles'\nimport { App } from 'components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}